(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1519335,      29861]
NotebookOptionsPosition[   1508597,      29663]
NotebookOutlinePosition[   1509242,      29686]
CellTagsIndexPosition[   1509199,      29683]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Chapter 7 : Data Exploration ", "Chapter",
 CellChangeTimes->{{3.908460992291771*^9, 3.908460999780625*^9}, {
  3.908461047000375*^9, 3.9084610529807453`*^9}, {3.911317325888257*^9, 
  3.911317328499206*^9}, {3.91331986327557*^9, 3.913319863492744*^9}, {
  3.913320266757555*^9, 
  3.913320270697102*^9}},ExpressionUUID->"05aaea1f-aebc-4bc0-9c65-\
3cedb1dee26b"],

Cell[CellGroupData[{

Cell["7.1 Wolfram Data Repository", "Section",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461022708924*^9}, {
  3.908461059053986*^9, 3.9084610628916907`*^9}, {3.9113173542639937`*^9, 
  3.91131735980259*^9}, {3.913320273973047*^9, 
  3.913320289293629*^9}},ExpressionUUID->"8b3c9f85-6795-4d78-a8be-\
aa7f610696fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLRead", "[", "\"\<https://datarepository.wolframcloud.com/\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.913321481889659*^9, 3.91332148189212*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"67baf88c-6f28-4ae7-b3a8-f29d4c49f6af"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"200\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"OK\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"text/html;charset=utf-8\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"200\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"OK\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"text/html;charset=utf-8\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[CompressedData["
1:eJzsvf2O3Nh1L5rzr5+C6QMEMzkiVdwfJMsZDaBMnMiA5Bixo9yDIDigqJKq
PNXdUld3jyUnwHmH+0T3Ve6T3PX7rbU3N6tK45k5luQL2B6xq0jW/lx7fX/8
9Yvrf3nx3/7qr/6q/X/+21999df/8M/f/PZ//voX1fb2cv/1z77Cn2o/Xr1+
dLG5uvj6Z1X11XYzvsQH+Xi5uR2raTveHDa3jy7+9bf/WA8X1UP5GR9sb2/f
1Ju3d7v7Rxf/V/2vj+tvri/fjLe7F/vNRTVdX91uruRXv/zFo83L15vid1fj
5ebRxf1u892b65vb4tXvdi9vt49ebu5306bmlwfV7mp3uxv39WEa95tH7Ukz
h8Ou3l+PLzcvi4Zub+6sw/3u6tvqZrOXF2/f7TeH7WYjPW5vNq8eXWD8h58/
fPjdd981313vX92Ml9PLq2a6vnz4Slo6PDxc393ISA7j1aF+c3P9sG1WD1/v
r1+M+2Y6HC5+QvP767uX7ODh9YvfPbzZaA+Hd4fbzeXD7zYv8h3rp7Yf1odv
d1dX72onY3Ayistxd2Vj+NlXh+lm9+a2OtxM3zsnWZ2DrI78vf52t6nta/M7
aeSrh9rG16mxr3/216/urqbb3fXVF1/+Yffqi4fN337xv/6X/vR/2U8ffdH+
p/vyy+ZvH+6a283h9ouX19PdJdrU97788g/34021eVQ0dfhudzttv/jr9ss/
TONhU7ePHj3aX08jHjfb68MtdrXZXb3c/P6fX31xIbCw2V98+fObze3dzdWF
zEvWnjfT7DC1i7/7IW1hiMdN4d6ypZebV+Pd/nb5WvnGf/3XF1/+3fjoO2n3
+rsHt4/SpB8ACLh4Fw+uH20eXD268M2qWV08kG2RRi4ejM2/aTuPr8b9u9vd
dPjnF7/bTLePpgfjv0//8QiX//zPYrG+wJ3m7SP985//+e//8WXz5u6w/WK8
ec0+D1/+14OTd/TO7aP2b68231X/MN5u9M7LR9f64f7R1YObR7JLNxt5+Iv9
Bk19sf/ywXdy8/Xm1u4c/v7db8fXv5I1lGf/vvqPBzfNeHh3NT1q5ROA7fp/
XDz83eHhxf+4kg9YJgGlB981b8Yb+fWvrl9i7Q+bm9u/37y6vtl8cfPgO+li
3H9x8fZuI+fzwV+v7PuLUWCi+L6/fn3x4OLN+HqDk32xuHsnLeL4Xxz9tj1q
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
+3A/TbcP15vy/Nmr+9cfISOwnXz7/wI1Llc=
    "]], <|
   "Headers" -> {{"date", "Wed, 28 Feb 2024 20:16:17 GMT"}, {
      "strict-transport-security", "max-age=2592000;"}, {
      "strict-transport-security", "max-age=2592000;"}, {
      "vary", "Origin,Accept-Encoding"}, {
      "cache-control", "public, max-age=60"}, {
      "x-generatedfrom", 
       "Generated from the Wolfram Cloud: http://www.wolfram.com/cloud"}, {
      "x-terms-of-use", 
       "Terms of use: \
http://www.wolfram.com/legal/terms/wolfram-cloud.html"}, {
      "x-data-source-information", 
       "Data source information: \
http://wolfram.com/knowledgebase/source-information"}, {
      "x-content-type-options", "nosniff"}, {
      "x-xss-protection", "1; mode=block"}, {
      "content-type", "text/html;charset=utf-8"}, {
      "content-encoding", "gzip"}, {"content-length", "35505"}, {
      "set-cookie", 
       "WR_SID=10.17.16.156.1709151377108821; path=/; expires=Sat, 25-Feb-34 \
20:16:17 GMT; domain=.wolfram.com"}, {
      "set-cookie", 
       "WR_SID=10.17.16.155.1709151377118004; path=/; max-age=315360000; \
domain=.wolframcloud.com"}, {
      "set-cookie", 
       "JSESSIONID=C28231AE281601FBC58B1BEE32351036; \
Domain=.wolframcloud.com; Path=/; HttpOnly"}}, "StatusCode" -> 200, 
    "Cookies" -> {<|
      "Domain" -> "wolframcloud.com", "Path" -> "/", "Name" -> "WR_SID", 
       "Content" -> "10.17.16.155.1709151377118004", "ExpirationDate" -> 
       DateObject[{2034, 2, 25, 14, 16, 17}, "Instant", "Gregorian", -6.], 
       "AllowSubdomains" -> True, "ConnectionType" -> All, "ScriptAccessible" -> 
       True|>, <|
      "Domain" -> "wolframcloud.com", "Path" -> "/", "Name" -> "JSESSIONID", 
       "Content" -> "C28231AE281601FBC58B1BEE32351036", "ExpirationDate" -> 
       Automatic, "AllowSubdomains" -> True, "ConnectionType" -> All, 
       "ScriptAccessible" -> False|>}|>, CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.913405021395062*^9, 3.913492860311906*^9, 3.913899373229674*^9, 
   3.913908659081533*^9, 3.913908905982959*^9, 3.913909787926461*^9, 
   3.914283710997507*^9, 3.914284226147197*^9, 3.91436131740466*^9, 
   3.914361727781292*^9, 3.9143618170545*^9, 3.914363416273056*^9, 
   3.914526493696243*^9, 3.914527502831533*^9, 3.914529472845048*^9, 
   3.91453098709973*^9, 3.9181395270290823`*^9, 3.918140016014874*^9, {
   3.9181401264221354`*^9, 3.918140134014834*^9}, 3.918140177610838*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"917a454f-ec82-4ac8-b663-94cc624f355f"]
}, Open  ]],

Cell["7.1.1 Wolfram Data Repository Website", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461022708924*^9}, {
  3.908461059053986*^9, 3.908461077601696*^9}, {3.9113173393909483`*^9, 
  3.91131737372746*^9}, {3.913320296208472*^9, 
  3.913320316384294*^9}},ExpressionUUID->"fcb5cbcb-a85c-493b-ba1e-\
a5e62b1e308d"],

Cell["7.1.2 Selecting a Category", "Subsection",
 CellChangeTimes->{{3.908717249975823*^9, 3.9087172588160157`*^9}, {
  3.9113173647932987`*^9, 3.911317380824477*^9}, {3.913320311371379*^9, 
  3.913320325490182*^9}, {3.913320370974421*^9, 
  3.913320374385376*^9}},ExpressionUUID->"86a3a917-bdcc-4a37-9160-\
2e26eaa35556"]
}, Closed]],

Cell[CellGroupData[{

Cell["7.2 Extracting Data from the Wolfram Data Repository", "Section",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 3.908461173177229*^9}, {3.911317539064699*^9, 
  3.911317543858119*^9}, {3.913320475804578*^9, 3.913320488267305*^9}, {
  3.913406197306363*^9, 
  3.913406197615613*^9}},ExpressionUUID->"1c0647c6-8067-45df-991f-\
aebdaa947119"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.913406215652101*^9, 3.913406215654405*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"90aa26e2-fea8-48bd-9620-29ec96c988a8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ResourceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             GraphicsBox[
              RasterBox[CompressedData["
1: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
               "], {{0, 0}, {180, 180}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              AspectRatio -> 1, Axes -> False, Background -> None, Frame -> 
               None, FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], AspectRatio -> 1, Axes -> False, 
               Background -> None, Frame -> None, FrameTicks -> None, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 180}, {0, 180}}, 
               ImageSizeRaw -> {180., 180.}}], CacheGraphics -> False, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Sample Data: Fisher's Irises\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://datarepository.wolframcloud.com/resources/\
b7f632f7-9c5f-4ad4-a73e-446cc2656f64/"}, "HyperlinkURL"]}, "RowDefault"], 
                  "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Fisher's iris data\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             GraphicsBox[
              RasterBox[CompressedData["
1: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
               "], {{0, 0}, {180, 180}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              AspectRatio -> 1, Axes -> False, Background -> None, Frame -> 
               None, FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], AspectRatio -> 1, Axes -> False, 
               Background -> None, Frame -> None, FrameTicks -> None, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 180}, {0, 180}}, 
               ImageSizeRaw -> {180., 180.}}], CacheGraphics -> False, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Sample Data: Fisher's Irises\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://datarepository.wolframcloud.com/resources/\
b7f632f7-9c5f-4ad4-a73e-446cc2656f64/"}, "HyperlinkURL"]}, "RowDefault"], 
                  "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Fisher's iris data\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"Statistics\"", "\"Life Science\"", 
                    "\"Machine Learning\""}, "RowWithSeparators"], Short], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ContentTypes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"Numerical Data\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"biology\"", "\"statistics\"", 
                    "\"ExampleData\"", "\"Iris\""}, "RowWithSeparators"], 
                   Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Documentation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                   "\"https://datarepository.wolframcloud.com/resources/\
b7f632f7-9c5f-4ad4-a73e-446cc2656f64/\"", 
                    "https://datarepository.wolframcloud.com/resources/\
b7f632f7-9c5f-4ad4-a73e-446cc2656f64/"}, "HyperlinkURL"], "SummaryItem"]}], 
               ""}, {
               RowBox[{
                 TagBox["\"Data Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  DynamicModuleBox[{
                   ResourceSystemClient`Private`typesetstorage$$ = 
                    ResourceSystemClient`Private`typesetstorageLocation, 
                    ResourceSystemClient`Private`info$$}, 
                   DynamicBox[
                    ToBoxes[
                    ResourceSystemClient`Private`info$$ = 
                    ResourceSystemClient`Private`resourceInfo[
                    "b7f632f7-9c5f-4ad4-a73e-446cc2656f64"]; If[
                    AssociationQ[ResourceSystemClient`Private`info$$], 
                    ResourceSystemClient`Private`typesetstorage$$[
                    Lookup[
                    ResourceSystemClient`Private`info$$, 
                    "ContentElementLocations", None]], 
                    Missing["NotAvailable"]], StandardForm]], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"b7f632f7-9c5f-4ad4-a73e-446cc2656f64\"", "SummaryItem"]}],
                ""}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.0.0\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "186.17600000000002`", "\"kB\"", "kilobytes", 
                    "\"Kilobytes\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"ColumnDescriptions\"", "\"ColumnTypes\"",
                     "\"Content\"", "\"DataType\"", "\"Dimensions\"", 
                    "\"ObservationCount\"", "\"RawData\"", "\"Source\"", 
                    "\"TrainingData\"", "\"TestData\""}, "RowWithSeparators"],
                    Short[#, 2]& ], "SummaryItem"]}], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ResourceObject[<|
   "Name" -> "Sample Data: Fisher's Irises", "UUID" -> 
    "b7f632f7-9c5f-4ad4-a73e-446cc2656f64", "ResourceType" -> "DataResource", 
    "Version" -> "3.0.0", "Description" -> "Fisher's iris data", 
    "RepositoryLocation" -> 
    URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
    "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
    Quantity[186.17600000000002`, "Kilobytes"], 
    "ContentElements" -> {
     "ColumnDescriptions", "ColumnTypes", "Content", "DataType", "Dimensions",
       "ObservationCount", "RawData", "Source", "TrainingData", "TestData"}|>,
    ResourceSystemBase -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.913406218579067*^9, 3.913492861264439*^9, 
  3.913899374334793*^9, 3.9139086600165443`*^9, 3.913908906861948*^9, 
  3.913909788854539*^9, 3.9142837121208553`*^9, 3.9142842273019958`*^9, 
  3.914361318414796*^9, 3.914361729087472*^9, 3.914361818010703*^9, 
  3.914363417565323*^9, 3.914526494738801*^9, 3.9145275037768793`*^9, 
  3.914529473875165*^9, 3.914530988112447*^9, 3.9181395659291553`*^9, 
  3.918140017135537*^9, 3.918140178738213*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"06e358ec-6223-471e-b93a-84e70319e65c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], "[", 
  "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.913407276064899*^9, 3.91340727876138*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"94981c6f-bc8e-421d-9bfe-4c3e31fc9a69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AllVersions\"\>", ",", "\<\"AutoUpdate\"\>", 
   ",", "\<\"Categories\"\>", ",", "\<\"ContentElementLocations\"\>", 
   ",", "\<\"ContentElements\"\>", ",", "\<\"ContentSize\"\>", 
   ",", "\<\"ContentTypes\"\>", ",", "\<\"ContributorInformation\"\>", 
   ",", "\<\"DatedElementVersions\"\>", ",", "\<\"DefaultContentElement\"\>", 
   ",", "\<\"Description\"\>", ",", "\<\"Details\"\>", 
   ",", "\<\"Documentation\"\>", ",", "\<\"DocumentationLink\"\>", 
   ",", "\<\"DOI\"\>", ",", "\<\"DownloadedVersion\"\>", 
   ",", "\<\"ExampleNotebook\"\>", ",", "\<\"ExampleNotebookObject\"\>", 
   ",", "\<\"Format\"\>", ",", "\<\"InformationElements\"\>", 
   ",", "\<\"Keywords\"\>", ",", "\<\"LatestUpdate\"\>", ",", "\<\"Name\"\>", 
   ",", "\<\"Originator\"\>", ",", "\<\"Properties\"\>", 
   ",", "\<\"PublisherUUID\"\>", ",", "\<\"ReleaseDate\"\>", 
   ",", "\<\"RepositoryLocation\"\>", ",", "\<\"ResourceLocations\"\>", 
   ",", "\<\"ResourceType\"\>", ",", "\<\"SeeAlso\"\>", 
   ",", "\<\"ShortName\"\>", ",", "\<\"SourceMetadata\"\>", 
   ",", "\<\"UUID\"\>", ",", "\<\"Version\"\>", 
   ",", "\<\"VersionInformation\"\>", ",", "\<\"VersionsAvailable\"\>", 
   ",", "\<\"WolframLanguageVersionRequired\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.9134072792816668`*^9, 3.913492861273457*^9, 
  3.9138993746386423`*^9, 3.9139086601596947`*^9, 3.913908906966757*^9, 
  3.913909788999655*^9, 3.914283712400866*^9, 3.914284227442365*^9, 
  3.914361318562429*^9, 3.9143617292204857`*^9, 3.914361818148007*^9, 
  3.914363417629936*^9, 3.914526495033156*^9, 3.914527503918861*^9, 
  3.914529474013446*^9, 3.914530988266823*^9, 3.918139566117626*^9, 
  3.918140017308874*^9, 3.9181401789719133`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"670dfbd2-a46f-4633-9835-2cd3b235cbb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], "[", 
  "\"\<ExampleNotebook\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.913407417029481*^9, 3.913407417031698*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"de13d540-3ae9-4f8d-b1c5-3ab0127e81d8"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "48da7312-941f-495f-97f9-1e8106d61e6d", 
     "f0f772a0-bb42-4428-a144-caf989d763e4"], "label" -> 
   "\"Sample Data: Fisher's Irises | Example Notebook\""|>,
  "NotebookObjectUUIDsUnsaved"]], "Output",
 CellChangeTimes->{3.913407444097273*^9, 3.913492861364567*^9, 
  3.913899378319543*^9, 3.91390866349769*^9, 3.913908910083919*^9, 
  3.913909792197285*^9, 3.914283715560266*^9, 3.914284230691253*^9, 
  3.914361325948299*^9, 3.914361733181044*^9, 3.914361822840136*^9, 
  3.914363425864945*^9, 3.914526498166814*^9, 3.914527507076717*^9, 
  3.914529477326925*^9, 3.914530991462456*^9, 3.918139591542925*^9, 
  3.918140020492633*^9, 3.9181401826188383`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"a4ca6825-fddf-421c-a4d0-919c7a0a3f93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], "[", 
  "\"\<ExampleNotebookObject\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9134076132876997`*^9, 3.913407615561905*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"08788d1b-1873-4359-b4aa-db299050698e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/5e59b79e-d95e-4f6f-a7c8-f1276ba17be2\"\
", "https://www.wolframcloud.com/obj/5e59b79e-d95e-4f6f-a7c8-f1276ba17be2"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/5e59b79e-d95e-4f6f-a7c8-f1276ba17be2"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.9134076168029137`*^9, 3.9134928614152603`*^9, 
  3.913899378503805*^9, 3.913908663755512*^9, 3.913908910285955*^9, 
  3.913909792392593*^9, 3.914283715761138*^9, 3.914284230879464*^9, 
  3.914361326170815*^9, 3.914361733712975*^9, 3.91436182306176*^9, 
  3.914363425892448*^9, 3.914526498387332*^9, 3.914527507257277*^9, 
  3.9145294775111513`*^9, 3.914530991713011*^9, 3.9181396183200407`*^9, 
  3.918140020700411*^9, 3.918140188347234*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d0a2e03a-86da-4b37-8e4b-fda1d73430d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], "[", 
  "\"\<Documentation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.913407986595324*^9, 3.9134079865984917`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"a61a9066-e9ad-44ac-bb28-4df2335d052b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://datarepository.wolframcloud.com/resources/b7f632f7-9c5f-4ad4-\
a73e-446cc2656f64/\""},
   "URLArgument"], "]"}]], "Output",
 CellChangeTimes->{3.913407987717901*^9, 3.9134928616754208`*^9, 
  3.913899378620055*^9, 3.91390866382624*^9, 3.913908910345815*^9, 
  3.913909792471581*^9, 3.9142837158828497`*^9, 3.9142842309537354`*^9, 
  3.914361326313592*^9, 3.914361733784492*^9, 3.914361823118048*^9, 
  3.914363425964695*^9, 3.91452649850077*^9, 3.914527507344267*^9, 
  3.914529477577527*^9, 3.91453099182073*^9, 3.9181396228551598`*^9, 
  3.9181400207574177`*^9, 3.9181401902566147`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"b7ba3689-f0c9-4f2f-98fc-253a0ec51d7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.2.1 Accessing Data Inside Mathematica", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 3.908461198842817*^9}, {3.911317563580776*^9, 
  3.911317570922584*^9}, {3.91332048992058*^9, 3.913320513325769*^9}, {
  3.913406198954735*^9, 
  3.913406201278908*^9}},ExpressionUUID->"24100989-cb59-4b85-8f4f-\
f1966cfb53aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.913408142523808*^9, 3.913408142526896*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"11048cd4-914b-4a73-86df-c31bb32c6d11"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.7, "Centimeters"], 
        "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
        "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.9, "Centimeters"], "PetalLength" -> 
        Quantity[1.7, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"], 
        "SepalWidth" -> Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
        "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.1, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.1, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.3, "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.1, "Centimeters"], "PetalWidth" -> 
        Quantity[0.1, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.8, "Centimeters"], 
        "SepalWidth" -> Quantity[4., "Centimeters"], "PetalLength" -> 
        Quantity[1.2, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.7, "Centimeters"], 
        "SepalWidth" -> Quantity[4.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.9, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.7, "Centimeters"], 
        "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[1.7, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.7, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
        "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
        Quantity[1., "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[1.7, "Centimeters"], "PetalWidth" -> 
        Quantity[0.5, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.9, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.7, "Centimeters"], 
        "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
        "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"], 
        "SepalWidth" -> Quantity[4.1, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.1, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.5, "Centimeters"], 
        "SepalWidth" -> Quantity[4.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
        "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.2, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.5, "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
        "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.1, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.5, "Centimeters"], 
        "SepalWidth" -> Quantity[2.3, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.6, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[1.9, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
        "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5.3, "Centimeters"], 
        "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[7., "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[4.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[4.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.3, "Centimeters"], "PetalLength" -> 
        Quantity[4., "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[4.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1.6, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[4.9, "Centimeters"], "SepalWidth" -> 
        Quantity[2.4, "Centimeters"], "PetalLength" -> 
        Quantity[3.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.6, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.2, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[3.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5., "Centimeters"], "SepalWidth" -> 
        Quantity[2., "Centimeters"], "PetalLength" -> 
        Quantity[3.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.2, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6., "Centimeters"], "SepalWidth" -> 
        Quantity[2.2, "Centimeters"], "PetalLength" -> 
        Quantity[4., "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[3.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[4.4, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[4.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.2, "Centimeters"], "SepalWidth" -> 
        Quantity[2.2, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[3.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.1, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[4.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4., "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[4.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1.2, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.6, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.4, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5., "Centimeters"], "PetalWidth" -> 
        Quantity[1.7, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6., "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.6, "Centimeters"], "PetalLength" -> 
        Quantity[3.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.4, "Centimeters"], "PetalLength" -> 
        Quantity[3.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.1, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.4, "Centimeters"], "PetalLength" -> 
        Quantity[3.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[3.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.2, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6., "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.6, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.4, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6., "Centimeters"], "SepalWidth" -> 
        Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.6, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[4.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.3, "Centimeters"], "PetalLength" -> 
        Quantity[4.4, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[4., "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.6, "Centimeters"], "PetalLength" -> 
        Quantity[4.4, "Centimeters"], "PetalWidth" -> 
        Quantity[1.2, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.6, "Centimeters"], "PetalLength" -> 
        Quantity[4., "Centimeters"], "PetalWidth" -> 
        Quantity[1.2, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5., "Centimeters"], "SepalWidth" -> 
        Quantity[2.3, "Centimeters"], "PetalLength" -> 
        Quantity[3.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[4.2, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.2, "Centimeters"], "PetalWidth" -> 
        Quantity[1.2, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.2, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.2, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.1, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[3., "Centimeters"], "PetalWidth" -> 
        Quantity[1.1, "Centimeters"]|>, <|
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[6., "Centimeters"], "PetalWidth" -> 
        Quantity[2.5, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.9, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.1, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.9, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.5, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.8, "Centimeters"], "PetalWidth" -> 
        Quantity[2.2, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.6, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[6.6, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[4.9, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.7, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[6.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[5.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.2, "Centimeters"], "SepalWidth" -> 
        Quantity[3.6, "Centimeters"], "PetalLength" -> 
        Quantity[6.1, "Centimeters"], "PetalWidth" -> 
        Quantity[2.5, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.5, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[5.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1.9, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.8, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.5, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[5., "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[2.4, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[5.3, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.5, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[6.7, "Centimeters"], "PetalWidth" -> 
        Quantity[2.2, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.6, "Centimeters"], "PetalLength" -> 
        Quantity[6.9, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> Quantity[6., "Centimeters"],
         "SepalWidth" -> Quantity[2.2, "Centimeters"], "PetalLength" -> 
        Quantity[5., "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[5.7, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.9, "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[6.7, "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[4.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[5.7, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.2, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[6., "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.2, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.2, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.6, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.4, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[6.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.9, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[6.4, "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[2.2, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[2.6, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[6.1, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[2.4, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[5.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> Quantity[6., "Centimeters"],
         "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[5.4, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[2.4, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.9, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.8, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[5.9, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[5.7, "Centimeters"], "PetalWidth" -> 
        Quantity[2.5, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.2, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[5., "Centimeters"], "PetalWidth" -> 
        Quantity[1.9, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.5, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.2, "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.2, "Centimeters"], "SepalWidth" -> 
        Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[5.4, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]|>, <|
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Species"} -> 
        1, {All, "SepalLength"} -> 1, {All, "SepalWidth"} -> 
        1, {All, "PetalLength"} -> 1, {All, "PetalWidth"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Species" -> TypeSystem`PackageScope`AtomShape[105.], 
            "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
            "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
            "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
            "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Species", "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 150], 
     "Meta" -> <|"ID" -> 63119045223059|>, "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Species"} -> 
        1, {All, "SepalLength"} -> 1, {All, "SepalWidth"} -> 
        1, {All, "PetalLength"} -> 1, {All, "PetalWidth"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Species" -> TypeSystem`PackageScope`AtomShape[105.], 
            "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
            "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
            "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
            "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Species", "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 150], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     150, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Species", 
                  Style[
                  "Species", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Species"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Species"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SepalLength"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SepalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SepalWidth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SepalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PetalLength"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PetalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PetalWidth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PetalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 150, 1], {1, 150 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 150, 1], {1, 150 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[150, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[150, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 150, 1], {1, 150 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 150, 1], {1, 150 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{451., {234.85052490234375`, 239.14947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{451., {234.85052490234375`, 239.14947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.913408146052203*^9, 3.913492861787712*^9, 
  3.913899378727981*^9, 3.913908663925469*^9, 3.9139089104462023`*^9, 
  3.913909792570319*^9, 3.9142837160091267`*^9, 3.914284231106319*^9, 
  3.914361326457925*^9, 3.914361733942464*^9, 3.914361823278322*^9, 
  3.914363426147143*^9, 3.914526498602961*^9, 3.91452750744766*^9, 
  3.9145294778039417`*^9, 3.914530991960677*^9, 3.918139639134406*^9, 
  3.91814002087685*^9, 3.9181401971458273`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"a57e6eaf-093d-4419-ad5e-94fb543ead5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], "[", 
  "\"\<ContentElements\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9134084394682207`*^9, 3.9134084394712877`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"8d7378c7-7d84-478d-82c0-67cd6c4604a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ColumnDescriptions\"\>", ",", "\<\"ColumnTypes\"\>", 
   ",", "\<\"Content\"\>", ",", "\<\"DataType\"\>", ",", "\<\"Dimensions\"\>",
    ",", "\<\"ObservationCount\"\>", ",", "\<\"RawData\"\>", 
   ",", "\<\"Source\"\>", ",", "\<\"TrainingData\"\>", 
   ",", "\<\"TestData\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.913408440549437*^9, 3.913492862128532*^9, 
  3.913899378961355*^9, 3.913908663929601*^9, 3.913908910450639*^9, 
  3.913909792574792*^9, 3.914283716014572*^9, 3.914284231325611*^9, 
  3.914361326714396*^9, 3.9143617339508877`*^9, 3.914361823282048*^9, 
  3.9143634261562*^9, 3.91452649860709*^9, 3.914527507452098*^9, 
  3.914529477828443*^9, 3.914530991966059*^9, 3.918139654969749*^9, 
  3.918140021103736*^9, 3.918140198850005*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"efff1b93-43d7-49ce-adf8-0daf78bded75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  RowBox[{
   RowBox[{
   "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], ",", 
   "\"\<ColumnTypes\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.913408635872614*^9, 3.913408639698276*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"9b7ab18e-f819-427f-b4f8-116da9828a11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Numeric\"\>", ",", "\<\"Numeric\"\>", ",", "\<\"Numeric\"\>", 
   ",", "\<\"Numeric\"\>", ",", "\<\"Categorical\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.913408641002222*^9, 3.9134928621476607`*^9, 
  3.913899378981328*^9, 3.913908663940536*^9, 3.91390891046286*^9, 
  3.9139097925911093`*^9, 3.9142837160406103`*^9, 3.9142842313447313`*^9, 
  3.914361326729251*^9, 3.914361733971336*^9, 3.914361823293622*^9, 
  3.914363426181038*^9, 3.914526498622262*^9, 3.914527507466983*^9, 
  3.9145294778548737`*^9, 3.914530991979453*^9, 3.918139656734124*^9, 
  3.918140021125759*^9, 3.918140200281082*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"fffc3ea2-2040-4b68-9c61-67cf03738608"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceData", "[", 
     RowBox[{
      RowBox[{
      "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], 
      ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<ColumnDescriptions\>\"", ",", "\"\<Dimensions\>\"", ",", 
     "\"\<Source\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.913408822741171*^9, 3.913408825009711*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"6c3b0ead-440e-45f5-b7fa-6929ad2210e9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"\<\"Sepal length in cm.\"\>", 
       ",", "\<\"Sepal width in cm.\"\>", ",", "\<\"Petal length in cm.\"\>", 
       ",", "\<\"Petal width in cm.\"\>", ",", "\<\"Species of iris\"\>"}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"150", ",", "4"}], "}"}]},
    {"\<\"Fisher,R.A. \\\"The use of multiple measurements in taxonomic \
problems\\\" Annual Eugenics, 7, Part II, 179-188 (1936); also in \
\\\"Contributions to Mathematical Statistics\\\" (John Wiley, NY, 1950). \"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.913408825769454*^9, 3.91349286217141*^9, 
  3.913899379000258*^9, 3.913908663953374*^9, 3.913908910474907*^9, 
  3.913909792613158*^9, 3.914283716063406*^9, 3.914284231371048*^9, 
  3.914361326751602*^9, 3.914361733985076*^9, 3.914361823312695*^9, 
  3.914363426216934*^9, 3.914526498642654*^9, 3.914527507477323*^9, 
  3.914529477893962*^9, 3.914530991989684*^9, 3.9181396579633417`*^9, 
  3.918140021143071*^9, 3.918140201578268*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"b4ecc23d-0f06-4961-807b-41f64e4fff8f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.2.2 Data Observation and Querying", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 3.908461198842817*^9}, {3.911317563580776*^9, 
  3.911317570922584*^9}, {3.911317605207547*^9, 3.911317616167289*^9}, {
  3.913320534317499*^9, 3.913320556803418*^9}, {3.913406202817471*^9, 
  3.913406202901097*^9}, {3.913408938402847*^9, 3.913408939037372*^9}, {
  3.913902310654727*^9, 
  3.913902314094389*^9}},ExpressionUUID->"8a0262d6-0ee9-44b6-a665-\
9da73ecaa4de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fisher", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{
    "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9134089397934623`*^9, 3.913408939797111*^9}, {
  3.9181396861585712`*^9, 3.918139686294907*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"266e865a-9bd7-4671-b94e-43768bab37c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fisher", "[", 
  RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.913492906627296*^9, 3.9134929066296377`*^9}, {
  3.918139688259233*^9, 3.918139688369569*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"001f2e24-ac8c-4819-a2e2-e2f7179b56b7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "setosa" -> {<|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"],
           "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.7, "Centimeters"],
           "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"],
           "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"],
           "SepalWidth" -> Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"],
           "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"],
           "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.3, "Centimeters"],
           "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.1, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.8, "Centimeters"],
           "SepalWidth" -> Quantity[4., "Centimeters"], "PetalLength" -> 
          Quantity[1.2, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.7, "Centimeters"],
           "SepalWidth" -> Quantity[4.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.7, "Centimeters"],
           "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"],
           "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1., "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.5, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.9, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"],
           "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.7, "Centimeters"],
           "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"],
           "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"],
           "SepalWidth" -> Quantity[4.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.5, "Centimeters"],
           "SepalWidth" -> Quantity[4.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"],
           "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.2, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.5, "Centimeters"],
           "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"],
           "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"],
           "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.5, "Centimeters"],
           "SepalWidth" -> Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.6, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.9, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"],
           "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"],
           "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5.3, "Centimeters"],
           "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>}, 
       "versicolor" -> {<|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[7., "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[2., "Centimeters"], "PetalLength" -> 
          Quantity[3.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[3.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.7, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[3.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[3.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[3., "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]|>, <|
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>}, 
       "virginica" -> {<|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[6., "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[6.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.7, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[6.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.3, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[6.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[6., "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.2, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.2, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[5.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "Species"} -> 
        1, {All, All, "SepalLength"} -> 1, {All, All, "SepalWidth"} -> 
        1, {All, All, "PetalLength"} -> 1, {All, All, "PetalWidth"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[105.], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "Species" -> TypeSystem`PackageScope`AtomShape[105.], 
               "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]|>], 
             DirectedInfinity[1], 5, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "Species", "SepalLength", "SepalWidth", "PetalLength", 
          "PetalWidth"}, {
          TypeSystem`Atom[
           TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]]}], 50], 3], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "Species"} -> 
        1, {All, All, "SepalLength"} -> 1, {All, All, "SepalWidth"} -> 
        1, {All, All, "PetalLength"} -> 1, {All, All, "PetalWidth"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[105.], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "Species" -> TypeSystem`PackageScope`AtomShape[105.], 
               "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]|>], 
             DirectedInfinity[1], 5, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "Species", "SepalLength", "SepalWidth", "PetalLength", 
          "PetalWidth"}, {
          TypeSystem`Atom[
           TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]]}], 50], 3], "Path" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     3, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Species", 
                  Style[
                  "Species", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Species"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Species"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "SepalLength"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "SepalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "SepalWidth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "SepalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "PetalLength"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "PetalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "PetalWidth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "PetalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["setosa"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 1, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 2, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 3, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 4, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 5, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["setosa"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["versicolor"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["versicolor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 1, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"7.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["versicolor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 2, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["versicolor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 3, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["versicolor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 4, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["versicolor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 5, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["versicolor"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["virginica"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["virginica", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 1, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["virginica", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 2, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["virginica", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 3, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"7.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["virginica", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 4, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["virginica", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 5, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["virginica"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{548., {196.35052490234375`, 200.64947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{548., {196.35052490234375`, 200.64947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.913492907827413*^9, 3.9138991757333508`*^9, 
  3.9138993790858*^9, 3.913908664034135*^9, 3.913908910567009*^9, 
  3.913909792693646*^9, 3.914283716166153*^9, 3.914284231454399*^9, 
  3.914361326854114*^9, 3.914361734103756*^9, 3.91436182339566*^9, 
  3.914363426381362*^9, 3.914526498742422*^9, 3.914527507561349*^9, 
  3.914529478004114*^9, 3.914530992116813*^9, 3.918139692206892*^9, 
  3.918140021282136*^9, 3.918140208299362*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"692bad22-912a-4882-bbde-35c602ddc757"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"GroupBy", "[", 
    RowBox[{
     RowBox[{"Key", "[", "\"\<Species\>\"", "]"}], "->", 
     RowBox[{"KeyTake", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
        "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], "]"}]}], 
    "]"}], "]"}], "[", "fisher", "]"}]], "Input",
 CellChangeTimes->{{3.913492918623119*^9, 3.913492922540663*^9}, {
  3.9181397097092047`*^9, 3.9181397099920387`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"41ef7c4b-2ee4-4125-b274-25ea1e9d467f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "setosa" -> {<|
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.1, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[4., "Centimeters"], "PetalLength" -> 
          Quantity[1.2, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[4.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1., "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.9, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.2, "Centimeters"], "SepalWidth" -> 
          Quantity[4.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[4.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.2, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.6, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.9, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]|>}, 
       "versicolor" -> {<|
         "SepalLength" -> Quantity[7., "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[2., "Centimeters"], "PetalLength" -> 
          Quantity[3.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[3.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.7, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[3.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[3.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[3., "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]|>}, 
       "virginica" -> {<|
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[6., "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[6.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.7, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[6.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.3, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[6.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[6., "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.2, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.2, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]|>, <|
         "SepalLength" -> Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[5.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]|>, <|
         "SepalLength" -> Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]|>}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 
        1, {All, All, "SepalLength"} -> 1, {All, All, "SepalWidth"} -> 
        1, {All, All, "PetalLength"} -> 1, {All, All, "PetalWidth"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[105.], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]|>], 
             DirectedInfinity[1], 4, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]]}], 50], 3], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 
        1, {All, All, "SepalLength"} -> 1, {All, All, "SepalWidth"} -> 
        1, {All, All, "PetalLength"} -> 1, {All, All, "PetalWidth"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[105.], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]|>], 
             DirectedInfinity[1], 4, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]]}], 50], 3], "Path" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     3, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "SepalLength"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "SepalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "SepalWidth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "SepalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "PetalLength"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "PetalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "PetalWidth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "PetalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["setosa"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["setosa"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["versicolor"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"7.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["versicolor"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["virginica"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"7.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["virginica"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
    "d7d07dfb-532c-4c0f-9f1b-0b0da50a7150"][{
      Key[15], 
      Key["SepalWidth"]}, "Item", False]}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{437., {196.35052490234375`, 200.64947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{437., {196.35052490234375`, 200.64947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.913492924124793*^9, 3.913899197919095*^9, 
  3.913899379290683*^9, 3.913908664108531*^9, 3.913908910642849*^9, 
  3.913909792760545*^9, 3.914283716250601*^9, 3.914284231530979*^9, 
  3.914361326929853*^9, 3.914361734170301*^9, 3.914361823458913*^9, 
  3.914363426459069*^9, 3.91452649885122*^9, 3.914527507636438*^9, 
  3.9145294780747623`*^9, 3.91453099218546*^9, 3.918139710737591*^9, 
  3.918140021509077*^9, 3.918140210044238*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"47faedfa-cb8b-4a10-84ee-5b232d40239d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "#"}], "]"}], "->", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "#"}], "]"}]}], "]"}], "]"}], "[", "fisher", 
    "]"}], "&"}], "[", "fisher", "]"}]], "Input",
 CellChangeTimes->{{3.913492934282406*^9, 3.913492937139443*^9}, {
  3.918139727775593*^9, 3.918139732100515*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"61547f77-df5d-4fe8-95f8-730efc897f42"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       2 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       3 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       4 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       5 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[3.6, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       6 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.9, "Centimeters"], "PetalLength" -> 
         Quantity[1.7, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]|>, 
       7 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]|>, 
       8 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       9 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       10 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.1, "Centimeters"]|>, 
       11 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.7, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       12 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.8, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       13 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.8, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.1, "Centimeters"]|>, 
       14 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.3, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.1, "Centimeters"], "PetalWidth" -> 
         Quantity[0.1, "Centimeters"]|>, 
       15 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[4., "Centimeters"], "PetalLength" -> 
         Quantity[1.2, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       16 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[4.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]|>, 
       17 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.9, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]|>, 
       18 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]|>, 
       19 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[1.7, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]|>, 
       20 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]|>, 
       21 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.7, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       22 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3.7, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]|>, 
       23 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3.6, "Centimeters"], "PetalLength" -> 
         Quantity[1., "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       24 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[1.7, "Centimeters"], "PetalWidth" -> 
         Quantity[0.5, "Centimeters"]|>, 
       25 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.8, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.9, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       26 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       27 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]|>, 
       28 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.2, "Centimeters"], "SepalWidth" -> 
         Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       29 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.2, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       30 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       31 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.8, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       32 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]|>, 
       33 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.2, "Centimeters"], "SepalWidth" -> 
         Quantity[4.1, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.1, "Centimeters"]|>, 
       34 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[4.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       35 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       36 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.2, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       37 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       38 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.6, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.1, "Centimeters"]|>, 
       39 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       40 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       41 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]|>, 
       42 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.3, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]|>, 
       43 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       44 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.6, "Centimeters"]|>, 
       45 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[1.9, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]|>, 
       46 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.8, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]|>, 
       47 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       48 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[4.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       49 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5.3, "Centimeters"], "SepalWidth" -> 
         Quantity[3.7, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       50 -> <|"Species" -> "setosa", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]|>, 
       51 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[7., "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[4.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]|>, 
       52 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       53 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[4.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       54 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.3, "Centimeters"], "PetalLength" -> 
         Quantity[4., "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       55 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       56 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       57 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[4.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1.6, "Centimeters"]|>, 
       58 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[4.9, "Centimeters"], "SepalWidth" -> 
         Quantity[2.4, "Centimeters"], "PetalLength" -> 
         Quantity[3.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]|>, 
       59 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.6, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       60 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.2, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[3.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]|>, 
       61 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[2., "Centimeters"], "PetalLength" -> 
         Quantity[3.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]|>, 
       62 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.2, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       63 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[2.2, "Centimeters"], "PetalLength" -> 
         Quantity[4., "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]|>, 
       64 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]|>, 
       65 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[3.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       66 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[4.4, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]|>, 
       67 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       68 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[4.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]|>, 
       69 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.2, "Centimeters"], "SepalWidth" -> 
         Quantity[2.2, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       70 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[3.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.1, "Centimeters"]|>, 
       71 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[4.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       72 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4., "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       73 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[4.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       74 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1.2, "Centimeters"]|>, 
       75 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       76 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.4, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]|>, 
       77 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]|>, 
       78 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5., "Centimeters"], "PetalWidth" -> 
         Quantity[1.7, "Centimeters"]|>, 
       79 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       80 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.6, "Centimeters"], "PetalLength" -> 
         Quantity[3.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]|>, 
       81 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.4, "Centimeters"], "PetalLength" -> 
         Quantity[3.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.1, "Centimeters"]|>, 
       82 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.4, "Centimeters"], "PetalLength" -> 
         Quantity[3.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]|>, 
       83 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[3.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.2, "Centimeters"]|>, 
       84 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.6, "Centimeters"]|>, 
       85 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       86 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.6, "Centimeters"]|>, 
       87 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[4.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       88 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.3, "Centimeters"], "PetalLength" -> 
         Quantity[4.4, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       89 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       90 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[4., "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       91 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.6, "Centimeters"], "PetalLength" -> 
         Quantity[4.4, "Centimeters"], "PetalWidth" -> 
         Quantity[1.2, "Centimeters"]|>, 
       92 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]|>, 
       93 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.6, "Centimeters"], "PetalLength" -> 
         Quantity[4., "Centimeters"], "PetalWidth" -> 
         Quantity[1.2, "Centimeters"]|>, 
       94 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[2.3, "Centimeters"], "PetalLength" -> 
         Quantity[3.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]|>, 
       95 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[4.2, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       96 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.2, "Centimeters"], "PetalWidth" -> 
         Quantity[1.2, "Centimeters"]|>, 
       97 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.2, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       98 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.2, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       99 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.1, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[3., "Centimeters"], "PetalWidth" -> 
         Quantity[1.1, "Centimeters"]|>, 
       100 -> <|"Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]|>, 
       101 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[6., "Centimeters"], "PetalWidth" -> 
         Quantity[2.5, "Centimeters"]|>, 
       102 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.9, "Centimeters"]|>, 
       103 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.9, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]|>, 
       104 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       105 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.5, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.8, "Centimeters"], "PetalWidth" -> 
         Quantity[2.2, "Centimeters"]|>, 
       106 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[6.6, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]|>, 
       107 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[4.9, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.7, "Centimeters"]|>, 
       108 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[6.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       109 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[5.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       110 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.2, "Centimeters"], "SepalWidth" -> 
         Quantity[3.6, "Centimeters"], "PetalLength" -> 
         Quantity[6.1, "Centimeters"], "PetalWidth" -> 
         Quantity[2.5, "Centimeters"]|>, 
       111 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.5, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]|>, 
       112 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[5.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1.9, "Centimeters"]|>, 
       113 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.8, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.5, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]|>, 
       114 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[5., "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]|>, 
       115 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[2.4, "Centimeters"]|>, 
       116 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[5.3, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]|>, 
       117 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.5, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       118 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[6.7, "Centimeters"], "PetalWidth" -> 
         Quantity[2.2, "Centimeters"]|>, 
       119 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.6, "Centimeters"], "PetalLength" -> 
         Quantity[6.9, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]|>, 
       120 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[2.2, "Centimeters"], "PetalLength" -> 
         Quantity[5., "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       121 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[5.7, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]|>, 
       122 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.9, "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]|>, 
       123 -> <|
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[6.7, "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]|>, 
       124 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[4.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       125 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[5.7, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]|>, 
       126 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.2, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[6., "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       127 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.2, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       128 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       129 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]|>, 
       130 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.2, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.6, "Centimeters"]|>, 
       131 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[6.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.9, "Centimeters"]|>, 
       132 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[6.4, "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]|>, 
       133 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[2.2, "Centimeters"]|>, 
       134 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]|>, 
       135 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[2.6, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]|>, 
       136 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[7.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[6.1, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]|>, 
       137 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[2.4, "Centimeters"]|>, 
       138 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[5.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       139 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>, 
       140 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[5.4, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]|>, 
       141 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[2.4, "Centimeters"]|>, 
       142 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]|>, 
       143 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.9, "Centimeters"]|>, 
       144 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.8, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[5.9, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]|>, 
       145 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[5.7, "Centimeters"], "PetalWidth" -> 
         Quantity[2.5, "Centimeters"]|>, 
       146 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.2, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]|>, 
       147 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[5., "Centimeters"], "PetalWidth" -> 
         Quantity[1.9, "Centimeters"]|>, 
       148 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.5, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.2, "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]|>, 
       149 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[6.2, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[5.4, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]|>, 
       150 -> <|"Species" -> "virginica", "SepalLength" -> 
         Quantity[5.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "Species"} -> 
        1, {All, "SepalLength"} -> 1, {All, "SepalWidth"} -> 
        1, {All, "PetalLength"} -> 1, {All, "PetalWidth"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Species" -> TypeSystem`PackageScope`AtomShape[105.], 
             "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]|>], 
           DirectedInfinity[1], 5, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{
        "Species", "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 150], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "Species"} -> 
        1, {All, "SepalLength"} -> 1, {All, "SepalWidth"} -> 
        1, {All, "PetalLength"} -> 1, {All, "PetalWidth"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Species" -> TypeSystem`PackageScope`AtomShape[105.], 
             "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]|>], 
           DirectedInfinity[1], 5, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{
        "Species", "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 150], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     150, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Species", 
                  Style[
                  "Species", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Species"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Species"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SepalLength"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SepalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SepalWidth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SepalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PetalLength"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PetalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PetalWidth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PetalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.6`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[15]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[15], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[16]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[16], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[17]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.9`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[17], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[18]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[18], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[19]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.7`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[19], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[20]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.8`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.5`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.3`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[20], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 150, 1], {1, 150 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 150, 1], {1, 150 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[150, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[150, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 150, 1], {1, 150 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 150, 1], {1, 150 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{491., {234.85052490234375`, 239.14947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{491., {234.85052490234375`, 239.14947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.913492938299088*^9, 3.913899200295546*^9, 
  3.913899379532792*^9, 3.913908664190769*^9, 3.913908910728697*^9, 
  3.913909792841734*^9, 3.914283716352293*^9, 3.914284231625806*^9, 
  3.914361327029727*^9, 3.914361734270726*^9, 3.914361823539341*^9, 
  3.914363426556049*^9, 3.914526498954115*^9, 3.914527507720829*^9, 
  3.9145294781561317`*^9, 3.914530992279025*^9, 3.918139732641211*^9, 
  3.9181400217622538`*^9, 3.918140213197628*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"da5c81a7-4a55-4341-9728-42b974743341"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fisher", "[", 
  RowBox[{"Counts", ",", "\"\<Species\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.913492947531871*^9, 3.913492947534893*^9}, {
  3.9181397532358*^9, 3.918139753350733*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d1bf3ac9-b471-4375-802f-361c78cabac8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "setosa" -> 50, "versicolor" -> 50, "virginica" -> 50|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.], 
         TypeSystem`PackageScope`AtomShape[34]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Integer], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.], 
         TypeSystem`PackageScope`AtomShape[34]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Integer], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["setosa"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["versicolor"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["virginica"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{153., {37.35052490234375, 41.64947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{153., {37.35052490234375, 41.64947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.913492948753323*^9, 3.913899202764468*^9, 
  3.913899379827224*^9, 3.913908664206944*^9, 3.913908910762291*^9, 
  3.913909792868641*^9, 3.914283716372315*^9, 3.914284231640364*^9, 
  3.914361327069312*^9, 3.914361734325095*^9, 3.9143618235535707`*^9, 
  3.914363426573084*^9, 3.914526498974172*^9, 3.914527507755224*^9, 
  3.91452947817342*^9, 3.914530992295149*^9, 3.918139758636036*^9, 
  3.918140022080381*^9, 3.918140214870874*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"a8f74fd0-c153-4796-b0db-3fff9d81e955"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
    RowBox[{"GroupBy", "[", 
     RowBox[{
      RowBox[{"Key", "[", "\"\<Species\>\"", "]"}], "->", 
      RowBox[{"KeyTake", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
         "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], "]"}]}], 
     "]"}], ",", "Mean"}], "]"}], "[", "fisher", "]"}]], "Input",
 CellChangeTimes->{{3.913492955463168*^9, 3.913492958672042*^9}, {
  3.9181397556772633`*^9, 3.9181397558297987`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f19f25d7-b8fa-4bde-a732-2ea07148571c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "setosa" -> <|
        "SepalLength" -> Quantity[5.005999999999999, "Centimeters"], 
         "SepalWidth" -> Quantity[3.428000000000001, "Centimeters"], 
         "PetalLength" -> Quantity[1.4620000000000002`, "Centimeters"], 
         "PetalWidth" -> Quantity[0.2459999999999999, "Centimeters"]|>, 
       "versicolor" -> <|
        "SepalLength" -> Quantity[5.936, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7700000000000005`, "Centimeters"], "PetalLength" -> 
         Quantity[4.26, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3259999999999998`, "Centimeters"]|>, 
       "virginica" -> <|
        "SepalLength" -> Quantity[6.587999999999998, "Centimeters"], 
         "SepalWidth" -> Quantity[2.9739999999999998`, "Centimeters"], 
         "PetalLength" -> Quantity[5.552, "Centimeters"], "PetalWidth" -> 
         Quantity[2.026, "Centimeters"]|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, "SepalLength"} -> 
        1, {All, "SepalWidth"} -> 1, {All, "PetalLength"} -> 
        1, {All, "PetalWidth"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]|>], 
           DirectedInfinity[1], 4, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 3], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, "SepalLength"} -> 
        1, {All, "SepalWidth"} -> 1, {All, "PetalLength"} -> 
        1, {All, "PetalWidth"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]|>], 
           DirectedInfinity[1], 4, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 3], "Path" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     3, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SepalLength"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SepalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "SepalWidth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "SepalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PetalLength"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PetalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PetalWidth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PetalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["setosa"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.005999999999999`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.428000000000001`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4620000000000002`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.2459999999999999`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["versicolor"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.936`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.7700000000000005`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.26`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.3259999999999998`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["virginica"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.587999999999998`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.9739999999999998`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.552`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.026`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{445., {47.85052490234375, 52.14947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{445., {47.85052490234375, 52.14947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.913492959752955*^9, 3.913899204388703*^9, 
  3.9138993799239073`*^9, 3.913908664244658*^9, 3.9139089107932568`*^9, 
  3.913909792899838*^9, 3.914283716409273*^9, 3.914284231675577*^9, 
  3.9143613271068687`*^9, 3.9143617343567953`*^9, 3.9143618235848823`*^9, 
  3.91436342660432*^9, 3.914526499009851*^9, 3.9145275077883177`*^9, 
  3.914529478204091*^9, 3.9145309923272967`*^9, 3.918139759967553*^9, 
  3.918140022168659*^9, 3.9181402162095623`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"060679d2-4a7a-4221-a2d9-a569a7089ebd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Mean", "]"}], "[", 
  RowBox[{"fisher", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"2", ";;", "5"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9134929700010443`*^9, 3.913492970004075*^9}, {
  3.918139788108664*^9, 3.918139788194929*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"aee93259-4409-4060-8c7c-5dc0cad38b39"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "SepalLength" -> Quantity[5.843333333333335, "Centimeters"], 
       "SepalWidth" -> Quantity[3.057333333333334, "Centimeters"], 
       "PetalLength" -> Quantity[3.7580000000000027`, "Centimeters"], 
       "PetalWidth" -> Quantity[1.199333333333334, "Centimeters"]|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[115.5], 
         TypeSystem`PackageScope`AtomShape[75]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "PetalLength", "PetalWidth", "SepalLength", "SepalWidth"]], 
       TypeSystem`Atom[
        Quantity[1, "Centimeters"]], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[115.5], 
         TypeSystem`PackageScope`AtomShape[75]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "PetalLength", "PetalWidth", "SepalLength", "SepalWidth"]], 
       TypeSystem`Atom[
        Quantity[1, "Centimeters"]], 4], "Path" -> {}, "DisplayedRowCount" -> 
     4, "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SepalLength"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SepalLength"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.843333333333335`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SepalWidth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SepalWidth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.057333333333334`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PetalLength"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PetalLength"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.7580000000000027`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PetalWidth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PetalWidth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.199333333333334`", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{205., {47.85052490234375, 52.14947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{205., {47.85052490234375, 52.14947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.913492971065471*^9, 3.913899206692903*^9, 
  3.91389938003624*^9, 3.913908664266349*^9, 3.913908910813118*^9, 
  3.913909792937011*^9, 3.914283716432046*^9, 3.914284231700549*^9, 
  3.914361327129981*^9, 3.9143617343771567`*^9, 3.9143618236090937`*^9, 
  3.914363426624682*^9, 3.914526499033276*^9, 3.914527507809807*^9, 
  3.91452947822464*^9, 3.914530992348405*^9, 3.9181397888217363`*^9, 
  3.918140022265485*^9, 3.918140217383997*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"312d9e53-c20d-4287-9e30-f03e99cb81b9"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["7.4 Descriptive Statistics", "Section",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461218476933*^9, 3.908461239015407*^9}, {3.909615295670476*^9, 
  3.909615315364826*^9}, {3.911317623368807*^9, 3.911317661653191*^9}, {
  3.913320601218501*^9, 3.913320607048437*^9}, {3.913321021411557*^9, 
  3.913321021976462*^9}},ExpressionUUID->"94dc73c9-5aed-4ada-b5db-\
6c5f9511f0d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stats", "[", "data_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Max: \>\"", ",", 
          RowBox[{"Max", "@", "data"}]}], "}"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Min: \>\"", ",", 
          RowBox[{"Min", "@", "data"}]}], "}"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Mean: \>\"", ",", 
          RowBox[{"Mean", "@", "data"}]}], "}"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Median: \>\"", ",", 
          RowBox[{"Median", "@", "data"}]}], "}"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<1st quartile: \>\"", ",", 
          RowBox[{"Quantile", "[", 
           RowBox[{"data", ",", "0.25"}], "]"}]}], "}"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<3rd quartile: \>\"", ",", 
          RowBox[{"Quantile", "[", 
           RowBox[{"data", ",", "0.75"}], "]"}]}], "}"}], "]"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "&"}], "[", "Row", "]"}]}]], "Input",
 CellChangeTimes->{{3.9139080979500647`*^9, 3.913908118910133*^9}, {
  3.913909360060486*^9, 3.913909369096056*^9}, {3.9181400665921717`*^9, 
  3.918140066683715*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"80a53af8-83a0-4016-b8b6-fcb6dc068b71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fisher", "[", 
         RowBox[{"stats", ",", "#1"}], "]"}], ",", 
        RowBox[{"fisher", "[", 
         RowBox[{"stats", ",", "#2"}], "]"}], ",", 
        RowBox[{"fisher", "[", 
         RowBox[{"stats", ",", "#3"}], "]"}], ",", 
        RowBox[{"fisher", "[", 
         RowBox[{"stats", ",", "#4"}], "]"}]}], "}"}]}], "}"}], "&"}], "[", 
   RowBox[{
   "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
    "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "]"}], "//", 
  "Grid"}]], "Input",
 CellChangeTimes->{{3.913908597768405*^9, 3.913908627229908*^9}, {
   3.913908686279622*^9, 3.913908687225415*^9}, {3.9139087340908113`*^9, 
   3.91390873897323*^9}, 3.91390883966013*^9, {3.9181400696129208`*^9, 
   3.918140076531129*^9}, {3.9181402250547323`*^9, 3.918140232511466*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"2e2a4028-1460-44d6-9f9d-a3f1ddd3f084"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"SepalLength\"\>", "\<\"SepalWidth\"\>", "\<\"PetalLength\"\>", \
"\<\"PetalWidth\"\>"},
    {
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {{
            Row[{"Max: ", 
              Quantity[7.9, "Centimeters"]}]}, {
            Row[{"Min: ", 
              Quantity[4.3, "Centimeters"]}]}, {
            Row[{"Mean: ", 
              Quantity[5.843333333333335, "Centimeters"]}]}, {
            Row[{"Median: ", 
              Quantity[5.8, "Centimeters"]}]}, {
            Row[{"1st quartile: ", 
              Quantity[5.1, "Centimeters"]}]}, {
            Row[{"3rd quartile: ", 
              Quantity[6.4, "Centimeters"]}]}}, "AllowEmbedding" -> True, 
         "InitialShape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
         "InitialType" -> TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> <||>, 
         "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
         TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
         "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, 
         "DataRowCount" -> 6, "DataColumnCount" -> 1, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Row[{"Max: ", 
                    Quantity[7.9, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Min: ", 
                    Quantity[4.3, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Mean: ", 
                    Quantity[5.843333333333335, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Median: ", 
                    Quantity[5.8, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"1st quartile: ", 
                    Quantity[5.1, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"3rd quartile: ", 
                    Quantity[6.4, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{126., {87.634033203125, 93.365966796875}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{126., {87.634033203125, 93.365966796875}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {{
            Row[{"Max: ", 
              Quantity[4.4, "Centimeters"]}]}, {
            Row[{"Min: ", 
              Quantity[2., "Centimeters"]}]}, {
            Row[{"Mean: ", 
              Quantity[3.057333333333334, "Centimeters"]}]}, {
            Row[{"Median: ", 
              Quantity[3., "Centimeters"]}]}, {
            Row[{"1st quartile: ", 
              Quantity[2.8, "Centimeters"]}]}, {
            Row[{"3rd quartile: ", 
              Quantity[3.3, "Centimeters"]}]}}, "AllowEmbedding" -> True, 
         "InitialShape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
         "InitialType" -> TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> <||>, 
         "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
         TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
         "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, 
         "DataRowCount" -> 6, "DataColumnCount" -> 1, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Row[{"Max: ", 
                    Quantity[4.4, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Min: ", 
                    Quantity[2., "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Mean: ", 
                    Quantity[3.057333333333334, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Median: ", 
                    Quantity[3., "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"1st quartile: ", 
                    Quantity[2.8, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"3rd quartile: ", 
                    Quantity[3.3, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{126., {87.634033203125, 93.365966796875}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{126., {87.634033203125, 93.365966796875}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {{
            Row[{"Max: ", 
              Quantity[6.9, "Centimeters"]}]}, {
            Row[{"Min: ", 
              Quantity[1., "Centimeters"]}]}, {
            Row[{"Mean: ", 
              Quantity[3.7580000000000027`, "Centimeters"]}]}, {
            Row[{"Median: ", 
              Quantity[4.35, "Centimeters"]}]}, {
            Row[{"1st quartile: ", 
              Quantity[1.6, "Centimeters"]}]}, {
            Row[{"3rd quartile: ", 
              Quantity[5.1, "Centimeters"]}]}}, "AllowEmbedding" -> True, 
         "InitialShape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
         "InitialType" -> TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> <||>, 
         "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
         TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
         "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, 
         "DataRowCount" -> 6, "DataColumnCount" -> 1, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Row[{"Max: ", 
                    Quantity[6.9, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Min: ", 
                    Quantity[1., "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Mean: ", 
                    Quantity[3.7580000000000027`, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Median: ", 
                    Quantity[4.35, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"1st quartile: ", 
                    Quantity[1.6, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"3rd quartile: ", 
                    Quantity[5.1, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{126., {87.634033203125, 93.365966796875}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{126., {87.634033203125, 93.365966796875}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {{
            Row[{"Max: ", 
              Quantity[2.5, "Centimeters"]}]}, {
            Row[{"Min: ", 
              Quantity[0.1, "Centimeters"]}]}, {
            Row[{"Mean: ", 
              Quantity[1.199333333333334, "Centimeters"]}]}, {
            Row[{"Median: ", 
              Quantity[1.3, "Centimeters"]}]}, {
            Row[{"1st quartile: ", 
              Quantity[0.3, "Centimeters"]}]}, {
            Row[{"3rd quartile: ", 
              Quantity[1.8, "Centimeters"]}]}}, "AllowEmbedding" -> True, 
         "InitialShape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
         "InitialType" -> TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> <||>, 
         "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
         TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
         "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, 
         "DataRowCount" -> 6, "DataColumnCount" -> 1, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Row[{"Max: ", 
                    Quantity[2.5, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Min: ", 
                    Quantity[0.1, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Mean: ", 
                    Quantity[1.199333333333334, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Median: ", 
                    Quantity[1.3, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"1st quartile: ", 
                    Quantity[0.3, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"3rd quartile: ", 
                    Quantity[1.8, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{126., {87.634033203125, 93.365966796875}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{126., {87.634033203125, 93.365966796875}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.913908604917186*^9, {3.913908664728176*^9, 3.913908690185792*^9}, 
   3.9139087399852667`*^9, 3.9139088663035*^9, 3.9139089112605467`*^9, 
   3.913909374007659*^9, 3.91390979338581*^9, 3.9142837169155273`*^9, 
   3.914284232235688*^9, 3.914361327569293*^9, 3.914361734747089*^9, 
   3.9143618240184593`*^9, 3.914363427004539*^9, 3.914526499502013*^9, 
   3.914527508455372*^9, 3.914529478767537*^9, 3.914530992925662*^9, 
   3.918140022359046*^9, 3.918140079803525*^9, {3.91814022155227*^9, 
   3.91814023324658*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"ca1f44e4-f48d-4116-8886-79b89912d0e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TabView", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#1", "->", 
        RowBox[{"fisher", "[", 
         RowBox[{"stats", ",", "#1"}], "]"}]}], ",", 
       RowBox[{"#2", "->", 
        RowBox[{"fisher", "[", 
         RowBox[{"stats", ",", "#2"}], "]"}]}], ",", 
       RowBox[{"#3", "->", 
        RowBox[{"fisher", "[", 
         RowBox[{"stats", ",", "#3"}], "]"}]}], ",", 
       RowBox[{"#4", "->", 
        RowBox[{"fisher", "[", 
         RowBox[{"stats", ",", "#4"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"ControlPlacement", "->", "Left"}]}], "]"}], "&"}], "[", 
  RowBox[{
  "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
   "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.913909143353017*^9, 3.913909174047876*^9}, {
  3.918140082401808*^9, 3.918140101199254*^9}, {3.918140259606851*^9, 
  3.9181402597671347`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"37474bc5-14bb-4ff7-82af-047dd0b78d85"],

Cell[BoxData[
 TabViewBox[{{1,"\<\"SepalLength\"\>"->
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
     "InitialData" -> {{
         Row[{"Max: ", 
           Quantity[7.9, "Centimeters"]}]}, {
         Row[{"Min: ", 
           Quantity[4.3, "Centimeters"]}]}, {
         Row[{"Mean: ", 
           Quantity[5.843333333333335, "Centimeters"]}]}, {
         Row[{"Median: ", 
           Quantity[5.8, "Centimeters"]}]}, {
         Row[{"1st quartile: ", 
           Quantity[5.1, "Centimeters"]}]}, {
         Row[{"3rd quartile: ", 
           Quantity[6.4, "Centimeters"]}]}}, "AllowEmbedding" -> True, 
      "InitialShape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> <||>, 
      "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
      "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
      6, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                Row[{"Max: ", 
                  Quantity[7.9, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Min: ", 
                  Quantity[4.3, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Mean: ", 
                  Quantity[5.843333333333335, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Median: ", 
                  Quantity[5.8, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"1st quartile: ", 
                  Quantity[5.1, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"3rd quartile: ", 
                  Quantity[6.4, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", 
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       
       ImageSizeCache->{95., {68.85052490234375, 73.14947509765625}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{95., {68.85052490234375, 73.14947509765625}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}, {2,"\<\"SepalWidth\"\>"->
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
     "InitialData" -> {{
         Row[{"Max: ", 
           Quantity[4.4, "Centimeters"]}]}, {
         Row[{"Min: ", 
           Quantity[2., "Centimeters"]}]}, {
         Row[{"Mean: ", 
           Quantity[3.057333333333334, "Centimeters"]}]}, {
         Row[{"Median: ", 
           Quantity[3., "Centimeters"]}]}, {
         Row[{"1st quartile: ", 
           Quantity[2.8, "Centimeters"]}]}, {
         Row[{"3rd quartile: ", 
           Quantity[3.3, "Centimeters"]}]}}, "AllowEmbedding" -> True, 
      "InitialShape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> <||>, 
      "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
      "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
      6, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                Row[{"Max: ", 
                  Quantity[4.4, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Min: ", 
                  Quantity[2., "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Mean: ", 
                  Quantity[3.057333333333334, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Median: ", 
                  Quantity[3., "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"1st quartile: ", 
                  Quantity[2.8, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"3rd quartile: ", 
                  Quantity[3.3, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", 
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       
       ImageSizeCache->{95., {68.85052490234375, 73.14947509765625}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{95., {68.85052490234375, 73.14947509765625}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}, {3,"\<\"PetalLength\"\>"->
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
     "InitialData" -> {{
         Row[{"Max: ", 
           Quantity[6.9, "Centimeters"]}]}, {
         Row[{"Min: ", 
           Quantity[1., "Centimeters"]}]}, {
         Row[{"Mean: ", 
           Quantity[3.7580000000000027`, "Centimeters"]}]}, {
         Row[{"Median: ", 
           Quantity[4.35, "Centimeters"]}]}, {
         Row[{"1st quartile: ", 
           Quantity[1.6, "Centimeters"]}]}, {
         Row[{"3rd quartile: ", 
           Quantity[5.1, "Centimeters"]}]}}, "AllowEmbedding" -> True, 
      "InitialShape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> <||>, 
      "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
      "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
      6, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                Row[{"Max: ", 
                  Quantity[6.9, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Min: ", 
                  Quantity[1., "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Mean: ", 
                  Quantity[3.7580000000000027`, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Median: ", 
                  Quantity[4.35, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"1st quartile: ", 
                  Quantity[1.6, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"3rd quartile: ", 
                  Quantity[5.1, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", 
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       
       ImageSizeCache->{95., {68.85052490234375, 73.14947509765625}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{95., {68.85052490234375, 73.14947509765625}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}, {4,"\<\"PetalWidth\"\>"->
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
     "InitialData" -> {{
         Row[{"Max: ", 
           Quantity[2.5, "Centimeters"]}]}, {
         Row[{"Min: ", 
           Quantity[0.1, "Centimeters"]}]}, {
         Row[{"Mean: ", 
           Quantity[1.199333333333334, "Centimeters"]}]}, {
         Row[{"Median: ", 
           Quantity[1.3, "Centimeters"]}]}, {
         Row[{"1st quartile: ", 
           Quantity[0.3, "Centimeters"]}]}, {
         Row[{"3rd quartile: ", 
           Quantity[1.8, "Centimeters"]}]}}, "AllowEmbedding" -> True, 
      "InitialShape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> <||>, 
      "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
      "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
      6, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
      "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                Row[{"Max: ", 
                  Quantity[2.5, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Min: ", 
                  Quantity[0.1, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Mean: ", 
                  Quantity[1.199333333333334, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Median: ", 
                  Quantity[1.3, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"1st quartile: ", 
                  Quantity[0.3, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"3rd quartile: ", 
                  Quantity[1.8, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", 
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       
       ImageSizeCache->{95., {68.85052490234375, 73.14947509765625}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{95., {68.85052490234375, 73.14947509765625}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}}, 1,
  ControlPlacement->Left]], "Output",
 CellChangeTimes->{{3.913909162479497*^9, 3.9139091762848167`*^9}, 
   3.913909382685669*^9, 3.9139097938281927`*^9, 3.914283717271325*^9, 
   3.9142842332520933`*^9, 3.914361327880287*^9, 3.914361735154718*^9, 
   3.914361824355012*^9, 3.914363427078971*^9, 3.914526499638544*^9, 
   3.914527508598646*^9, 3.9145294789684887`*^9, 3.914530993075329*^9, 
   3.918140022381908*^9, 3.9181401041795683`*^9, 3.918140260570051*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"3248c721-828c-4c31-a78c-78df115e5684"]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.4.1 Table and Grid Formats", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 3.908461198842817*^9}, {3.911317563580776*^9, 
  3.911317570922584*^9}, {3.911317671018495*^9, 3.911317696401259*^9}, {
  3.913320589237055*^9, 3.913320616468418*^9}, {3.913321024411107*^9, 
  3.913321024530311*^9}},ExpressionUUID->"31c67e7a-1722-456c-8899-\
9fbea6dc12cd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Short", "[", 
  RowBox[{"Values", "[", 
   RowBox[{"Nest", "[", 
    RowBox[{"Normal", ",", "fisher", ",", "2"}], "]"}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sLall", ",", "sWall", ",", "pLall", ",", "pWall"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"%", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.91390969339703*^9, 3.913909706674264*^9}, {
  3.913910146549233*^9, 3.913910154098653*^9}, {3.918140301988752*^9, 
  3.9181403117656527`*^9}, {3.918140393030128*^9, 3.9181403933662367`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"935bfdb0-9822-4923-9219-24d396ddeb90"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"0.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "148", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", 
      TemplateBox[{"5.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.913909716262142*^9, 3.9139097941018553`*^9, 
  3.914283717523125*^9, 3.914284233514016*^9, 3.914361328179082*^9, 
  3.914361735467013*^9, 3.914361824612236*^9, 3.914363427100968*^9, 
  3.914526499682228*^9, 3.914527508628413*^9, 3.9145294790249166`*^9, 
  3.914530993108716*^9, 3.918140022442182*^9, 3.9181403132473793`*^9, 
  3.9181403972547407`*^9},
 CellLabel->
  "Out[24]//Short=",ExpressionUUID->"86c9a7e0-88e1-4250-97d1-b4c5f85e3a00"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Max", "[", "#", "]"}], ",", 
      RowBox[{"Min", "[", "#", "]"}], ",", 
      RowBox[{"Median", "[", "#", "]"}], ",", 
      RowBox[{"Mean", "[", "#", "]"}], ",", 
      RowBox[{"Variance", "[", "#", "]"}], ",", 
      RowBox[{"StandardDeviation", "[", "#", "]"}], ",", 
      RowBox[{"Skewness", "[", "#", "]"}], ",", 
      RowBox[{"Kurtosis", "[", "#", "]"}], ",", 
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", "0.25"}], "]"}], ",", 
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", ".75"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"sLall", ",", "sWall", ",", "pLall", ",", "pWall"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"descriptiveStats", "=", "%"}], ";"}]}], "Input",
 CellChangeTimes->{{3.913910020366521*^9, 3.913910022854488*^9}, {
  3.9139101791733313`*^9, 3.9139101796702757`*^9}, {3.9181403675462933`*^9, 
  3.9181403789025717`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"73c6ee55-42d6-4a73-b358-866ab2636e69"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tableHeads", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Sepal Length\>\"", ",", "#1", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
          "\"\<Maroon\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Sepal Width\>\"", ",", "#1", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
          "\"\<YellowGreen\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Petal Length\>\"", ",", "#1", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
          "\"\<SteelBlue\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Petal Width\>\"", ",", "#1", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
          "\"\<Orange\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}]}], "}"}], 
     "&"}], "[", 
    RowBox[{"\"\<Title\>\"", ",", "Italic", ",", "20"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tableRows", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Max\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Min\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Median\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Mean\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Variance\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Standard\\n Deviation\>\"", ",", "#1", ",", "#2"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Skewness\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Kurtosis\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<1st quartile\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3rd quartile\>\"", ",", "#1", ",", "#2"}], "]"}]}], 
      "}"}], "&"}], "[", 
    RowBox[{"\"\<Text\>\"", ",", "Italic"}], "]"}]}], ";", 
  RowBox[{"TableForm", "[", 
   RowBox[{"descriptiveStats", ",", 
    RowBox[{"TableHeadings", "->", 
     RowBox[{"{", 
      RowBox[{"tableHeads", ",", "tableRows"}], "}"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.91391015777789*^9, 3.9139101634785347`*^9}, {
  3.918140423642619*^9, 3.91814043140528*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"384235de-fc0f-402e-8f99-071c5a3ead3b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["\<\"Max\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Min\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Median\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Mean\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Variance\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Standard\\n Deviation\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Skewness\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Kurtosis\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"1st quartile\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"3rd quartile\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm]},
     {
      TagBox[
       StyleBox["\<\"Sepal Length\"\>", "Title",
        StripOnInput->False,
        LineColor->RGBColor[0.5019607843137255, 0, 0],
        FrontFaceColor->RGBColor[0.5019607843137255, 0, 0],
        BackFaceColor->RGBColor[0.5019607843137255, 0, 0],
        GraphicsColor->RGBColor[0.5019607843137255, 0, 0],
        FontSize->20,
        FontSlant->Italic,
        FontColor->RGBColor[0.5019607843137255, 0, 0]],
       HoldForm], 
      TemplateBox[{"7.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"4.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"5.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{
       "5.843333333333335`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"0.6856935123042507`", 
        RowBox[{
          SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
        SuperscriptBox["\"Centimeters\"", "2"]},
       "Quantity"], 
      TemplateBox[{
       "0.828066127977863`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], "0.3117530585022931`", "2.4264320510750226`", 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"6.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]},
     {
      TagBox[
       StyleBox["\<\"Sepal Width\"\>", "Title",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
        FrontFaceColor->RGBColor[
         0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
        BackFaceColor->RGBColor[
         0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
        GraphicsColor->RGBColor[
         0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
        FontSize->20,
        FontSlant->Italic,
        FontColor->RGBColor[
         0.6039215686274509, 0.803921568627451, 0.19607843137254902`]],
       HoldForm], 
      TemplateBox[{"4.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"2.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{
       "3.057333333333334`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"0.1899794183445191`", 
        RowBox[{
          SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
        SuperscriptBox["\"Centimeters\"", "2"]},
       "Quantity"], 
      TemplateBox[{
       "0.4358662849366983`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], "0.3157671063389323`", "3.1809763175224686`", 
      TemplateBox[{"2.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"3.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]},
     {
      TagBox[
       StyleBox["\<\"Petal Length\"\>", "Title",
        StripOnInput->False,
        LineColor->RGBColor[
         0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
        FrontFaceColor->RGBColor[
         0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
        BackFaceColor->RGBColor[
         0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
        GraphicsColor->RGBColor[
         0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
        FontSize->20,
        FontSlant->Italic,
        FontColor->RGBColor[
         0.27450980392156865`, 0.5098039215686274, 0.7058823529411764]],
       HoldForm], 
      TemplateBox[{"6.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"1.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"4.35`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{
       "3.7580000000000027`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"3.116277852348994`", 
        RowBox[{
          SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
        SuperscriptBox["\"Centimeters\"", "2"]},
       "Quantity"], 
      TemplateBox[{
       "1.7652982332594664`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      RowBox[{"-", "0.2721276664567251`"}], "1.604464113600995`", 
      TemplateBox[{"1.6`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]},
     {
      TagBox[
       StyleBox["\<\"Petal Width\"\>", "Title",
        StripOnInput->False,
        LineColor->RGBColor[1., 0.6470588235294118, 0],
        FrontFaceColor->RGBColor[1., 0.6470588235294118, 0],
        BackFaceColor->RGBColor[1., 0.6470588235294118, 0],
        GraphicsColor->RGBColor[1., 0.6470588235294118, 0],
        FontSize->20,
        FontSlant->Italic,
        FontColor->RGBColor[1., 0.6470588235294118, 0]],
       HoldForm], 
      TemplateBox[{"2.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"0.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"1.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{
       "1.199333333333334`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"0.5810062639821028`", 
        RowBox[{
          SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
        SuperscriptBox["\"Centimeters\"", "2"]},
       "Quantity"], 
      TemplateBox[{
       "0.7622376689603465`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      RowBox[{"-", "0.101934206565602`"}], "1.6639325947684471`", 
      TemplateBox[{"0.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{
       Style["Sepal Length", "Title", 
        RGBColor[0.5019607843137255, 0, 0], Italic, 20], 
       Style["Sepal Width", "Title", 
        RGBColor[0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
         Italic, 20], 
       Style["Petal Length", "Title", 
        RGBColor[
        0.27450980392156865`, 0.5098039215686274, 0.7058823529411764], Italic,
         20], 
       Style["Petal Width", "Title", 
        RGBColor[1., 0.6470588235294118, 0], Italic, 20]}, {
       Style["Max", "Text", Italic], 
       Style["Min", "Text", Italic], 
       Style["Median", "Text", Italic], 
       Style["Mean", "Text", Italic], 
       Style["Variance", "Text", Italic], 
       Style["Standard\n Deviation", "Text", Italic], 
       Style["Skewness", "Text", Italic], 
       Style["Kurtosis", "Text", Italic], 
       Style["1st quartile", "Text", Italic], 
       Style["3rd quartile", "Text", Italic]}}]]]], "Output",
 CellChangeTimes->{{3.913910164613805*^9, 3.913910187833312*^9}, 
   3.914283717588097*^9, 3.914284233572473*^9, 3.914361328251972*^9, 
   3.914361735550055*^9, 3.914361824670909*^9, 3.914363427157282*^9, 
   3.914526499751876*^9, 3.914527508705597*^9, 3.914529479141839*^9, 
   3.914530993182955*^9, 3.918140022556872*^9, 3.918140433007287*^9},
 CellLabel->
  "Out[29]//TableForm=",ExpressionUUID->"cc288607-f8cd-4f6d-8d7b-\
836a25a53e80"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Prepend", "[", 
    RowBox[{"descriptiveStats", ",", "tableRows"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\< \>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal Length\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<Maroon\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal Width\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<YellowGreen\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Petal Length\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<SteelBlue\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Petal Width\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<Orange\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}]}], "}"}], 
    "&"}], "[", 
   RowBox[{"\"\<Title\>\"", ",", "Italic", ",", "20"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"newTable", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"%%", ",", "%"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9142839749927073`*^9, 3.9142839749953136`*^9}, {
   3.914284160678865*^9, 3.91428416151246*^9}, 3.914284201039648*^9, {
   3.918140485985427*^9, 3.918140490074197*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d96cca26-78cf-42a9-a8ed-6516fed0562a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"newTable", ",", 
   RowBox[{"ItemSize", "->", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"Scaled", "[", "0.11", "]"}], ",", 
       RowBox[{"Scaled", "[", "0.11", "]"}], ",", 
       RowBox[{"Scaled", "[", "0.11", "]"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"Background", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "LightGray", "}"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"Dividers", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "False", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
        "8", ",", "9", ",", "10", ",", 
        RowBox[{"11", "->", "True"}], ",", 
        RowBox[{
         RowBox[{"-", "2"}], "->", "Blue"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Alignment", "->", "Center"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914284117213523*^9, 3.914284137387801*^9}, 
   3.914284181457624*^9, {3.91814053672263*^9, 3.91814053687131*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"1608254d-8e66-4b9d-837f-51175982c795"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\" \"\>", 
     StyleBox["\<\"Sepal Length\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[0.5019607843137255, 0, 0],
      FrontFaceColor->RGBColor[0.5019607843137255, 0, 0],
      BackFaceColor->RGBColor[0.5019607843137255, 0, 0],
      GraphicsColor->RGBColor[0.5019607843137255, 0, 0],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[0.5019607843137255, 0, 0]], 
     StyleBox["\<\"Sepal Width\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      FrontFaceColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      BackFaceColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      GraphicsColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`]], 
     StyleBox["\<\"Petal Length\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      FrontFaceColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      BackFaceColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      GraphicsColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764]], 
     StyleBox["\<\"Petal Width\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[1., 0.6470588235294118, 0],
      FrontFaceColor->RGBColor[1., 0.6470588235294118, 0],
      BackFaceColor->RGBColor[1., 0.6470588235294118, 0],
      GraphicsColor->RGBColor[1., 0.6470588235294118, 0],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[1., 0.6470588235294118, 0]]},
    {
     StyleBox["\<\"Max\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"7.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"6.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Min\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"4.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"0.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Median\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"5.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.35`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Mean\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{
      "5.843333333333335`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "3.057333333333334`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "3.7580000000000027`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "1.199333333333334`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Variance\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"0.6856935123042507`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"0.1899794183445191`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"3.116277852348994`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"0.5810062639821028`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"]},
    {
     StyleBox["\<\"Standard\\n Deviation\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{
      "0.828066127977863`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "0.4358662849366983`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "1.7652982332594664`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "0.7622376689603465`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Skewness\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], "0.3117530585022931`", "0.3157671063389323`", 
     RowBox[{"-", "0.2721276664567251`"}], 
     RowBox[{"-", "0.101934206565602`"}]},
    {
     StyleBox["\<\"Kurtosis\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], "2.4264320510750226`", "3.1809763175224686`", 
     "1.604464113600995`", "1.6639325947684471`"},
    {
     StyleBox["\<\"1st quartile\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.6`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"0.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"3rd quartile\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"6.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"3.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.85]}, "Rows" -> {{None}}},
   GridBoxDividers->{
    "Columns" -> {False}, 
     "Rows" -> {
      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 -> True, -2 -> RGBColor[0, 0, 1]}},
   GridBoxItemSize->{"Columns" -> {None, 
       Scaled[0.11], 
       Scaled[0.11], 
       Scaled[0.11]}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.91428420438317*^9, 3.9142842336006203`*^9}, 
   3.914361328287022*^9, 3.914361735580981*^9, 3.914361824701881*^9, 
   3.914363427171481*^9, 3.91452649977468*^9, 3.914527508724669*^9, 
   3.914529479166424*^9, 3.914530993205163*^9, 3.918140022591968*^9, 
   3.918140541103077*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"64f5f018-989b-4384-b961-787e5f77012a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shallow", "[", 
  RowBox[{
   RowBox[{"Values", "[", 
    RowBox[{"Nest", "[", 
     RowBox[{"Normal", ",", "fisher", ",", "2"}], "]"}], "]"}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.914361564369219*^9, 3.91436156853802*^9}, {
  3.9181405480809813`*^9, 3.918140548192638*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"dfd99393-5f7a-433e-9e1e-f2a01da2266f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftSkeleton]", "150", "\[RightSkeleton]"}], "}"}]], "Output",
 CellChangeTimes->{
  3.91436156966529*^9, {3.914361708910297*^9, 3.914361735590583*^9}, 
   3.914361824711*^9, 3.914363427176015*^9, 3.914526499780257*^9, 
   3.914527508732156*^9, 3.914529479171745*^9, 3.914530993213067*^9, 
   3.918140022596758*^9, 3.9181405486059227`*^9},
 CellLabel->
  "Out[34]//Shallow=",ExpressionUUID->"e41c4150-1696-404d-893a-8591e8b1e1ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Shallow", "[", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<versicolor\>\"", ",", "__"}], "}"}]}], "]"}], ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sLVersi", ",", "sWVersi", ",", "pLVersi", ",", "pWVersi"}], 
    "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"%", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.91436164510505*^9, 3.914361654075193*^9}, {
  3.918140573678772*^9, 3.91814058082904*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"f8545b8b-d52a-44d8-ac8f-f15c03a2d182"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftSkeleton]", "50", "\[RightSkeleton]"}], "}"}]], "Output",
 CellChangeTimes->{{3.914361655161339*^9, 3.914361674840265*^9}, {
   3.914361710549291*^9, 3.914361735611574*^9}, 3.9143618247292337`*^9, 
   3.9143634271854353`*^9, 3.914526499798548*^9, 3.914527508743567*^9, 
   3.914529479191468*^9, 3.914530993226799*^9, 3.918140022604293*^9, 
   3.918140581635756*^9},
 CellLabel->
  "Out[35]//Shallow=",ExpressionUUID->"0d16a467-db0f-4bc5-addd-d549f6d31a4c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"tableRows", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Max", "[", "#", "]"}], ",", 
      RowBox[{"Min", "[", "#", "]"}], ",", 
      RowBox[{"Median", "[", "#", "]"}], ",", 
      RowBox[{"Mean", "[", "#", "]"}], ",", 
      RowBox[{"Variance", "[", "#", "]"}], ",", 
      RowBox[{"StandardDeviation", "[", "#", "]"}], ",", 
      RowBox[{"Skewness", "[", "#", "]"}], ",", 
      RowBox[{"Kurtosis", "[", "#", "]"}], ",", 
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", "0.25"}], "]"}], ",", 
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", ".75"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"sLVersi", ",", "sWVersi", ",", "pLVersi", ",", "pWVersi"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"descriptiveStats2", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"%", ",", "%%"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Transpose", "[", "descriptiveStats2", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Versicolor\>\"", ",", "\"\<Text\>\"", ",", "Red", ",", "Italic", 
        ",", "20"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal Length\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<Maroon\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal Width\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<YellowGreen\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Petal Length\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<SteelBlue\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Petal Width\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<Orange\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}]}], "}"}], 
    "&"}], "[", 
   RowBox[{"\"\<Title\>\"", ",", "Italic", ",", "20"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"newTable2", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"%%", ",", "%"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.91436168601864*^9, 3.914361686021797*^9}, {
  3.914361796857451*^9, 3.914361797617733*^9}, {3.918140624339403*^9, 
  3.918140645237832*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"7241c545-daa7-4beb-9aa7-283cabb558ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"newTable2", ",", 
   RowBox[{"ItemSize", "->", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"Scaled", "[", "0.11", "]"}], ",", 
       RowBox[{"Scaled", "[", "0.11", "]"}], ",", 
       RowBox[{"Scaled", "[", "0.11", "]"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"Background", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "LightGray", "}"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"Dividers", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "False", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
        "8", ",", "9", ",", "10", ",", 
        RowBox[{"11", "->", "True"}], ",", 
        RowBox[{
         RowBox[{"-", "2"}], "->", "Blue"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Alignment", "->", "Center"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914361754695449*^9, 3.914361772842353*^9}, {
  3.918140700505172*^9, 3.918140700651156*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"186286a1-1c3d-46a1-a4a1-c85f58b23f2f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Versicolor\"\>", "Text",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Sepal Length\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[0.5019607843137255, 0, 0],
      FrontFaceColor->RGBColor[0.5019607843137255, 0, 0],
      BackFaceColor->RGBColor[0.5019607843137255, 0, 0],
      GraphicsColor->RGBColor[0.5019607843137255, 0, 0],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[0.5019607843137255, 0, 0]], 
     StyleBox["\<\"Sepal Width\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      FrontFaceColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      BackFaceColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      GraphicsColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`]], 
     StyleBox["\<\"Petal Length\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      FrontFaceColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      BackFaceColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      GraphicsColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764]], 
     StyleBox["\<\"Petal Width\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[1., 0.6470588235294118, 0],
      FrontFaceColor->RGBColor[1., 0.6470588235294118, 0],
      BackFaceColor->RGBColor[1., 0.6470588235294118, 0],
      GraphicsColor->RGBColor[1., 0.6470588235294118, 0],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[1., 0.6470588235294118, 0]]},
    {
     StyleBox["\<\"Max\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"7.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"3.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Min\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"4.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Median\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"5.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.35`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Mean\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"5.936`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "2.7700000000000005`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.26`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "1.3259999999999998`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Variance\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"0.26643265306122454`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"0.09846938775510206`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"0.22081632653061228`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"0.03910612244897959`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"]},
    {
     StyleBox["\<\"Standard\\n Deviation\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{
      "0.5161711470638635`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "0.3137983233784114`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "0.46991097723995795`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "0.19775268000454405`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Skewness\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], "0.10218956951840946`", 
     RowBox[{"-", "0.35186749654017807`"}], 
     RowBox[{"-", "0.5881586743962581`"}], 
     RowBox[{"-", "0.030236304298168832`"}]},
    {
     StyleBox["\<\"Kurtosis\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], "2.4011726592327167`", "2.551728100083224`", 
     "2.925598176854661`", "2.512167412975451`"},
    {
     StyleBox["\<\"1st quartile\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"5.6`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"3rd quartile\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"6.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.6`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.85]}, "Rows" -> {{None}}},
   GridBoxDividers->{
    "Columns" -> {False}, 
     "Rows" -> {
      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 -> True, -2 -> RGBColor[0, 0, 1]}},
   GridBoxItemSize->{"Columns" -> {None, 
       Scaled[0.11], 
       Scaled[0.11], 
       Scaled[0.11]}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.914361773348271*^9, 3.914361824758575*^9}, 
   3.914363427208619*^9, 3.914526499835909*^9, 3.914527508771639*^9, 
   3.914529479228016*^9, 3.914530993253746*^9, 3.918140022952218*^9, 
   3.91814070144354*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"f2125682-b4a4-4359-8627-6e41ff3e5be9"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["7.5 Dataset Visualisation", "Section",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461218476933*^9, 3.908461239015407*^9}, {3.909615295670476*^9, 
  3.909615315364826*^9}, {3.911317623368807*^9, 3.911317654495002*^9}, {
  3.911317713964373*^9, 3.911317723117019*^9}, {3.913320625446301*^9, 
  3.913320644772848*^9}, {3.913321026520166*^9, 
  3.9133210266509*^9}},ExpressionUUID->"5ef17200-1422-4184-9595-ba33231e8397"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fisher", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"DistributionChart", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<PetalLength cm\>\""}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], "&"}], ",", 
   "\"\<PetalLength\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.918140729755281*^9, 3.918140729954343*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"8e42eb3d-dc0f-4a80-8282-8aed0878d75e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|"setosa" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-0.19605693430634064`, 0.955}, {2.1960569343063403`, 
            1.9449999999999998`}}]}, {
           Directive[
            EdgeForm[
             Directive[
              Opacity[0.7]]], 
            RGBColor[
            0.798413061722744, 0.824719615472648, 0.968322270542458]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Opacity[0.7]]], 
              RGBColor[
              0.798413061722744, 0.824719615472648, 0.968322270542458]], {{
               Directive[
                EdgeForm[
                 Directive[
                  Opacity[0.7]]], 
                RGBColor[
                0.798413061722744, 0.824719615472648, 0.968322270542458]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GeometricTransformation[
                  Polygon[CompressedData["
1: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
X81KDJx0ZDOu9bPzul8Bt9u6Xbeb68iSFnW8EPKyAvoucw98kLTCvnUzeXJM
BdwPbWxTOkEr3qXojld9qsDvjbf6+idrhOxEaUCr7ArY1g0PNpmnEeETfiiG
FVVAetgh+FxOjRhY58OExVUVWGl5pGbpqhrxIEK6tN+gEvfnZ0eGKNXCaluo
8nqzSiQu62J/dbda3Oh/eWJsu0pcXm6at7S+WnQsOnGlsEcl7FIX1bXwqxYB
N3eXNxlUiecrlzv96VgtzFzXOtiMrsTDp4kNvoVWiVNtFwXOmlIJq9N7B9aX
VQnj1MmV2+fVfp7LpH67kyrFkZMjplxcVoktZwdZjHWpFHUcrK+92lCJFa/G
WbsoK8Tueu2qf+6uhEEr8+AvRypE1atG0wy9KqE4btniWvsKsWlnzfWeZyux
9eqN7tFhtfNlYKF6clAlDLe3dRw2pXa+lH51XB9aidfie8uq3yqRdyf+5unw
Svi/NzXRPaASzkvDNU+jK5HkvPaTnYVKfLW4O+NrSiXCHaSJb14qxawM/9va
rEo8+dN+3Pr5SpF8+qhOp8JK9IubcGaCukw4TN3hZFdZe73afWo+OqBMRNdf
eXd53SqEXbrpP0uUidFv5+oda1oFRc975buzFSJit/3s0LZViEzp/+7RIYWw
HTIk+GP3KnQIzJxc1FMhHpV1r1M+oApXNrea1TlZLnqHtJrbelQVdplOUzhs
k4vby41Ch0+uQsuwVnOcO8hF586VdZ3nVuHn5vmPp8eWisuZv+cdWFqF08Zr
jVptLBWtz6Xev7G+CsuX3Gka1K5U+E2Prhf3TxWG1jwflBdTIpoYP11Q5FmF
s8LpZOKmEuEVfeNh0zNV6GP1RDG5Y4kw2H/GaEBgFZwm/DUOqtUr+4YfXjQ7
pAq3sgu0npVFQl2++fGOF1XY5mxyvcfMIrH1wdIGl6KqEDz+gtHc+4VCvsrJ
+fXHKvS/9kNT3KhQrLG0e5L7vQqz/mb+jVxRIH7/GNDIqKAKK47bXQqO+ivc
LnRxtaqoQn1FS5ujnf+KTKcWz6bUqUZSWnf1oL1/xNymdRtvaFIN476lK898
yxcpcWVufm2q4TRyq66Pbb6Ycujn82fdqtE/N9Gi2enfIlaW0uSbTTUs29tl
GZf8EmOrI5fqjKxGiwZrh/5j/0tIjx+Gd3Kohp+xuu3SoDwx1COw2bg51ShO
v//kW02uCOtxyn3FkmpsPtdzaYlTruibuy/i2LpqdP8SNzY85Ke4e2l98/u7
qjE4q/k5d8OfwnKuy4qUI9V4erLt4y7OOeJqc0ep/HR17fwrf2f1PFu0TRzZ
0vxqNeLefVsPk2xx9kjfVSOCqzH6TvxkyzU/hMmYDq+dn1fD2zJ1yOOYLHFc
08Ts4LtqNFg29LzUNUsYPdNZczO59njTxv+Y1OC7OLChJDIusxpWcxcleid8
E9peWa2K/1Sjhypsr+npr2L778S1zcprz39RnkeoS4ZQXsXbAfpqfDdsE95r
ULrwWBBiPqexGkNzd713NkkTf00vrdtprkaip0q3bcUXsTT5eNQlSzXOKNuN
75lX61+8/mkb2V8Nq2CPH9MyP4n549ZsyBO1f28xvofDjxTxRXdhjNEkNc7H
7TnwvvijcAx3aN9rdu3fX19z3V7/o0jYPHzTVDc1vIOS9+T1TRbj+/aK2+Ch
RuMV+4ecXfpBRP5t0+HMTjUGPQrppH8rSYy43nDL83/VKLJbc6SxIlE8W6yO
/+arxuZLwe1zQ98LG/OCjrpX1DiodWiuOpogQj5lbO18T40e0xIdDx2IFz28
496Pe6bG7V+J8ffOx4lr9i86r3yrht8fZ4PZ72OFRd07249/UGPEiTP1xrSP
Ff44n3T/mxoD5h8bl+cVI1pu9+z6KV+N4kOB+760jBE+Ntt3VijVCPNOc3UK
jxYNi5cnm+vV4KX1vSWLd0aLw7fmdBPGNXAvmnYye2a00HOb8I9L6xp0Knc5
ETQuWuxqZ5tysGsNtt1N+2M/NVpUpHbrcatfDR56H749Z0202HDKbE/8iBpU
6XRpNehytCh0MPxcbF+D6Ovf46x/Rgt3w4qeJrNqX0d2ytg4OEbkvP61d6Br
7ev5FhO6+8eIhbu+fJmztgZO10Z4z6sfK9IGRfXataMG98s8phsfiBUz5GH7
Lx+uQYs5md2HGsSJxLvX0yJP1WBxZb3dn4/HCftlfr1/XapB+HKzPR/N48Xb
DocO1r9bA9dBl4y73YkXsq+bMno9rcGkMT6hSUMSxAu/JX2nvanBHh+DTSnR
CWLgtJmHNybV4NLWb2/GT38v7jcY++3M1xoYR/ZuOTP1vbB6Z9P/xe8afPjh
tm2gU6K4safzkcyyGgQG3VaNiksUHYc2/66rq4Ft8KI5qtZJIkCpP6BLIw1u
j7ZY7mKfJMxCFZ7jW2lwxMzHSGxIEqdW5GSt7KLBHoNxnuW+ScK4y8eBJ/pq
cCejZaf6IUniyPfXXg+Ga6CqXBZu+CpJ1Dn/IPvTBA1WdXt88Fxsktg94+rg
ypka9A6cOXtLXJKoMj55vI2LBoYJU3LXRSaJTTF7f4o1Gvh3v3Vv9YMkUbJ/
3RDX7bXHt3jiqNlnk8TKEc7ehw5p8NHj6QenTUkir2Jq3q2TGjgVd5D/MyFJ
OD+UDUu4qIHXxfLuei2SxNfVfU6W3NagQQODHhNDE8Wsbha/TZ5osE5d6bmr
a6JIzm48YlCkBsFpC367HXsvHAK0p+YmajD8TVL7vNwEET2rOH9XhgZKaxNX
TZ8EMbrZd3HllwZpC2tN3dp4ERH//vQbhQaDj+hHTg6ME7aHI/7+0mqQ30Yh
/xofKx6NDB7ZoKEWje+1W3CjMEb0VgecsTbT4uRbl2ZygxhxO+xY4bTOWjzc
dKKwTuto0WXdrtGb+mhxbL1iRLduUeJyz9Xnzg7TYuIiT/8r/d4J87z5xS/G
azFLoU4NHfJW+F2eNPb7DC2imgSMODbyjWg6b5i/nrMWnyOWyV3GRwqvFlal
XVZroTLLvjF16mtRL8l83IRtWtQ973p6ydxXYp9ng4BVB7V4jZYPLy2TRM2Y
avkJHy1mbF50NKU0QmzV/hn/MEBb6z+sVtq2eykUz9Ivfr5V+331WrgpZr4Q
azbGllU+1iLt3pThC84/E7+tn9u3fa1FfkOZz/WCJ8I1/9Zl2fva8xPdpI8O
YSIz8JzKNV2L42GjXSIiHok5C49MOpynRcKvZr1byh6KFLNtV2/Ltdgwa/9k
l+T7YspH94oEjRZCHlVPf3OoyLWzurG1ro7k9dl15iKnYNGxc2dHzwY60gEj
26CsnDtisW6bGv+mOlKrf+vXz/G9JS5mmty8Z6ojnWnzVpvhfkNkvGgwHW11
pL2RL3MmLbomzM7pa5I66Ujm+S0sD28JFE6bq29md9eRrs9fX/dB6BXhO10x
vay3jmSafrt/ktFl8aHPX03dgTpSeE5Krqd+gDA2zrllOkxHWnossPiJ9Xkx
6W/6jO6jdCTuDzyjk7VDxv//1/R+8Pvp88CfR98H/j46HvDx0PGCj5fOB3w+
dL7g86XrAb4edL3A14uuJ/h60vUGX2/6PcC/B/1e4N+Lfk/w70m/N/j3pvUA
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
                   "]], {{{0.07789340905498204, 0.}, {0., -1.}}, {1., 0.}}], {
                 "Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 1.9}, {
                    Style["75%", Bold], 1.6}, {
                    Style["median", Bold], 1.5}, {
                    Style["25%", Bold], 1.4}, {
                    Style["min", Bold], 1.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {
                 FontFamily -> 
                  "Times"}]]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, {}}, \
{}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.8039430656936596, 1.}, AxesStyle -> Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
          Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], 
          FrameTicks -> {{Automatic, Automatic}, {{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}}, GridLines -> Automatic, GridLinesStyle -> 
          Automatic, LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
          "PetalLength cm", PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {{{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}, Automatic}}], "versicolor" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-0.19605693430634064`, 2.895}, {2.1960569343063403`, 
            5.205}}]}, {
           Directive[
            EdgeForm[
             Directive[
              Opacity[0.7]]], 
            RGBColor[
            0.798413061722744, 0.824719615472648, 0.968322270542458]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Opacity[0.7]]], 
              RGBColor[
              0.798413061722744, 0.824719615472648, 0.968322270542458]], {{
               Directive[
                EdgeForm[
                 Directive[
                  Opacity[0.7]]], 
                RGBColor[
                0.798413061722744, 0.824719615472648, 0.968322270542458]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GeometricTransformation[
                  Polygon[CompressedData["
1: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
arw26gn43pmTEvXOiCIPOf3Xv04yNEmt333HHyPSscz8/HRkMtwoSw6YYGxM
Cqvba2ceT4aBWlvqNLM0Jn/nfZv7lyZDhkU3949tjGn/lvuWt7s+hfkdKlLv
9TamVw2NN5ltfwq/Bp/qsXuYMZlO0znhn/UU9kwbe9rJxZjWrjN8fKbdM2i8
UlfX1t2YrGvXmuW17RmE7o3y+LLWmOYMTxyyO+8Z2Ad5ptMuYzJYXn1mt1UK
pEdb9/I9bkwfMk970egUmPM8I9DlkjFN8DC4p781Bb6/3aXXKsqYMiNHRx28
kwI7a4Nn1SNjOnXIKG3HpxRo2PDL87iXxvSs/aaF5m1T4Wqn4N4Hyo3p98HJ
16cuSAVwdDk77acx2Uxxsd19MRVSXc0M2hqYkJM6aEbMu1SYtSZu0c96JlT7
odsF685p8G3/qoyEliZ06M3rI0/Xp4FPSBs7vx4m9HxMy7T8R2lQn96cc3Uw
IdsFU8+taJAOlzMPGXZwMqFxcx+1CvRMB7sPQ5b8mWdCN/pafViWkA7PdP9k
PlplQt5Dy2/8bvocXBuH9fX3MaEVm2vF2Xs9hy9dZwfN9jehuW897R2LnsO2
EfWMOwWbUHnwlfHmw16AxZwnS6sjTMhneP2fx8JfwMX1m18+STChsWM8s581
y4Defl36Hc8wITvbT32CDmdA8uWyC/NKTKiR/u/82kaZMD3upEnXKhNy2TDV
KMU7Ez69Gr1cW9eUPlaYrSurzoQtn+tkP9OY0vxOq7babsoCc8M79gE2pqQe
cbPR9Fov4ULThSFuXU3JQ/9Ei5nbX0KPnk3NegwypUYDdJd/M3kFj0e/WKEz
wZQaTlF45Pm/ginzd+akzTYlh54OGYXNsqFyk92AwOWmtGZR3Ozo69mw2f/T
xYVbTal9XdQ0s88BVWiQorefKZVNUZ1KTs2B8wmTV+mfN6UB7a7leM56Dd1y
TXJf3DSlo8VDJ0Z+ew0Pv8UMPBdnShctBt6esCMXnE1WXl6cXvP7PsGu3xu8
gXfNW6v6FprS3/COnxyuvoGNfXJXG30xpfpLbM+vs8oDxfiDb7K0zWjczM/3
M+flwVn3wYMvqMzoysXob76hedDF+9eVZdZmNNq51rw1VXmQcPya2r6TGQ1R
BmYt6pMPTjdmrjXtb0b2zvoew73yoeJR3fzsMWaUbzPpdkV8PqzPfzzkoqsZ
ra4sCmmpVwCmPzdeW7nEjGJ39mhcMqQAAhWdNQO9zOjysNM2Oj4F0Kll6Trl
ATMq6vhin1t8AcTDiYLcQDNKWB/65291AUycNGrolTAz6texWP9Sz0Io86wd
tobMaJadUcSUJYWwdntk3SEpZnR75GQLveBCMD7lvsE8z4z09rR7f/JVIZwK
tyrK/2BGPTzPra9rXAQdk9MdQ6vNqNmu5BaLeheB6+c4p/t6Cgppcy0raH4R
tP7XyDjITEFZc9dXRx8qgi8Gq3G3hYLajNqxMyq6CKI1aUuXWinIc8/DlODC
ItjWtK3t5BYKcpnXZusB/WIY2a5mkXRQkOuv5zt82hSDRc+8PbbdFWQ5yfv5
yeHFkDewVz8TUNBs4xn2pe7FcHG035cvgxXU2NN906adxbB0SuWFVyMVdNA1
Y9/moGLoPd/BOWaigi5dNnPTo2Kos/ysScg0BVV+LV3T+WUxJG/6Q75zFdRw
aN1rNp+K4cjuictXeCoodfbnKVr6JTDdP6zFlJUKOmA3sqqkUQm0PGeY3X+j
gsx+Xrrxt1MJfLo227fVdgWV5nj2WzCkBKKi7tsrfBWUXZywaKRLCXgn1PtW
dVhBFqcKXqd6lsDwtKUhrwMUdGhB70CLLSWgyX3iEh+koAdJxz72P1wCueW2
ZpevKmhOXgvtlSElEPxtc+yBcAUNP35pbOrdElhcK3vF6nsK6jum7sxlz0qg
p0nXVtMf1FzvSlv9NYUloF1/X86gZAV9ePL+0J/vJZDUvHxf2xcK0jMojtCY
lIJfxwED1K8VNL8QX2dZl8LUPgFVP4sUlKt/ztepZynYOny/mPdOQboO8Z3P
jS6FD+PGTE38qqCxlZERcfNL4fb0y4prfxQ0PmRpaIxXKWx214n3q6OkfikL
lGdOlILjqumr1hkrCSIM68+MKAWV953WM82VtGhUM/taaaWQ46vOdbBUUhO1
S79VlaVw/vjCAx2aK4lCE03vGJWB54XEgXXbKunB1cNfIluVQbcbTX/86ayk
GwMvHnd1KAOt++suF/ZW0sKnep0C55XBw0cvpj0eoKT7QQm+zj5lcPBFB9X1
YUpKV7eavDy4DJzzdz7wH6ekXxu3wtPEMmj+vnD1RhclDTq0uMPgsjJ498Ou
7ZxZStry6rZfpH45RNQ5+maYu5LcFqwM+N2yHDYqPh/stExJ15pf3lLuUA4O
lsMH11+npK85V55PnF8OipYXflZvUdL5YUGPLXzK4VVnraslu5Tk8WO2X/X5
cjgLzjOSDyrpyfTYq3kx5eAx7Jb61vGa+1sQ3Wnv63LoMsk08fhZJf2e7985
83s5/Js5f63XJSVZzFm7f7+iAhI8Y9vNv6GksgUtrPa2qID9ay3zR0YpyeH7
jcWBfSrAaftKv66xSjJdYuJxelQFWB9MGWL5uOb6PRJPz5hRARUBrX9rp9W8
f+0xU6M9K+DWxa3Xyl/W3H9TrZ971lbA+vBc15R8Je2MeFMn1LsCBsf00ESW
K8mkQ/m2WrsqwDT54MOATzXP//7oZnP3VkBW1rt1W38qqVdw0KiYmteBRYM7
uNdSkY7TMfdfNT/v9jGwYIyBiopOjCv4vbUCOv35dbiHUkXFx2Zp3VxXAX/0
Jgy1qq+i5rG6fxWLKiBeHfpHp6mKApZNDDCYXgG+VgZh71qq6HrdK1p+wypg
YptZs9I7qsjtZP39l7pUQJPu9+pG9VDRVsucIscGFVDW3+JxYD8VtZi1LmrF
n3K4MXLJBh8HFf3N+JXdPrsc1jondfQcraLJvbcYb4goh4FzbYrGO6log/7b
twt8y8F46Sb/3jNUZLr0XGatWeWQseGlo/V8FfVKcH44rks5nNrZ+Z/+YhUt
vvS27RLtcph/eO/1D6tUtNCzevPC5DLoeKZ0dsammvvBne2mHy6DX1fs693z
UVG7vs0zpzqXQeztE0nn9qloV2j3xt6WZbA7/tvGXf4qSl9vPq4iuxTGp4zq
tOS0itpXNe8TdrQUGuVcLJ4UrKIGFrPLP48thZLS2sf6hqqovlnnHamGpRD6
Zepwm8ia93d63t2DSmB1dWS1EarIekpSbuGyErA3Ut38nKCik58m1XK2KQFD
C4+5L5/WPL+Ddsc+Pi+GdOuE+pShoiVa1ZWPthTDyfZNki/k1tzvpZAO+h2K
YU6vtZv3ltS8XvJl5tOXRdB+8PPOyytVNEB9+Exf7yL4PqZ9qXOVihoHhtde
16YIaOqO4/b/VNS7zpIxQWmFsHNBwYiWumqq/un+Ond1IYxd0aeWmamaLqQn
uzk0LoSGXkdufdOoSc++i0Y7rgCK9nycl9NITSkbz/ZqM68Arh51bBhno6Yx
R93nFRgWwMrz559ebKem+lWagYOu5QOE/fPa31VNhUO6bls8Jh/0o526rrJT
08vsbq83fc2D1MQbZVMHqSlyRYbFXv88OJ5ufHLgCDWpXvTdc7NXHsx6M3dU
mwlqmpD8fakm+g20fUvaqqlq8mnc8Py42m/gW1WDiB+z1aTtVpo1Ylgu3Nde
seCNR83rcLfcdn6vwcf0mWXCcjVVvelp1TA3B0Y3aJVyZb2aBkQOPt+rVQ7U
t/X2PrRVTTt/VNULXZENBf+97rZ2j5qCy13Sjsa9gst23Stm+Knp1ts5LzXq
V7B86IGAISfV1M/w7Xf72S/BbsLb0e3Pqyn059iH3SKzQNd1UB3NFTXdWdI9
S984C555nI78fVNdM993/kqfmQlHV/90K7irppLx03uG3M0A163jGj+KU1OG
/oN2/nUzoPX+q6mhSWp68Pt3TNiyF/DlhN62I+lq2vvmWM/a6c8hOti1x4Zs
NZ3/vHjEiS41+vHm3bezCtXUq25Dh61H02Ekak47vlWTreVr64f/0sAiadHY
/77UvP8M/7OL5qVBXsYjnXq/1dR+6prlW9JS4WJBszv/tM0p3LWDo16/VFha
ucGj2NCcdCfVfVc7LAV6/8q0eqIyJ7u7jSPXWadAHd1O6TcamJPvPfvw9+2f
QbJyz/Zj1uakWOn+4X2jp3CkUUnPza3NaaHviYh/ymSY1qrf+7mdzGnP9OFP
bIyeQMuuxwNH9DInvwpHu/kGSfCx39dxXfqb08TTJl6PjR9D1PCReg0da36+
ep3faM0j2OIUElVrrDlFRxgq/lk/hOGztT3LJpvTEfsmPTO6JoL54ilNn7ma
U1dMMM0ZkQC56yKehy8wp++EY1TuD+CCj2LHySXmpHUorO+6vfGw+JBbb+81
5rT60R3QhMdBj9PxlQu8zCl1jarobX4saF9ufHb0TnPK9Ho1/7c6Fh5HrJ7Q
/YA5Ld13Y8CgYTHgF5um3/iYOR1rprX9sQ/BlKdto+ucqbl/15v+FocQbF9t
X/Q2xJz0nE6NUTW9D5XFedZpYea0ycrUduudaLj9qVfG7dvmNOP5+ONuU+7C
5r9+O0+TOVXGdDsdYxAFjgYf+mx/aE7uhvkzvWNug0oz9KNHijndUk9uFuId
CTlNzp0bl2VO+U/KfGxGR8D5tn8n9sozp80lm1q8sw0Hzx6TDJuWmVNV0eYR
VXq3oNvA6/f0PprTrxVhvu2+3ACt0UZLKr+bk9XY3CYby67DQ5c5zV9Um1Pr
+bMWpZaGwcF5mHlXT0Nek5JNLAtCwXlZ/d1nzTTUbUiqSQf9a9B807K+Oy00
NEiBnQLsr8C7XcmfFllpKMClVX5T30sQcaRF0MQWGhrVJOLI0vchsPGsl5Nd
Bw39/dinuu/0YHC4lm3UvLuGlh6aW/e/wiBQRHVFQ9CQ5cd6IRWrz8OrB/uW
fhqsocipJwdoNTkHZ1PLbbJGaqjv55R3bbPOgMfrAS/vT9TQzA/fSz4FBkKX
8oA9QdM0VKSJSqYvp+Df1++wZ66GBuZO6m304CQkaI39stRTQ9f1rttn3DoO
+42vXJi8UkOtkmJC28ceBad6us79Nmro9501rxu+OwLWzWeYtNiuoYldDvgH
/ncYKjpEkYmvhroOqTSLPnAIbvU2X/71sIYyrXukuBkdhPVDPFtkB2hIYTDk
SnDAfhg87uGrmCANbdo4fHiMry+YTrf2DbmqodljlQdLTPdAltt6+33hGrIH
HLIzaicErsz4uuJezfVtx3y13OcDC7Z0DJnyQEMVI9q2PrtrG3Ty3eUyILnm
et+nTWly2Rt+Hysybf1CQ97LjZyDK70gPqhvrOK1hiTP3nv96IrvRf/7Nf88
ys/z9VCux++H8n58Pyj3w/eLcr/8eVA+D39elM/LzwPlefDzQnle/DxRnic/
b5Tnzd8HyvfB3xfK98XfJ8r3yd83yvfN6wFlPfB6QVkvvJ5Q1hOvN5T1xusR
ZT3yekVZr7yeUdYzr3eU9c77AWU/8H5B2S+8n1D2E+83lP3G+xFlP/J+Rdmv
vJ9R9jPvd5T9zucBynnA5wXKecHnCcp5wucNynnD5xHKecTnFcp5xecZynnG
5x3KecfnIcp5yOclynnJ5ynKecrnLcp5y+cxynnM5zXKec3nOcp5zuc9ynnP
8wBlHvC8QJkXPE9Q5gnPG5R5w/MIZR7xvEKZVzzPUOYZzzuUecfzEGUe8rxE
mZc8T1HmKc9blHnL8xhlHvO8RpnXPM9R5jnPe5R5z3oARQ+wXkDRC6wnUPQE
6w0UvcF6BEWPsF5B0SusZ1D0DOsdFL3DeghFD7FeQtFLrKdQ9BTrLRS9xXoM
RY+xXkPRa6znUPQc6z0Uvcd6EEUPsl5E0YusJ1H0JOtNFL3JehRFj7JeRdGr
rGdR9CzrXRS9y3oYRQ+zXkbRy6ynUfQ0620Uvc16HEWPs15H0eus51H0POt9
FL3PfgDFD7BfQPEL7CdQ/AT7DRS/wX4ExY+wX0HxK+xnUPwM+x0Uv8N+CMUP
sV9C8Uvsp1D8FPstFL/FfgzFj7FfQ/Fr7OdQ/Bz7PRS/x34QxQ+yX0Txi+wn
Ufwk+00Uv8l+FMWPsl9F8avsZ1H8LPtdFL/LfhjFD7NfRvHL7KdR/DT7bRS/
zX4cxY+zX0fx6+znUfw8+30Uv895AEoewHkBSl7AeQJKnsB5A0rewHkESh7B
eQVKXsF5BkqewXkHSt7BeQhKHsJ5CUpewnkKSp7CeQtK3sJ5DEoew3kNSl7D
eQ5KnsN5D0rew3kQSh7EeRFKXsR5EkqexHkTSt7EeRRKHsV5FUpexXkWSp7F
eRdK3sV5GEoexnkZSl7GeRpKnsZ5G0rexnkcSh7HeR1KXsd5Hkqex3kfSt7H
eSBKHsh5IUpeyHkiSp7IeSNK3sh5JEoeyXklSl7JeSZKnsl5J0reyXkoSh7K
eSlKXsp5KkqeynkrSt7KeSxKHst5LUpey3kuSp7LeS9K3st5MEoezHkxSl7M
eTJKnsx5M0rezHk0Sh7NeTVKXs15NkqezXk3St7NeThKHs55OUpeznk6Sp7O
eTtK3s55PEoez3k9Sl7PeT5Kns95P0rez30ASh/AfQFKX8B9AkqfwH0DSt/A
fQRKH8F9BUpfwX0GSp/BfQdK38F9CEofwn0JSl/CfQpKn8J9C0rfwn0MSh/D
fQ1KX8N9Dkqfw30PSt/DfRBKH8R9EUpfxH0SSp/EfRNK38R9FEofxX0VSl/F
fRZKn8V9F0rfxX0YSh/GfRlKX8Z9Gkqfxn0bSt/GfRxKH8d9HUpfx30eSp/H
fR9K38d9IEofyH0hSl/IfSJKn8h9I0rfyH0kSh/JfSVKX8l9JkqfyX0nSt/J
fShKH8p9KUpfyn0qSp/KfStK38p9LEofy30tSl/LfS5Kn8t9L0rfy30wSh/M
fTFKX8x9MkqfzH0zSt/MfTRKH819NUpfzX02Sp/NfTdK3819OEofzn05Sl/O
fTpKn859O0rfzn08Sh/PfT1KX899Pkqfz30/St/PPAAKD8C8AAovwDwBCk/A
vAEKb8A8AgqPwLwCCq/APAMKz8C8AwrvwDwECg/BvAQKL8E8BQpPwbwFCm/B
PAYKj8G8BgqvwTwHCs/BvAcK78E8CAoPwrwICi/CPAkKT8K8CQpvwjwKCo/C
vAoKr8I8CwrPwrwLCu/CPAwKD8O8DAovwzwNCk/DvA0Kb8M8DgqPw7wOCq/D
PA8Kz8O8DwrvwzwQCg/EvBAKL8Q8EQpPxLwRCm/EPBIKj8S8EgqvxDwTCs/E
vBMK78Q8FAoPxbwUCi/FPBUKT8W8FQpvxTwWCo/FvBYKr8U8FwrPxbwXCu/F
PBgKD8a8GAovxjwZCk/GvBkKb8Y8GgqPxrwaCq/GPBsKz8a8GwrvxjwcCg/H
vBwKL8c8HQpPx7wdCm/HPB4Kj8e8HgqvxzwfCs/HvB8K78c8IAoPyLwgCi/I
PCEKT8i8IQpvyDwiCo/IvCIKr8g8IwrPyLwjCu/IPCQKD8m8JAovyTwlCk/J
vCUKb8k8JgqPybwmCq/JPCcKz8m8JwrvyTwoCg/KvCgKL8o8KQpPyrwpCm/K
PCoKj8q8KgqvyjwrCs/KvCsK78o8LAoPy7wsCi/LPC0KT8u8LQpvyzwu/n8e
9//xuii8LvO8KDwv874ovC/zwCg8MPPCKLww88QoPDHzxii8MfPIKDwy88oo
vDLzzCg8M/POKLwz89AoPDTz0ii8NPPUKDw189YovDXz2Cg89v/ktf8Pg9Hc
8A==
                   "]], {{{0.23626894130706216`, 0.}, {0., -1.}}, {1., 
                   0.}}], {"Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 5.1}, {
                    Style["75%", Bold], 4.6}, {
                    Style["median", Bold], 4.3}, {
                    Style["25%", Bold], 4.}, {
                    Style["min", Bold], 3.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {
                 FontFamily -> 
                  "Times"}]]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, {}}, \
{}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.8039430656936596, 3.}, AxesStyle -> Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
          Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], 
          FrameTicks -> {{Automatic, Automatic}, {{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}}, GridLines -> Automatic, GridLinesStyle -> 
          Automatic, LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
          "PetalLength cm", PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {{{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}, Automatic}}], "virginica" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-0.19605693430634064`, 4.38}, {2.1960569343063403`, 
            7.0200000000000005`}}]}, {
           Directive[
            EdgeForm[
             Directive[
              Opacity[0.7]]], 
            RGBColor[
            0.798413061722744, 0.824719615472648, 0.968322270542458]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Opacity[0.7]]], 
              RGBColor[
              0.798413061722744, 0.824719615472648, 0.968322270542458]], {{
               Directive[
                EdgeForm[
                 Directive[
                  Opacity[0.7]]], 
                RGBColor[
                0.798413061722744, 0.824719615472648, 0.968322270542458]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GeometricTransformation[
                  Polygon[CompressedData["
1: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
nlL9GOiSDuXsOGQg9ffNw1Z1CIL6y2yHvDluoGX5TZtX8zwCjVvcvety1kB1
/d8Wt7ocAC0eT3AMiTKQfkLKxId1D0O7LV+j/94y0LYit/Zxqw5CB4dtbccn
GsjCc1BE1n/7weF1w7CYVAN9qF9y684uf3A8FGNQ5RqoxM41qKe9H/TpN9h/
QVHF/at2vf5UvBf6/TDWevjeQPPcZvvNPrcHBp9e6dOyzEAtY559ja+6G4aP
UfzeVG6gi09rNr+XugPG1AhfVFjDmuwePhn55sY2mHQV3joqrEmxx26XfcIW
mDYre0qg3poSF8x+f/qdL8zSzX3yvYk17VmxtEf/dptgXpKJ24h21uTTRLfD
bIcPeC0LSLrUxZpiUvqfyzfZAMta2PWq42RNNWNDj131XwdrHifGzB5gTX1i
dpZVX7kGfLZMsr073Jpezo/p5/5rJWxxKD1pM9GahDfver29/toZ//9n/n2U
3+froVyP/x7K3+P7Qbkfvl+U++Xvg/J9+PuifF9+HijPg58XyvPi54nyPPl5
ozxvfh8o74PfF8r74veJ8j75faO8b14PKOuB1wvKeuH1hLKeeL2hrDdejyjr
kdcrynrl9Yyynnm9o6x33g8o+4H3C8p+4f2Esp94v6HsN96PKPuR9yvKfuX9
jLKfeb+j7HeuByj1gOsFSr3geoJST7jeoNQbrkco9YjrFUq94nqGUs+43qHU
O66HKPWQ6yVKveR6ilJPud6i1Fuuxyj1mOs1Sr3meo5Sz7neo9R7Pg9QzgM+
L1DOCz5PUM4TPm9Qzhs+j1DOIz6vUM4rPs9QzjM+71DOOz4PUc5DPi9Rzks+
T1HOUz5vUc5bPo9RzmM+r1HOaz7PUc5zPu9RznvuB1D6Ae4XUPoF7idQ+gnu
N1D6De5HUPoR7ldQ+hXuZ1D6Ge53UPod7odQ+iHul1D6Je6nUPop7rdQ+i3u
x1D6Me7XUPo17udQ+jnu91D6Pe4HUfpB7hdR+kXuJ1H6Se43UfpN7kdR+lHu
V1H6Ve5nUfpZ7ndR+l3uh1H6Ye6XUfpl7qdR+mnut1H6be7HUfpx7tdR+nXu
51H6ee738X/7/f+ZB1DmAZ4XUOYFnidQ5gmeN1DmDZ5HUOYRnldQ5hWeZ1Dm
GZ53UOYdnodQ5iGel1DmJZ6nUOYpnrdQ5i2ex1DmMZ7XUOY1nudQ5jme91Dm
PZ4HUeZBnhdR5kWeJ1HmSZ43UeZNnkdR5lGeV1HmVZ5nUeZZnndR5l2eh1Hm
YZ6XUeZlnqdR5mmet1HmbZ7HUeZxntdR5nWe51HmeZ73UeZ95gEoPIB5AQov
YJ6AwhOYN6DwBuYRKDyCeQUKr2CegcIzmHeg8A7mISg8hHkJCi9hnoLCU5i3
oPAW5jEoPIZ5DQqvYZ6DwnOY96DwHuZBKDyIeREKL2KehMKTmDeh8CbmUSg8
inkVCq9inoXCs5h3ofAu5mEoPIx5GQovY56GwtOYt6HwNuZxKDyOeR0Kr2Oe
h8LzmPeh8D7mgSg8kHkhCi9knojCE5k3ovBG5pEoPJJ5JQqvZJ6JwjOZd6Lw
TuahKDyUeSkKL2WeisJTmbei8FbmsSg8lnktCq9lnovCc5n3ovBe5sEoPJh5
MQovZp6MwpOZN6PwZubRKDyaeTUKr2aejcKzmXej8G7m4Sg8nHk5Ci9nno7C
05m3o/B25vEoPJ55PQqvZ56PwvOZ96Pwfs4DUPIAzgtQ8gLOE1DyBM4bUPIG
ziNQ8gjOK1DyCs4zUPIMzjtQ8g7OQ1DyEM5LUPISzlNQ8hTOW1DyFs5jUPIY
zmtQ8hrOc1DyHM57UPIezoNQ8iDOi1DyIs6TUPIkzptQ8ibOo1DyKM6rUPIq
zrNQ8izOu1DyLs7DUPIwzstQ8jLO01DyNM7bUPI2zuNQ8jjO61DyOs7zUPI8
zvtQ8j7OA1HyQM4LUfJCzhNR8kTOG1HyRs4jUfJIzitR8krOM1HyTM47UfJO
zkNR8lDOS1HyUs5TUfJUzltR8lbOY1HyWM5rUfJaznNR8lzOe1HyXs6DUfJg
zotR8mLOk1HyZM6bUfJmzqNR8mjOq1Hyas6zUfJszrtR8m7Ow1HycM7LUfJy
ztNR8nTO21Hyds7jUfJ4zutR8nrO81HyfM77UfJ+9gFQfAD2BVB8AfYJUHwC
9g1QfAP2EVB8BPYVUHwF9hlQfAb2HVB8B/YhUHwI9iVQfAn2KVB8CvYtUHwL
9jFQfAz2NVB8DfY5UHwO9j1QfA/2QVB8EPZFUHwR9klQfBL2TVB8E/ZRUHwU
9lVQfBX2WVB8FvZdUHwX9mFQfBj2ZVB8GfZpUHwa9m1QfBv2cVB8HPZ1UHwd
9nlQfB72fVB8H/aBUHwg9oVQfCH2iVB8IvaNUHwj9pFQfCT2lVB8JfaZUHwm
9p1QfCf2oVB8KPalUHwp9qlQfCr2rVB8K/axUHws9rVQfC32uVB8Lva9UHwv
9sFQfDD2xVB8MfbJUHwy9s1QfDP20VB8NPbVUHw19tlQfDb23VB8N/bhUHw4
9uVQfDn26VB8OvbtUHw79vFQfDz29VB8Pfb5UHw+9v1QfD/2AVF8QPYFUXxB
9glRfEL2DVF8Q/YRUXxE9hVRfEX2GVF8RvYdUXxH9iFRfEj2JVF8SfYpUXxK
9i1RfEv2MVF8TPY18X99zf/xOVF8TvY9UXxP9kFRfFD2RVF8UfZJUXxS9k1R
fFP2UVF8VPZVUXxV9llRfFb2XVF8V/ZhUXxY9mVRfFn2aVF8WvZtUXxb9nFR
fFz2dVF8XfZ5UXxe9n1RfF/2gVF8YPaFUXxh9olRfGL2jVF8Y/aRUXxk9pVR
fGX2mVF85v/Xd/4/lzeqZA==
                   "]], {{{0.30316319252186485`, 0.}, {0., -1.}}, {1., 
                   0.}}], {"Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 6.9}, {
                    Style["75%", Bold], 5.9}, {
                    Style["median", Bold], 5.5}, {
                    Style["25%", Bold], 5.1}, {
                    Style["min", Bold], 4.5}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {
                 FontFamily -> 
                  "Times"}]]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, {}}, \
{}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.8039430656936596, 4.5}, AxesStyle -> Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
          Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], 
          FrameTicks -> {{Automatic, Automatic}, {{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}}, GridLines -> Automatic, GridLinesStyle -> 
          Automatic, LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
          "PetalLength cm", PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {{{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}, Automatic}}]|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Graphics], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Graphics], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["setosa"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-0.19605693430634064`, 0.955}, {
                    2.1960569343063403`, 1.9449999999999998`}}]}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GeometricTransformationBox[
                    PolygonBox[CompressedData["
1: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
X81KDJx0ZDOu9bPzul8Bt9u6Xbeb68iSFnW8EPKyAvoucw98kLTCvnUzeXJM
BdwPbWxTOkEr3qXojld9qsDvjbf6+idrhOxEaUCr7ArY1g0PNpmnEeETfiiG
FVVAetgh+FxOjRhY58OExVUVWGl5pGbpqhrxIEK6tN+gEvfnZ0eGKNXCaluo
8nqzSiQu62J/dbda3Oh/eWJsu0pcXm6at7S+WnQsOnGlsEcl7FIX1bXwqxYB
N3eXNxlUiecrlzv96VgtzFzXOtiMrsTDp4kNvoVWiVNtFwXOmlIJq9N7B9aX
VQnj1MmV2+fVfp7LpH67kyrFkZMjplxcVoktZwdZjHWpFHUcrK+92lCJFa/G
WbsoK8Tueu2qf+6uhEEr8+AvRypE1atG0wy9KqE4btniWvsKsWlnzfWeZyux
9eqN7tFhtfNlYKF6clAlDLe3dRw2pXa+lH51XB9aidfie8uq3yqRdyf+5unw
Svi/NzXRPaASzkvDNU+jK5HkvPaTnYVKfLW4O+NrSiXCHaSJb14qxawM/9va
rEo8+dN+3Pr5SpF8+qhOp8JK9IubcGaCukw4TN3hZFdZe73afWo+OqBMRNdf
eXd53SqEXbrpP0uUidFv5+oda1oFRc975buzFSJit/3s0LZViEzp/+7RIYWw
HTIk+GP3KnQIzJxc1FMhHpV1r1M+oApXNrea1TlZLnqHtJrbelQVdplOUzhs
k4vby41Ch0+uQsuwVnOcO8hF586VdZ3nVuHn5vmPp8eWisuZv+cdWFqF08Zr
jVptLBWtz6Xev7G+CsuX3Gka1K5U+E2Prhf3TxWG1jwflBdTIpoYP11Q5FmF
s8LpZOKmEuEVfeNh0zNV6GP1RDG5Y4kw2H/GaEBgFZwm/DUOqtUr+4YfXjQ7
pAq3sgu0npVFQl2++fGOF1XY5mxyvcfMIrH1wdIGl6KqEDz+gtHc+4VCvsrJ
+fXHKvS/9kNT3KhQrLG0e5L7vQqz/mb+jVxRIH7/GNDIqKAKK47bXQqO+ivc
LnRxtaqoQn1FS5ujnf+KTKcWz6bUqUZSWnf1oL1/xNymdRtvaFIN476lK898
yxcpcWVufm2q4TRyq66Pbb6Ycujn82fdqtE/N9Gi2enfIlaW0uSbTTUs29tl
GZf8EmOrI5fqjKxGiwZrh/5j/0tIjx+Gd3Kohp+xuu3SoDwx1COw2bg51ShO
v//kW02uCOtxyn3FkmpsPtdzaYlTruibuy/i2LpqdP8SNzY85Ke4e2l98/u7
qjE4q/k5d8OfwnKuy4qUI9V4erLt4y7OOeJqc0ep/HR17fwrf2f1PFu0TRzZ
0vxqNeLefVsPk2xx9kjfVSOCqzH6TvxkyzU/hMmYDq+dn1fD2zJ1yOOYLHFc
08Ts4LtqNFg29LzUNUsYPdNZczO59njTxv+Y1OC7OLChJDIusxpWcxcleid8
E9peWa2K/1Sjhypsr+npr2L778S1zcprz39RnkeoS4ZQXsXbAfpqfDdsE95r
ULrwWBBiPqexGkNzd713NkkTf00vrdtprkaip0q3bcUXsTT5eNQlSzXOKNuN
75lX61+8/mkb2V8Nq2CPH9MyP4n549ZsyBO1f28xvofDjxTxRXdhjNEkNc7H
7TnwvvijcAx3aN9rdu3fX19z3V7/o0jYPHzTVDc1vIOS9+T1TRbj+/aK2+Ch
RuMV+4ecXfpBRP5t0+HMTjUGPQrppH8rSYy43nDL83/VKLJbc6SxIlE8W6yO
/+arxuZLwe1zQ98LG/OCjrpX1DiodWiuOpogQj5lbO18T40e0xIdDx2IFz28
496Pe6bG7V+J8ffOx4lr9i86r3yrht8fZ4PZ72OFRd07249/UGPEiTP1xrSP
Ff44n3T/mxoD5h8bl+cVI1pu9+z6KV+N4kOB+760jBE+Ntt3VijVCPNOc3UK
jxYNi5cnm+vV4KX1vSWLd0aLw7fmdBPGNXAvmnYye2a00HOb8I9L6xp0Knc5
ETQuWuxqZ5tysGsNtt1N+2M/NVpUpHbrcatfDR56H749Z0202HDKbE/8iBpU
6XRpNehytCh0MPxcbF+D6Ovf46x/Rgt3w4qeJrNqX0d2ytg4OEbkvP61d6Br
7ev5FhO6+8eIhbu+fJmztgZO10Z4z6sfK9IGRfXataMG98s8phsfiBUz5GH7
Lx+uQYs5md2HGsSJxLvX0yJP1WBxZb3dn4/HCftlfr1/XapB+HKzPR/N48Xb
DocO1r9bA9dBl4y73YkXsq+bMno9rcGkMT6hSUMSxAu/JX2nvanBHh+DTSnR
CWLgtJmHNybV4NLWb2/GT38v7jcY++3M1xoYR/ZuOTP1vbB6Z9P/xe8afPjh
tm2gU6K4safzkcyyGgQG3VaNiksUHYc2/66rq4Ft8KI5qtZJIkCpP6BLIw1u
j7ZY7mKfJMxCFZ7jW2lwxMzHSGxIEqdW5GSt7KLBHoNxnuW+ScK4y8eBJ/pq
cCejZaf6IUniyPfXXg+Ga6CqXBZu+CpJ1Dn/IPvTBA1WdXt88Fxsktg94+rg
ypka9A6cOXtLXJKoMj55vI2LBoYJU3LXRSaJTTF7f4o1Gvh3v3Vv9YMkUbJ/
3RDX7bXHt3jiqNlnk8TKEc7ehw5p8NHj6QenTUkir2Jq3q2TGjgVd5D/MyFJ
OD+UDUu4qIHXxfLuei2SxNfVfU6W3NagQQODHhNDE8Wsbha/TZ5osE5d6bmr
a6JIzm48YlCkBsFpC367HXsvHAK0p+YmajD8TVL7vNwEET2rOH9XhgZKaxNX
TZ8EMbrZd3HllwZpC2tN3dp4ERH//vQbhQaDj+hHTg6ME7aHI/7+0mqQ30Yh
/xofKx6NDB7ZoKEWje+1W3CjMEb0VgecsTbT4uRbl2ZygxhxO+xY4bTOWjzc
dKKwTuto0WXdrtGb+mhxbL1iRLduUeJyz9Xnzg7TYuIiT/8r/d4J87z5xS/G
azFLoU4NHfJW+F2eNPb7DC2imgSMODbyjWg6b5i/nrMWnyOWyV3GRwqvFlal
XVZroTLLvjF16mtRL8l83IRtWtQ973p6ydxXYp9ng4BVB7V4jZYPLy2TRM2Y
avkJHy1mbF50NKU0QmzV/hn/MEBb6z+sVtq2eykUz9Ivfr5V+331WrgpZr4Q
azbGllU+1iLt3pThC84/E7+tn9u3fa1FfkOZz/WCJ8I1/9Zl2fva8xPdpI8O
YSIz8JzKNV2L42GjXSIiHok5C49MOpynRcKvZr1byh6KFLNtV2/Ltdgwa/9k
l+T7YspH94oEjRZCHlVPf3OoyLWzurG1ro7k9dl15iKnYNGxc2dHzwY60gEj
26CsnDtisW6bGv+mOlKrf+vXz/G9JS5mmty8Z6ojnWnzVpvhfkNkvGgwHW11
pL2RL3MmLbomzM7pa5I66Ujm+S0sD28JFE6bq29md9eRrs9fX/dB6BXhO10x
vay3jmSafrt/ktFl8aHPX03dgTpSeE5Krqd+gDA2zrllOkxHWnossPiJ9Xkx
6W/6jO6jdCTuDzyjk7VDxv//1/R+8Pvp88CfR98H/j46HvDx0PGCj5fOB3w+
dL7g86XrAb4edL3A14uuJ/h60vUGX2/6PcC/B/1e4N+Lfk/w70m/N/j3pvUA
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
                    "]], {{{0.07789340905498204, 0.}, {0., -1.}}, {1., 
                    0.}}]}], "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "1.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "1.6`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "1.5`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "1.4`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}},
                     GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}},
                     AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {FontFamily -> "Times"}, 
                    StripOnInput -> False]], Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 1.9}, {
                    Style["75%", Bold], 1.6}, {
                    Style["median", Bold], 1.5}, {
                    Style["25%", Bold], 1.4}, {
                    Style["min", Bold], 1.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {FontFamily -> "Times"}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, \
{}}, {}}, {}}, {PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0.8039430656936596, 1.}, AxesStyle -> 
                  Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> 
                  True, FrameLabel -> {{None, None}, {None, None}}, 
                  FrameStyle -> Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], 
                  FrameTicks -> {{Automatic, Automatic}, {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
                   GridLines -> Automatic, GridLinesStyle -> Automatic, 
                  LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
                  FormBox["\"PetalLength cm\"", TraditionalForm], 
                  PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
                    Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["versicolor"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-0.19605693430634064`, 2.895}, {
                    2.1960569343063403`, 5.205}}]}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GeometricTransformationBox[
                    PolygonBox[CompressedData["
1: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
arw26gn43pmTEvXOiCIPOf3Xv04yNEmt333HHyPSscz8/HRkMtwoSw6YYGxM
Cqvba2ceT4aBWlvqNLM0Jn/nfZv7lyZDhkU3949tjGn/lvuWt7s+hfkdKlLv
9TamVw2NN5ltfwq/Bp/qsXuYMZlO0znhn/UU9kwbe9rJxZjWrjN8fKbdM2i8
UlfX1t2YrGvXmuW17RmE7o3y+LLWmOYMTxyyO+8Z2Ad5ptMuYzJYXn1mt1UK
pEdb9/I9bkwfMk970egUmPM8I9DlkjFN8DC4p781Bb6/3aXXKsqYMiNHRx28
kwI7a4Nn1SNjOnXIKG3HpxRo2PDL87iXxvSs/aaF5m1T4Wqn4N4Hyo3p98HJ
16cuSAVwdDk77acx2Uxxsd19MRVSXc0M2hqYkJM6aEbMu1SYtSZu0c96JlT7
odsF685p8G3/qoyEliZ06M3rI0/Xp4FPSBs7vx4m9HxMy7T8R2lQn96cc3Uw
IdsFU8+taJAOlzMPGXZwMqFxcx+1CvRMB7sPQ5b8mWdCN/pafViWkA7PdP9k
PlplQt5Dy2/8bvocXBuH9fX3MaEVm2vF2Xs9hy9dZwfN9jehuW897R2LnsO2
EfWMOwWbUHnwlfHmw16AxZwnS6sjTMhneP2fx8JfwMX1m18+STChsWM8s581
y4Defl36Hc8wITvbT32CDmdA8uWyC/NKTKiR/u/82kaZMD3upEnXKhNy2TDV
KMU7Ez69Gr1cW9eUPlaYrSurzoQtn+tkP9OY0vxOq7babsoCc8M79gE2pqQe
cbPR9Fov4ULThSFuXU3JQ/9Ei5nbX0KPnk3NegwypUYDdJd/M3kFj0e/WKEz
wZQaTlF45Pm/ginzd+akzTYlh54OGYXNsqFyk92AwOWmtGZR3Ozo69mw2f/T
xYVbTal9XdQ0s88BVWiQorefKZVNUZ1KTs2B8wmTV+mfN6UB7a7leM56Dd1y
TXJf3DSlo8VDJ0Z+ew0Pv8UMPBdnShctBt6esCMXnE1WXl6cXvP7PsGu3xu8
gXfNW6v6FprS3/COnxyuvoGNfXJXG30xpfpLbM+vs8oDxfiDb7K0zWjczM/3
M+flwVn3wYMvqMzoysXob76hedDF+9eVZdZmNNq51rw1VXmQcPya2r6TGQ1R
BmYt6pMPTjdmrjXtb0b2zvoew73yoeJR3fzsMWaUbzPpdkV8PqzPfzzkoqsZ
ra4sCmmpVwCmPzdeW7nEjGJ39mhcMqQAAhWdNQO9zOjysNM2Oj4F0Kll6Trl
ATMq6vhin1t8AcTDiYLcQDNKWB/65291AUycNGrolTAz6texWP9Sz0Io86wd
tobMaJadUcSUJYWwdntk3SEpZnR75GQLveBCMD7lvsE8z4z09rR7f/JVIZwK
tyrK/2BGPTzPra9rXAQdk9MdQ6vNqNmu5BaLeheB6+c4p/t6Cgppcy0raH4R
tP7XyDjITEFZc9dXRx8qgi8Gq3G3hYLajNqxMyq6CKI1aUuXWinIc8/DlODC
ItjWtK3t5BYKcpnXZusB/WIY2a5mkXRQkOuv5zt82hSDRc+8PbbdFWQ5yfv5
yeHFkDewVz8TUNBs4xn2pe7FcHG035cvgxXU2NN906adxbB0SuWFVyMVdNA1
Y9/moGLoPd/BOWaigi5dNnPTo2Kos/ysScg0BVV+LV3T+WUxJG/6Q75zFdRw
aN1rNp+K4cjuictXeCoodfbnKVr6JTDdP6zFlJUKOmA3sqqkUQm0PGeY3X+j
gsx+Xrrxt1MJfLo227fVdgWV5nj2WzCkBKKi7tsrfBWUXZywaKRLCXgn1PtW
dVhBFqcKXqd6lsDwtKUhrwMUdGhB70CLLSWgyX3iEh+koAdJxz72P1wCueW2
ZpevKmhOXgvtlSElEPxtc+yBcAUNP35pbOrdElhcK3vF6nsK6jum7sxlz0qg
p0nXVtMf1FzvSlv9NYUloF1/X86gZAV9ePL+0J/vJZDUvHxf2xcK0jMojtCY
lIJfxwED1K8VNL8QX2dZl8LUPgFVP4sUlKt/ztepZynYOny/mPdOQboO8Z3P
jS6FD+PGTE38qqCxlZERcfNL4fb0y4prfxQ0PmRpaIxXKWx214n3q6OkfikL
lGdOlILjqumr1hkrCSIM68+MKAWV953WM82VtGhUM/taaaWQ46vOdbBUUhO1
S79VlaVw/vjCAx2aK4lCE03vGJWB54XEgXXbKunB1cNfIluVQbcbTX/86ayk
GwMvHnd1KAOt++suF/ZW0sKnep0C55XBw0cvpj0eoKT7QQm+zj5lcPBFB9X1
YUpKV7eavDy4DJzzdz7wH6ekXxu3wtPEMmj+vnD1RhclDTq0uMPgsjJ498Ou
7ZxZStry6rZfpH45RNQ5+maYu5LcFqwM+N2yHDYqPh/stExJ15pf3lLuUA4O
lsMH11+npK85V55PnF8OipYXflZvUdL5YUGPLXzK4VVnraslu5Tk8WO2X/X5
cjgLzjOSDyrpyfTYq3kx5eAx7Jb61vGa+1sQ3Wnv63LoMsk08fhZJf2e7985
83s5/Js5f63XJSVZzFm7f7+iAhI8Y9vNv6GksgUtrPa2qID9ay3zR0YpyeH7
jcWBfSrAaftKv66xSjJdYuJxelQFWB9MGWL5uOb6PRJPz5hRARUBrX9rp9W8
f+0xU6M9K+DWxa3Xyl/W3H9TrZ971lbA+vBc15R8Je2MeFMn1LsCBsf00ESW
K8mkQ/m2WrsqwDT54MOATzXP//7oZnP3VkBW1rt1W38qqVdw0KiYmteBRYM7
uNdSkY7TMfdfNT/v9jGwYIyBiopOjCv4vbUCOv35dbiHUkXFx2Zp3VxXAX/0
Jgy1qq+i5rG6fxWLKiBeHfpHp6mKApZNDDCYXgG+VgZh71qq6HrdK1p+wypg
YptZs9I7qsjtZP39l7pUQJPu9+pG9VDRVsucIscGFVDW3+JxYD8VtZi1LmrF
n3K4MXLJBh8HFf3N+JXdPrsc1jondfQcraLJvbcYb4goh4FzbYrGO6log/7b
twt8y8F46Sb/3jNUZLr0XGatWeWQseGlo/V8FfVKcH44rks5nNrZ+Z/+YhUt
vvS27RLtcph/eO/1D6tUtNCzevPC5DLoeKZ0dsammvvBne2mHy6DX1fs693z
UVG7vs0zpzqXQeztE0nn9qloV2j3xt6WZbA7/tvGXf4qSl9vPq4iuxTGp4zq
tOS0itpXNe8TdrQUGuVcLJ4UrKIGFrPLP48thZLS2sf6hqqovlnnHamGpRD6
Zepwm8ia93d63t2DSmB1dWS1EarIekpSbuGyErA3Ut38nKCik58m1XK2KQFD
C4+5L5/WPL+Ddsc+Pi+GdOuE+pShoiVa1ZWPthTDyfZNki/k1tzvpZAO+h2K
YU6vtZv3ltS8XvJl5tOXRdB+8PPOyytVNEB9+Exf7yL4PqZ9qXOVihoHhtde
16YIaOqO4/b/VNS7zpIxQWmFsHNBwYiWumqq/un+Ond1IYxd0aeWmamaLqQn
uzk0LoSGXkdufdOoSc++i0Y7rgCK9nycl9NITSkbz/ZqM68Arh51bBhno6Yx
R93nFRgWwMrz559ebKem+lWagYOu5QOE/fPa31VNhUO6bls8Jh/0o526rrJT
08vsbq83fc2D1MQbZVMHqSlyRYbFXv88OJ5ufHLgCDWpXvTdc7NXHsx6M3dU
mwlqmpD8fakm+g20fUvaqqlq8mnc8Py42m/gW1WDiB+z1aTtVpo1Ylgu3Nde
seCNR83rcLfcdn6vwcf0mWXCcjVVvelp1TA3B0Y3aJVyZb2aBkQOPt+rVQ7U
t/X2PrRVTTt/VNULXZENBf+97rZ2j5qCy13Sjsa9gst23Stm+Knp1ts5LzXq
V7B86IGAISfV1M/w7Xf72S/BbsLb0e3Pqyn059iH3SKzQNd1UB3NFTXdWdI9
S984C555nI78fVNdM993/kqfmQlHV/90K7irppLx03uG3M0A163jGj+KU1OG
/oN2/nUzoPX+q6mhSWp68Pt3TNiyF/DlhN62I+lq2vvmWM/a6c8hOti1x4Zs
NZ3/vHjEiS41+vHm3bezCtXUq25Dh61H02Ekak47vlWTreVr64f/0sAiadHY
/77UvP8M/7OL5qVBXsYjnXq/1dR+6prlW9JS4WJBszv/tM0p3LWDo16/VFha
ucGj2NCcdCfVfVc7LAV6/8q0eqIyJ7u7jSPXWadAHd1O6TcamJPvPfvw9+2f
QbJyz/Zj1uakWOn+4X2jp3CkUUnPza3NaaHviYh/ymSY1qrf+7mdzGnP9OFP
bIyeQMuuxwNH9DInvwpHu/kGSfCx39dxXfqb08TTJl6PjR9D1PCReg0da36+
ep3faM0j2OIUElVrrDlFRxgq/lk/hOGztT3LJpvTEfsmPTO6JoL54ilNn7ma
U1dMMM0ZkQC56yKehy8wp++EY1TuD+CCj2LHySXmpHUorO+6vfGw+JBbb+81
5rT60R3QhMdBj9PxlQu8zCl1jarobX4saF9ufHb0TnPK9Ho1/7c6Fh5HrJ7Q
/YA5Ld13Y8CgYTHgF5um3/iYOR1rprX9sQ/BlKdto+ucqbl/15v+FocQbF9t
X/Q2xJz0nE6NUTW9D5XFedZpYea0ycrUduudaLj9qVfG7dvmNOP5+ONuU+7C
5r9+O0+TOVXGdDsdYxAFjgYf+mx/aE7uhvkzvWNug0oz9KNHijndUk9uFuId
CTlNzp0bl2VO+U/KfGxGR8D5tn8n9sozp80lm1q8sw0Hzx6TDJuWmVNV0eYR
VXq3oNvA6/f0PprTrxVhvu2+3ACt0UZLKr+bk9XY3CYby67DQ5c5zV9Um1Pr
+bMWpZaGwcF5mHlXT0Nek5JNLAtCwXlZ/d1nzTTUbUiqSQf9a9B807K+Oy00
NEiBnQLsr8C7XcmfFllpKMClVX5T30sQcaRF0MQWGhrVJOLI0vchsPGsl5Nd
Bw39/dinuu/0YHC4lm3UvLuGlh6aW/e/wiBQRHVFQ9CQ5cd6IRWrz8OrB/uW
fhqsocipJwdoNTkHZ1PLbbJGaqjv55R3bbPOgMfrAS/vT9TQzA/fSz4FBkKX
8oA9QdM0VKSJSqYvp+Df1++wZ66GBuZO6m304CQkaI39stRTQ9f1rttn3DoO
+42vXJi8UkOtkmJC28ceBad6us79Nmro9501rxu+OwLWzWeYtNiuoYldDvgH
/ncYKjpEkYmvhroOqTSLPnAIbvU2X/71sIYyrXukuBkdhPVDPFtkB2hIYTDk
SnDAfhg87uGrmCANbdo4fHiMry+YTrf2DbmqodljlQdLTPdAltt6+33hGrIH
HLIzaicErsz4uuJezfVtx3y13OcDC7Z0DJnyQEMVI9q2PrtrG3Ty3eUyILnm
et+nTWly2Rt+Hysybf1CQ97LjZyDK70gPqhvrOK1hiTP3nv96IrvRf/7Nf88
ys/z9VCux++H8n58Pyj3w/eLcr/8eVA+D39elM/LzwPlefDzQnle/DxRnic/
b5Tnzd8HyvfB3xfK98XfJ8r3yd83yvfN6wFlPfB6QVkvvJ5Q1hOvN5T1xusR
ZT3yekVZr7yeUdYzr3eU9c77AWU/8H5B2S+8n1D2E+83lP3G+xFlP/J+Rdmv
vJ9R9jPvd5T9zucBynnA5wXKecHnCcp5wucNynnD5xHKecTnFcp5xecZynnG
5x3KecfnIcp5yOclynnJ5ynKecrnLcp5y+cxynnM5zXKec3nOcp5zuc9ynnP
8wBlHvC8QJkXPE9Q5gnPG5R5w/MIZR7xvEKZVzzPUOYZzzuUecfzEGUe8rxE
mZc8T1HmKc9blHnL8xhlHvO8RpnXPM9R5jnPe5R5z3oARQ+wXkDRC6wnUPQE
6w0UvcF6BEWPsF5B0SusZ1D0DOsdFL3DeghFD7FeQtFLrKdQ9BTrLRS9xXoM
RY+xXkPRa6znUPQc6z0Uvcd6EEUPsl5E0YusJ1H0JOtNFL3JehRFj7JeRdGr
rGdR9CzrXRS9y3oYRQ+zXkbRy6ynUfQ0620Uvc16HEWPs15H0eus51H0POt9
FL3PfgDFD7BfQPEL7CdQ/AT7DRS/wX4ExY+wX0HxK+xnUPwM+x0Uv8N+CMUP
sV9C8Uvsp1D8FPstFL/FfgzFj7FfQ/Fr7OdQ/Bz7PRS/x34QxQ+yX0Txi+wn
Ufwk+00Uv8l+FMWPsl9F8avsZ1H8LPtdFL/LfhjFD7NfRvHL7KdR/DT7bRS/
zX4cxY+zX0fx6+znUfw8+30Uv895AEoewHkBSl7AeQJKnsB5A0rewHkESh7B
eQVKXsF5BkqewXkHSt7BeQhKHsJ5CUpewnkKSp7CeQtK3sJ5DEoew3kNSl7D
eQ5KnsN5D0rew3kQSh7EeRFKXsR5EkqexHkTSt7EeRRKHsV5FUpexXkWSp7F
eRdK3sV5GEoexnkZSl7GeRpKnsZ5G0rexnkcSh7HeR1KXsd5Hkqex3kfSt7H
eSBKHsh5IUpeyHkiSp7IeSNK3sh5JEoeyXklSl7JeSZKnsl5J0reyXkoSh7K
eSlKXsp5KkqeynkrSt7KeSxKHst5LUpey3kuSp7LeS9K3st5MEoezHkxSl7M
eTJKnsx5M0rezHk0Sh7NeTVKXs15NkqezXk3St7NeThKHs55OUpeznk6Sp7O
eTtK3s55PEoez3k9Sl7PeT5Kns95P0rez30ASh/AfQFKX8B9AkqfwH0DSt/A
fQRKH8F9BUpfwX0GSp/BfQdK38F9CEofwn0JSl/CfQpKn8J9C0rfwn0MSh/D
fQ1KX8N9Dkqfw30PSt/DfRBKH8R9EUpfxH0SSp/EfRNK38R9FEofxX0VSl/F
fRZKn8V9F0rfxX0YSh/GfRlKX8Z9Gkqfxn0bSt/GfRxKH8d9HUpfx30eSp/H
fR9K38d9IEofyH0hSl/IfSJKn8h9I0rfyH0kSh/JfSVKX8l9JkqfyX0nSt/J
fShKH8p9KUpfyn0qSp/KfStK38p9LEofy30tSl/LfS5Kn8t9L0rfy30wSh/M
fTFKX8x9MkqfzH0zSt/MfTRKH819NUpfzX02Sp/NfTdK3819OEofzn05Sl/O
fTpKn859O0rfzn08Sh/PfT1KX899Pkqfz30/St/PPAAKD8C8AAovwDwBCk/A
vAEKb8A8AgqPwLwCCq/APAMKz8C8AwrvwDwECg/BvAQKL8E8BQpPwbwFCm/B
PAYKj8G8BgqvwTwHCs/BvAcK78E8CAoPwrwICi/CPAkKT8K8CQpvwjwKCo/C
vAoKr8I8CwrPwrwLCu/CPAwKD8O8DAovwzwNCk/DvA0Kb8M8DgqPw7wOCq/D
PA8Kz8O8DwrvwzwQCg/EvBAKL8Q8EQpPxLwRCm/EPBIKj8S8EgqvxDwTCs/E
vBMK78Q8FAoPxbwUCi/FPBUKT8W8FQpvxTwWCo/FvBYKr8U8FwrPxbwXCu/F
PBgKD8a8GAovxjwZCk/GvBkKb8Y8GgqPxrwaCq/GPBsKz8a8GwrvxjwcCg/H
vBwKL8c8HQpPx7wdCm/HPB4Kj8e8HgqvxzwfCs/HvB8K78c8IAoPyLwgCi/I
PCEKT8i8IQpvyDwiCo/IvCIKr8g8IwrPyLwjCu/IPCQKD8m8JAovyTwlCk/J
vCUKb8k8JgqPybwmCq/JPCcKz8m8JwrvyTwoCg/KvCgKL8o8KQpPyrwpCm/K
PCoKj8q8KgqvyjwrCs/KvCsK78o8LAoPy7wsCi/LPC0KT8u8LQpvyzwu/n8e
9//xuii8LvO8KDwv874ovC/zwCg8MPPCKLww88QoPDHzxii8MfPIKDwy88oo
vDLzzCg8M/POKLwz89AoPDTz0ii8NPPUKDw189YovDXz2Cg89v/ktf8Pg9Hc
8A==
                    "]], {{{0.23626894130706216`, 0.}, {0., -1.}}, {1., 
                    0.}}]}], "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "5.1`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "4.6`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "4.3`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], "4.`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "3.`"}},
                     GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}},
                     AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {FontFamily -> "Times"}, 
                    StripOnInput -> False]], Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 5.1}, {
                    Style["75%", Bold], 4.6}, {
                    Style["median", Bold], 4.3}, {
                    Style["25%", Bold], 4.}, {
                    Style["min", Bold], 3.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {FontFamily -> "Times"}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, \
{}}, {}}, {}}, {PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0.8039430656936596, 3.}, AxesStyle -> 
                  Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> 
                  True, FrameLabel -> {{None, None}, {None, None}}, 
                  FrameStyle -> Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], 
                  FrameTicks -> {{Automatic, Automatic}, {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
                   GridLines -> Automatic, GridLinesStyle -> Automatic, 
                  LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
                  FormBox["\"PetalLength cm\"", TraditionalForm], 
                  PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
                    Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["virginica"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-0.19605693430634064`, 4.38}, {
                    2.1960569343063403`, 7.0200000000000005`}}]}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GeometricTransformationBox[
                    PolygonBox[CompressedData["
1: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
nlL9GOiSDuXsOGQg9ffNw1Z1CIL6y2yHvDluoGX5TZtX8zwCjVvcvety1kB1
/d8Wt7ocAC0eT3AMiTKQfkLKxId1D0O7LV+j/94y0LYit/Zxqw5CB4dtbccn
GsjCc1BE1n/7weF1w7CYVAN9qF9y684uf3A8FGNQ5RqoxM41qKe9H/TpN9h/
QVHF/at2vf5UvBf6/TDWevjeQPPcZvvNPrcHBp9e6dOyzEAtY559ja+6G4aP
UfzeVG6gi09rNr+XugPG1AhfVFjDmuwePhn55sY2mHQV3joqrEmxx26XfcIW
mDYre0qg3poSF8x+f/qdL8zSzX3yvYk17VmxtEf/dptgXpKJ24h21uTTRLfD
bIcPeC0LSLrUxZpiUvqfyzfZAMta2PWq42RNNWNDj131XwdrHifGzB5gTX1i
dpZVX7kGfLZMsr073Jpezo/p5/5rJWxxKD1pM9GahDfver29/toZ//9n/n2U
3+froVyP/x7K3+P7Qbkfvl+U++Xvg/J9+PuifF9+HijPg58XyvPi54nyPPl5
ozxvfh8o74PfF8r74veJ8j75faO8b14PKOuB1wvKeuH1hLKeeL2hrDdejyjr
kdcrynrl9Yyynnm9o6x33g8o+4H3C8p+4f2Esp94v6HsN96PKPuR9yvKfuX9
jLKfeb+j7HeuByj1gOsFSr3geoJST7jeoNQbrkco9YjrFUq94nqGUs+43qHU
O66HKPWQ6yVKveR6ilJPud6i1Fuuxyj1mOs1Sr3meo5Sz7neo9R7Pg9QzgM+
L1DOCz5PUM4TPm9Qzhs+j1DOIz6vUM4rPs9QzjM+71DOOz4PUc5DPi9Rzks+
T1HOUz5vUc5bPo9RzmM+r1HOaz7PUc5zPu9RznvuB1D6Ae4XUPoF7idQ+gnu
N1D6De5HUPoR7ldQ+hXuZ1D6Ge53UPod7odQ+iHul1D6Je6nUPop7rdQ+i3u
x1D6Me7XUPo17udQ+jnu91D6Pe4HUfpB7hdR+kXuJ1H6Se43UfpN7kdR+lHu
V1H6Ve5nUfpZ7ndR+l3uh1H6Ye6XUfpl7qdR+mnut1H6be7HUfpx7tdR+nXu
51H6ee738X/7/f+ZB1DmAZ4XUOYFnidQ5gmeN1DmDZ5HUOYRnldQ5hWeZ1Dm
GZ53UOYdnodQ5iGel1DmJZ6nUOYpnrdQ5i2ex1DmMZ7XUOY1nudQ5jme91Dm
PZ4HUeZBnhdR5kWeJ1HmSZ43UeZNnkdR5lGeV1HmVZ5nUeZZnndR5l2eh1Hm
YZ6XUeZlnqdR5mmet1HmbZ7HUeZxntdR5nWe51HmeZ73UeZ95gEoPIB5AQov
YJ6AwhOYN6DwBuYRKDyCeQUKr2CegcIzmHeg8A7mISg8hHkJCi9hnoLCU5i3
oPAW5jEoPIZ5DQqvYZ6DwnOY96DwHuZBKDyIeREKL2KehMKTmDeh8CbmUSg8
inkVCq9inoXCs5h3ofAu5mEoPIx5GQovY56GwtOYt6HwNuZxKDyOeR0Kr2Oe
h8LzmPeh8D7mgSg8kHkhCi9knojCE5k3ovBG5pEoPJJ5JQqvZJ6JwjOZd6Lw
TuahKDyUeSkKL2WeisJTmbei8FbmsSg8lnktCq9lnovCc5n3ovBe5sEoPJh5
MQovZp6MwpOZN6PwZubRKDyaeTUKr2aejcKzmXej8G7m4Sg8nHk5Ci9nno7C
05m3o/B25vEoPJ55PQqvZ56PwvOZ96Pwfs4DUPIAzgtQ8gLOE1DyBM4bUPIG
ziNQ8gjOK1DyCs4zUPIMzjtQ8g7OQ1DyEM5LUPISzlNQ8hTOW1DyFs5jUPIY
zmtQ8hrOc1DyHM57UPIezoNQ8iDOi1DyIs6TUPIkzptQ8ibOo1DyKM6rUPIq
zrNQ8izOu1DyLs7DUPIwzstQ8jLO01DyNM7bUPI2zuNQ8jjO61DyOs7zUPI8
zvtQ8j7OA1HyQM4LUfJCzhNR8kTOG1HyRs4jUfJIzitR8krOM1HyTM47UfJO
zkNR8lDOS1HyUs5TUfJUzltR8lbOY1HyWM5rUfJaznNR8lzOe1HyXs6DUfJg
zotR8mLOk1HyZM6bUfJmzqNR8mjOq1Hyas6zUfJszrtR8m7Ow1HycM7LUfJy
ztNR8nTO21Hyds7jUfJ4zutR8nrO81HyfM77UfJ+9gFQfAD2BVB8AfYJUHwC
9g1QfAP2EVB8BPYVUHwF9hlQfAb2HVB8B/YhUHwI9iVQfAn2KVB8CvYtUHwL
9jFQfAz2NVB8DfY5UHwO9j1QfA/2QVB8EPZFUHwR9klQfBL2TVB8E/ZRUHwU
9lVQfBX2WVB8FvZdUHwX9mFQfBj2ZVB8GfZpUHwa9m1QfBv2cVB8HPZ1UHwd
9nlQfB72fVB8H/aBUHwg9oVQfCH2iVB8IvaNUHwj9pFQfCT2lVB8JfaZUHwm
9p1QfCf2oVB8KPalUHwp9qlQfCr2rVB8K/axUHws9rVQfC32uVB8Lva9UHwv
9sFQfDD2xVB8MfbJUHwy9s1QfDP20VB8NPbVUHw19tlQfDb23VB8N/bhUHw4
9uVQfDn26VB8OvbtUHw79vFQfDz29VB8Pfb5UHw+9v1QfD/2AVF8QPYFUXxB
9glRfEL2DVF8Q/YRUXxE9hVRfEX2GVF8RvYdUXxH9iFRfEj2JVF8SfYpUXxK
9i1RfEv2MVF8TPY18X99zf/xOVF8TvY9UXxP9kFRfFD2RVF8UfZJUXxS9k1R
fFP2UVF8VPZVUXxV9llRfFb2XVF8V/ZhUXxY9mVRfFn2aVF8WvZtUXxb9nFR
fFz2dVF8XfZ5UXxe9n1RfF/2gVF8YPaFUXxh9olRfGL2jVF8Y/aRUXxk9pVR
fGX2mVF85v/Xd/4/lzeqZA==
                    "]], {{{0.30316319252186485`, 0.}, {0., -1.}}, {1., 
                    0.}}]}], "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "6.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "5.9`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.5`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "5.1`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.5`"}}, 
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {FontFamily -> "Times"}, 
                    StripOnInput -> False]], Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 6.9}, {
                    Style["75%", Bold], 5.9}, {
                    Style["median", Bold], 5.5}, {
                    Style["25%", Bold], 5.1}, {
                    Style["min", Bold], 4.5}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {FontFamily -> "Times"}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, \
{}}, {}}, {}}, {PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0.8039430656936596, 4.5}, AxesStyle -> 
                  Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> 
                  True, FrameLabel -> {{None, None}, {None, None}}, 
                  FrameStyle -> Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], 
                  FrameTicks -> {{Automatic, Automatic}, {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
                   GridLines -> Automatic, GridLinesStyle -> Automatic, 
                  LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
                  FormBox["\"PetalLength cm\"", TraditionalForm], 
                  PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
                    Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{203., {109.35052490234375`, 113.64947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{203., {109.35052490234375`, 113.64947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.914363389573552*^9, 3.9143634276335907`*^9, 
  3.91452650037697*^9, 3.914527509240587*^9, 3.914529479734806*^9, 
  3.914530993689371*^9, 3.918140022972987*^9, 3.918140734929689*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"b84426dd-1f32-4193-acdc-970e59deb6cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fisher", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"BoxWhiskerChart", "[", 
     RowBox[{"#", ",", "\"\<Outliers\>\"", ",", 
      RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
      RowBox[{"ChartLabels", "->", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", "\"\<SepalLength cm\>\"", "}"}], ",", "Above"}], 
        "]"}]}], ",", 
      RowBox[{"BarOrigin", "->", "Right"}], ",", 
      RowBox[{"ChartStyle", "->", "Blue"}]}], "]"}], "&"}], ",", 
   "\"\<SepalLength\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9143636130223513`*^9, 3.914363632297996*^9}, {
  3.918140732754148*^9, 3.9181407328718033`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"6fd16f4e-049f-4994-8f6f-07099151fb63"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|"setosa" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-4.225, -0.19605693430634064`}, {-5.875, 
            2.1960569343063403`}}]}, {
           CapForm[None], 
           Directive[
            RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
             Directive[
              RGBColor[0.982864, 0.7431472, 0.3262672]], {{
               Directive[
                RGBColor[0, 0, 1]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GraphicsGroup[{Antialiasing -> False, 
                   
                   Polygon[{{-5.2, 0.8039430656936596}, {-5.2, 
                    1.1960569343063403`}, {-4.8, 1.1960569343063403`}, {-4.8, 
                    0.8039430656936596}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    Line[{{-5., 1.1960569343063403`}, {-5., 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-4.8, 1.}, {-4.3, 1.}}, {{-5.2, 1.}, {-5.8, 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-4.3, 1.0980284671531702`}, {-4.3, 
                    0.9019715328468298}}, {{-5.8, 1.0980284671531702`}, {-5.8,
                     0.9019715328468298}}}]}, {}}], {"Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 5.8}, {
                    Style["75%", Bold], 5.2}, {
                    Style["median", Bold], 5.}, {
                    Style["25%", Bold], 4.8}, {
                    Style["min", Bold], 4.3}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}]]}}}, {}, {}}}, {{{{{{{}, {{}, 
                 Text[
                  Style["SepalLength cm", {}], 
                  Offset[{0, 4}, {-4.999999999999999, 1.1960569343063403`}], 
                  ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {4.225, 0.7843373722630256}, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic,
           FrameTicks -> {{{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}, {
             Charting`ScaledTicks[{-#& , -#& }], 
             Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
          GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{-#& , -#& }], {{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}}}], "versicolor" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-4.795, -0.19605693430634064`}, {-7.105, 
            2.1960569343063403`}}]}, {
           CapForm[None], 
           Directive[
            RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
             Directive[
              RGBColor[0.982864, 0.7431472, 0.3262672]], {{
               Directive[
                RGBColor[0, 0, 1]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GraphicsGroup[{Antialiasing -> False, 
                   
                   Polygon[{{-6.3, 0.8039430656936596}, {-6.3, 
                    1.1960569343063403`}, {-5.6, 1.1960569343063403`}, {-5.6, 
                    0.8039430656936596}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    Line[{{-5.9, 1.1960569343063403`}, {-5.9, 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-5.6, 1.}, {-4.9, 1.}}, {{-6.3, 1.}, {-7., 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-4.9, 1.0980284671531702`}, {-4.9, 
                    0.9019715328468298}}, {{-7., 1.0980284671531702`}, {-7., 
                    0.9019715328468298}}}]}, {}}], {"Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 7.}, {
                    Style["75%", Bold], 6.3}, {
                    Style["median", Bold], 5.9}, {
                    Style["25%", Bold], 5.6}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}]]}}}, {}, {}}}, {{{{{{{}, {{}, 
                 Text[
                  Style["SepalLength cm", {}], 
                  Offset[{0, 4}, {-5.9, 1.1960569343063403`}], 
                  ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {4.795, 0.7843373722630256}, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic,
           FrameTicks -> {{{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}, {
             Charting`ScaledTicks[{-#& , -#& }], 
             Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
          GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{-#& , -#& }], {{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}}}], "virginica" -> Graphics[{{
           Opacity[0], 
           Point[{{-4.75, -0.19605693430634064`}, {-8.05, 
            2.1960569343063403`}}]}, {
           CapForm[None], 
           Directive[
            RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
             Directive[
              RGBColor[0.982864, 0.7431472, 0.3262672]], {{
               Directive[
                RGBColor[0, 0, 1]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GraphicsGroup[{Antialiasing -> False, 
                   
                   Polygon[{{-6.9, 0.8039430656936596}, {-6.9, 
                    1.1960569343063403`}, {-6.2, 1.1960569343063403`}, {-6.2, 
                    0.8039430656936596}}], {}, {{
                    Inset[
                    Style["\[FilledSmallCircle]", 10, 
                    GrayLevel[0]], {-4.9, 1.}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    Line[{{-6.5, 1.1960569343063403`}, {-6.5, 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-6.2, 1.}, {-5.6, 1.}}, {{-6.9, 1.}, {-7.9, 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-5.6, 1.0980284671531702`}, {-5.6, 
                    0.9019715328468298}}, {{-7.9, 1.0980284671531702`}, {-7.9,
                     0.9019715328468298}}}]}, {}}], {"Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 7.9}, {
                    Style["75%", Bold], 6.9}, {
                    Style["median", Bold], 6.5}, {
                    Style["25%", Bold], 6.2}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}]]}}}, {}, {}}}, {{{{{{{}, {{}, 
                 Text[
                  Style["SepalLength cm", {}], 
                  Offset[{0, 4}, {-6.499999999999999, 1.1960569343063403`}], 
                  ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {4.75, 0.7843373722630256}, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic,
           FrameTicks -> {{{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}, {
             Charting`ScaledTicks[{-#& , -#& }], 
             Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
          GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{-#& , -#& }], {{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}}}]|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Graphics], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Graphics], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["setosa"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-4.225, -0.19605693430634064`}, {-5.875, 
                    2.1960569343063403`}}]}, {
                   CapForm[None], 
                   Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
                    Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    RGBColor[0, 0, 1]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GraphicsGroupBox[{Antialiasing -> False, 
                    PolygonBox[{{-5.2, 0.8039430656936596}, {-5.2, 
                    1.1960569343063403`}, {-4.8, 1.1960569343063403`}, {-4.8, 
                    0.8039430656936596}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{-5., 1.1960569343063403`}, {-5., 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-4.8, 1.}, {-4.3, 1.}}, {{-5.2, 1.}, {-5.8, 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-4.3, 1.0980284671531702`}, {-4.3, 
                    0.9019715328468298}}, {{-5.8, 1.0980284671531702`}, {-5.8,
                     0.9019715328468298}}}]}, {}}]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "5.8`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "5.2`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "4.8`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.3`"}}, 
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 5.8}, {
                    Style["75%", Bold], 5.2}, {
                    Style["median", Bold], 5.}, {
                    Style["25%", Bold], 4.8}, {
                    Style["min", Bold], 4.3}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {{}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"SepalLength cm\"", {}, StripOnInput -> False],
                     TraditionalForm], 
                    Offset[{0, 4}, {-4.999999999999999, 1.1960569343063403`}], 
                    ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {4.225, 0.7843373722630256}, Frame -> True, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Automatic, FrameTicks -> {{{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}, {
                    Charting`ScaledTicks[{-#& , -#& }], 
                    Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
                  GridLines -> {None, Automatic}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.4, 0.5], 
                    AbsoluteThickness[1], 
                    AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{-#& , -#& }], {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["versicolor"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-4.795, -0.19605693430634064`}, {-7.105, 
                    2.1960569343063403`}}]}, {
                   CapForm[None], 
                   Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
                    Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    RGBColor[0, 0, 1]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{-6.3, 0.8039430656936596}, {-6.3, 
                    1.1960569343063403`}, {-5.6, 1.1960569343063403`}, {-5.6, 
                    0.8039430656936596}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{-5.9, 1.1960569343063403`}, {-5.9, 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-5.6, 1.}, {-4.9, 1.}}, {{-6.3, 1.}, {-7., 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-4.9, 1.0980284671531702`}, {-4.9, 
                    0.9019715328468298}}, {{-7., 1.0980284671531702`}, {-7., 
                    0.9019715328468298}}}]}, {}}]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], "7.`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "6.3`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.9`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "5.6`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.9`"}}, 
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 7.}, {
                    Style["75%", Bold], 6.3}, {
                    Style["median", Bold], 5.9}, {
                    Style["25%", Bold], 5.6}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {{}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"SepalLength cm\"", {}, StripOnInput -> False],
                     TraditionalForm], 
                    Offset[{0, 4}, {-5.9, 1.1960569343063403`}], 
                    ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {4.795, 0.7843373722630256}, Frame -> True, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Automatic, FrameTicks -> {{{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}, {
                    Charting`ScaledTicks[{-#& , -#& }], 
                    Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
                  GridLines -> {None, Automatic}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.4, 0.5], 
                    AbsoluteThickness[1], 
                    AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{-#& , -#& }], {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["virginica"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-4.75, -0.19605693430634064`}, {-8.05, 
                    2.1960569343063403`}}]}, {
                   CapForm[None], 
                   Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
                    Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    RGBColor[0, 0, 1]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{-6.9, 0.8039430656936596}, {-6.9, 
                    1.1960569343063403`}, {-6.2, 1.1960569343063403`}, {-6.2, 
                    0.8039430656936596}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], 
                    TraditionalForm]], {-4.9, 1.}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{-6.5, 1.1960569343063403`}, {-6.5, 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-6.2, 1.}, {-5.6, 1.}}, {{-6.9, 1.}, {-7.9, 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-5.6, 1.0980284671531702`}, {-5.6, 
                    0.9019715328468298}}, {{-7.9, 1.0980284671531702`}, {-7.9,
                     0.9019715328468298}}}]}, {}}]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "7.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "6.9`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "6.5`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "6.2`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.9`"}}, 
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 7.9}, {
                    Style["75%", Bold], 6.9}, {
                    Style["median", Bold], 6.5}, {
                    Style["25%", Bold], 6.2}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {{}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"SepalLength cm\"", {}, StripOnInput -> False],
                     TraditionalForm], 
                    Offset[{0, 4}, {-6.499999999999999, 1.1960569343063403`}], 
                    ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 112, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {4.75, 0.7843373722630256}, Frame -> True, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Automatic, FrameTicks -> {{{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}, {
                    Charting`ScaledTicks[{-#& , -#& }], 
                    Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
                  GridLines -> {None, Automatic}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.4, 0.5], 
                    AbsoluteThickness[1], 
                    AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{-#& , -#& }], {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{203., {95.85052490234375, 100.14947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{203., {95.85052490234375, 100.14947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.914363634424747*^9, 3.9145265006435833`*^9, 
  3.914527509513361*^9, 3.914529480011376*^9, 3.914530993975209*^9, 
  3.918140022979899*^9, 3.9181407370794487`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"1a4faec0-7b56-4120-8efe-5ea1708aeb30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fisher", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ColorFunction", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Hue", "[", 
            RowBox[{
             RowBox[{"3", "/", "5"}], ",", 
             RowBox[{"2", "/", "3"}], ",", "#"}], "]"}], "&"}], ")"}]}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Rotate", "[", 
         RowBox[{"\"\<Frequency\>\"", ",", 
          RowBox[{"90", " ", "Degree"}]}], "]"}], ",", 
        "\"\<SepalWidth cm\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}], "&"}], ",", 
   "\"\<SepalWidth\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.914527443618721*^9, 3.914527452507086*^9}, {
  3.9181407391322603`*^9, 3.918140739202468*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"8c8b3411-fe6d-4cb5-af24-5b9d484b6e3c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|"setosa" -> Labeled[
         Graphics[{{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.651]]], 
             RGBColor[
             0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
              Directive[
               EdgeForm[
                Directive[
                 Thickness[Small], 
                 Opacity[0.651]]], 
               RGBColor[
               0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2., 0}, {2.5, 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[1, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.5, 0}, {3., 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[1, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 1.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3., 0}, {3.5, 26.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 26], 
                 Style[26, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.6799999999999999]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.5, 0}, {4., 18.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 18], 
                 Style[18, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.12]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{4., 0}, {4.5, 4.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                 Style[4, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}}}, {
          AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {1.95, 0}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], PlotRange -> {{2., 4.5}, {All, All}}, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
          Rotate["Frequency", 90 Degree], "SepalWidth cm"}, {Left, Bottom}], 
       "versicolor" -> Labeled[
         Graphics[{{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.63]]], 
             RGBColor[
             0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
              Directive[
               EdgeForm[
                Directive[
                 Thickness[Small], 
                 Opacity[0.63]]], 
               RGBColor[
               0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2., 0}, {2.2, 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[1, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.3333333333333333]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.2, 0}, {2.4, 5.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                 Style[5, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.49999999999999994`]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.4, 0}, {2.6, 7.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 7], 
                 Style[7, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.5833333333333333]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.6, 0}, {2.8, 8.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 8], 
                 Style[8, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 1.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.8, 0}, {3., 13.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 13], 
                 Style[13, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.8333333333333333]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3., 0}, {3.2, 11.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 11], 
                 Style[11, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.25]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.2, 0}, {3.4, 4.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                 Style[4, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.4, 0}, {3.6, 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[
                 1, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}}}, {
          AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {1.968, 0}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], PlotRange -> {{2., 3.6}, {All, All}}, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
          Rotate["Frequency", 90 Degree], "SepalWidth cm"}, {Left, Bottom}], 
       "virginica" -> Labeled[
         Graphics[{{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.623]]], 
             RGBColor[
             0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
              Directive[
               EdgeForm[
                Directive[
                 Thickness[Small], 
                 Opacity[0.623]]], 
               RGBColor[
               0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.2, 0}, {2.4, 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[1, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.2]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.4, 0}, {2.6, 4.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                 Style[4, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.33333333333333337`]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.6, 0}, {2.8, 6.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 6], 
                 Style[6, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.6]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.8, 0}, {3., 10.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 10], 
                 Style[10, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 1.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3., 0}, {3.2, 16.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 16], 
                 Style[16, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.4666666666666667]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.2, 0}, {3.4, 8.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 8], 
                 Style[8, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.06666666666666667]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.4, 0}, {3.6, 2.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 2], 
                 Style[2, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.6, 0}, {3.8, 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[1, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.06666666666666667]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.8, 0}, {4., 2.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 2], 
                 Style[
                 2, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {2.164, 0}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], PlotRange -> {{2.2, 4.}, {All, All}}, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
          Rotate["Frequency", 90 Degree], "SepalWidth cm"}, {Left, Bottom}]|>,
      "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.], 
         TypeSystem`PackageScope`UnknownShape[False]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`AnyType, 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.], 
         TypeSystem`PackageScope`UnknownShape[False]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`AnyType, 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["setosa"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[Ellipsis]", 
                   GrayLevel[0.5]], 
                  Style[
                   Style["\[Ellipsis]", 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["setosa"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], Bold}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["versicolor"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[Ellipsis]", 
                   GrayLevel[0.5]], 
                  Style[
                   Style["\[Ellipsis]", 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["versicolor"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], Bold}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["virginica"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[Ellipsis]", 
                   GrayLevel[0.5]], 
                  Style[
                   Style["\[Ellipsis]", 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["virginica"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], Bold}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{129., {37.35052490234375, 41.64947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{129., {37.35052490234375, 41.64947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.914527446189513*^9, 3.91452745304796*^9}, 
   3.914527509718008*^9, 3.914529480246318*^9, 3.914530994156679*^9, 
   3.918140023012699*^9, 3.9181407398074913`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"f14c6029-4713-4b42-90da-d8637f4075cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fisher", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"{", 
        RowBox[{"#", ",", "#"}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Rotate", "[", 
         RowBox[{"\"\<Sepal width cm\>\"", ",", 
          RowBox[{"90", " ", "Degree"}]}], "]"}], ",", 
        "\"\<Sepal length cm\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9145277693303137`*^9, 3.914527769333061*^9}, {
  3.918140742857018*^9, 3.918140743018669*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"94d83a2d-7b60-4de3-a03e-b70319200520"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|"setosa" -> Labeled[
         Graphics[{{}, {{
             Annotation[{
               Directive[
                PointSize[0.009166666666666668], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJxtUtsNwjAMjPpDSwOkD8o3K8ACmYERkOCXeWAmuhO0vnMUt5ai6OzzxbF9
vr9uj8I5d/mf6X7O1kc3m4+f92QdcBnH72Qt/FUUfgt/CV4PzPxjvM52UL7g
WvnEwm+AN/o+9akn9w68TvOJWa/gxuATcIDuoO+u15v6Qb749xonzvNrjbPe
vF/e5G8X/2F/WL/tl+jY+mw8zYv6tp9WT+oJ0B3gD4t5sB7qk2/3J9+HNA/+
f/2/HncLXmHmVC34dh52H2yc88j7k/aL+pzPD0V++78=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[0.009166666666666668], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJxtUtsNwjAMjPpDSwOkD8o3K8ACmYERkOCXeWAmuhO0vnMUt5ai6OzzxbF9
vr9uj8I5d/mf6X7O1kc3m4+f92QdcBnH72Qt/FUUfgt/CV4PzPxjvM52UL7g
WvnEwm+AN/o+9akn9w68TvOJWa/gxuATcIDuoO+u15v6Qb749xonzvNrjbPe
vF/e5G8X/2F/WL/tl+jY+mw8zYv6tp9WT+oJ0B3gD4t5sB7qk2/3J9+HNA/+
f/2/HncLXmHmVC34dh52H2yc88j7k/aL+pzPD0V++78=
                "]]}, "Charting`Private`Tag#2"]}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {4.26875000000001, 2.1833333333333385`}, 
           DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
             "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
             Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "IncludeHighlighting" -> "CurrentPoint", "HighlightStyle" -> 
             Automatic, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{4.26875000000001, 5.8}, {2.1833333333333385`, 4.4}},
            PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rotate["Sepal width cm", 90 Degree], "Sepal length cm"}, {
         Left, Bottom}], "versicolor" -> Labeled[
         Graphics[{{}, {{
             Annotation[{
               Directive[
                PointSize[0.009166666666666668], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJx1UtsNwjAMDKW8Pwlpm/LDCrBAZmAEJPhlHpgJdoI2d0Z2hKXKOud6ti85
XO7na+WcO36/IefYp+djiBVyZ3Cf3q8hlinzQ7qNUQFH4Dl4QfBpjA54Db0t
6lPUI/AC/3vwZtD3yA71BpjztKhPoNeKXsbB6EfZh+fUy7xG+mee1Se/lnno
F/vb/cm35/RbzxvNPL3xNxb76/0Cci33Rb8ttvtqP2fIuz/9NoWf+r6rwl/2
px/EnJf+2PvQ+/hCX9/Xrx+x9se+Dy/z2Pf7AR6E+Q8=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[0.009166666666666668], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJx1UtsNwjAMDKW8Pwlpm/LDCrBAZmAEJPhlHpgJdoI2d0Z2hKXKOud6ti85
XO7na+WcO36/IefYp+djiBVyZ3Cf3q8hlinzQ7qNUQFH4Dl4QfBpjA54Db0t
6lPUI/AC/3vwZtD3yA71BpjztKhPoNeKXsbB6EfZh+fUy7xG+mee1Se/lnno
F/vb/cm35/RbzxvNPL3xNxb76/0Cci33Rb8ttvtqP2fIuz/9NoWf+r6rwl/2
px/EnJf+2PvQ+/hCX9/Xrx+x9se+Dy/z2Pf7AR6E+Q8=
                "]]}, "Charting`Private`Tag#2"]}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {4.856250000000012, 1.9222222222222267`}, 
           DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
             "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
             Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "IncludeHighlighting" -> "CurrentPoint", "HighlightStyle" -> 
             Automatic, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{4.856250000000012, 7.}, {1.9222222222222267`, 3.4}},
            PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rotate["Sepal width cm", 90 Degree], "Sepal length cm"}, {
         Left, Bottom}], "virginica" -> Labeled[
         Graphics[{{}, {{
             Annotation[{
               Directive[
                PointSize[0.009166666666666668], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJxtUtsNwjAMDKiUFhA/SG36RKwAC2QGRkCCX+aBmWAnaM8+FBdLlXWx7/yo
D5f7+Tp3zh2/3+BPo1XhNtoqAJfh+RhsIe9tcKNlQfPhl/JeM478nhg6O8GJ
8Dry36/BasaBW/Eb6kMnF1+xP+g0rAdeYeqV0ldq+Pmkf/B7yd8SwyeS54U/
E99QD7yC9WK9lPvT/nV+3b/Or3rAnnx4b/ZbmXqtiXdm/j3ns/z4Hn71dH6d
5/89rKmHvIz7ivtpGNf5Fdu4vUf93/F+7P7qSX96D///tzf9l4x/AMFQF9k=

                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[0.009166666666666668], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1:eJxtUtsNwjAMDKiUFhA/SG36RKwAC2QGRkCCX+aBmWAnaM8+FBdLlXWx7/yo
D5f7+Tp3zh2/3+BPo1XhNtoqAJfh+RhsIe9tcKNlQfPhl/JeM478nhg6O8GJ
8Dry36/BasaBW/Eb6kMnF1+xP+g0rAdeYeqV0ldq+Pmkf/B7yd8SwyeS54U/
E99QD7yC9WK9lPvT/nV+3b/Or3rAnnx4b/ZbmXqtiXdm/j3ns/z4Hn71dH6d
5/89rKmHvIz7ivtpGNf5Fdu4vUf93/F+7P7qSX96D///tzf9l4x/AMFQF9k=

                "]]}, "Charting`Private`Tag#2"]}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {4.837500000000011, 2.1111111111111165`}, 
           DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[2]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
             "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
             Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "IncludeHighlighting" -> "CurrentPoint", "HighlightStyle" -> 
             Automatic, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{4.837500000000011, 7.9}, {2.1111111111111165`, 
            3.8}}, PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rotate["Sepal width cm", 90 Degree], "Sepal length cm"}, {
         Left, Bottom}]|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.], 
         TypeSystem`PackageScope`UnknownShape[False]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`AnyType, 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.], 
         TypeSystem`PackageScope`UnknownShape[False]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`AnyType, 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"]][{
                    Key["setosa"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[Ellipsis]", 
                   GrayLevel[0.5]], 
                  Style[
                   Style["\[Ellipsis]", 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"]][{
                    Key["setosa"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], Bold}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"]][{
                    Key["versicolor"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[Ellipsis]", 
                   GrayLevel[0.5]], 
                  Style[
                   Style["\[Ellipsis]", 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"]][{
                    Key["versicolor"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], Bold}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"]][{
                    Key["virginica"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[Ellipsis]", 
                   GrayLevel[0.5]], 
                  Style[
                   Style["\[Ellipsis]", 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"]][{
                    Key["virginica"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], Bold}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "c5dda527-dd2d-457c-b7e8-8687b6b6e6e1"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{129., {37.35052490234375, 41.64947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{129., {37.35052490234375, 41.64947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9145277728677*^9, 3.914529480818258*^9, 
  3.914530994676383*^9, 3.918140023026011*^9, 3.918140743958445*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"e171688c-631c-4319-85b4-7b3b0358778a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.5.1 Data Outside Dataset Format", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 3.908461198842817*^9}, {3.911317563580776*^9, 
  3.911317570922584*^9}, {3.911317671018495*^9, 3.911317741290917*^9}, {
  3.913320646826537*^9, 3.913320662565889*^9}, {3.913321027885975*^9, 
  3.9133210279875317`*^9}},ExpressionUUID->"d9b02035-c544-4e01-87f9-\
f029ab3c9e57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"ResourceData", "[", 
   RowBox[{
    RowBox[{
    "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], 
    ",", "\"\<RawData\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.914528259213167*^9, 3.914528275562743*^9}, 
   3.914528460192517*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"824b1741-f016-47f6-bfb9-277066a23843"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Species\"\>", "\[Rule]", "\<\"setosa\"\>"}], ",", 
      RowBox[{"\<\"SepalLength\"\>", "\[Rule]", 
       TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"SepalWidth\"\>", "\[Rule]", 
       TemplateBox[{"3.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"PetalLength\"\>", "\[Rule]", 
       TemplateBox[{"1.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"PetalWidth\"\>", "\[Rule]", 
       TemplateBox[{"0.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
        "Quantity"]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftSkeleton]", "148", "\[RightSkeleton]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Species\"\>", "\[Rule]", "\<\"virginica\"\>"}], ",", 
      RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], ",", 
      RowBox[{
       RowBox[{"\<\"P\"\>", "\[Ellipsis]", "\<\"th\"\>"}], "\[Rule]", 
       TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
        "Quantity"]}]}], "\[RightAssociation]"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.91452827197577*^9, 3.914529480955373*^9, 
  3.914530994767981*^9, 3.918140023073571*^9, 3.918140817426586*^9},
 CellLabel->
  "Out[48]//Short=",ExpressionUUID->"0e1c4e1c-4e2d-48d0-81ca-800e4a299cc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"Values", "[", "%", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.914528461707801*^9, 3.914528461710918*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"48ef22e1-46cd-49c0-a188-bf8ebcfa3c86"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"0.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", 
      TemplateBox[{"4.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"0.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", 
      TemplateBox[{"4.7`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"0.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "144", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", 
      TemplateBox[{"6.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"5.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"2.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", 
      TemplateBox[{"6.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"5.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"2.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", 
      TemplateBox[{"5.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.914528463189156*^9, 3.914529480986672*^9, 
  3.9145309947983627`*^9, 3.918140023105043*^9, 3.918140819304667*^9},
 CellLabel->
  "Out[49]//Short=",ExpressionUUID->"1e770f4a-6984-4a65-ba04-ea19805261a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"iris", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{"QuantityMagnitude", ",", "%", ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", 
       RowBox[{"2", ";;", "5"}]}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914528675985949*^9, 3.914528676836746*^9}, {
  3.918140821304721*^9, 3.9181408219109*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"25cc467f-012a-4900-b457-14e7c17b0457"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", "5.1`", ",", "3.5`", ",", "1.4`", ",", 
      "0.2`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", "4.9`", ",", "3.`", ",", "1.4`", ",", 
      "0.2`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "147", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", "5.9`", ",", "3.`", ",", "5.1`", ",", 
      "1.8`"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.9145286777446003`*^9, 3.914529481012078*^9, 
  3.9145309948549747`*^9, 3.9181400231139097`*^9, 3.918140822867497*^9},
 CellLabel->
  "Out[50]//Short=",ExpressionUUID->"a90d016c-d39c-4892-8dd3-c077d659c96d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.5.2 2D and 3D Plots", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 3.908461198842817*^9}, {3.911317563580776*^9, 
  3.911317570922584*^9}, {3.911317671018495*^9, 3.911317741290917*^9}, {
  3.913320646826537*^9, 3.913320675356396*^9}, {3.913321030053094*^9, 
  3.91332103013671*^9}},ExpressionUUID->"ea8d6d56-8f47-4ded-96de-\
26401129cad7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#1"}], "]"}], "]"}], ",", 
          RowBox[{"iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#2"}], "]"}], "]"}], ",", 
          RowBox[{"iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#3"}], "]"}], "]"}], ",", 
          RowBox[{"iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#4"}], "]"}], "]"}]}], "}"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotRange", "->", "Automatic"}], ",", 
        RowBox[{"FrameTicks", "->", "True"}], ",", 
        RowBox[{"ChartStyle", "->", "\"\<SandyTerrain\>\""}], ",", 
        RowBox[{"PlotLabel", "->", "\"\<All Species\>\""}], ",", 
        RowBox[{"GridLines", "->", "Automatic"}], ",", 
        RowBox[{"ChartLegends", "->", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
             "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], ",", 
           "Bottom"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "->", "Small"}]}], "]"}], ",", 
      RowBox[{"DistributionChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#1"}], "]"}], "]"}], ",", 
          RowBox[{"iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#2"}], "]"}], "]"}], ",", 
          RowBox[{"iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#3"}], "]"}], "]"}], ",", 
          RowBox[{"iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#4"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "->", "Automatic"}], ",", 
        RowBox[{"FrameTicks", "->", "True"}], ",", 
        RowBox[{"ChartStyle", "->", "\"\<SouthwestColors\>\""}], ",", 
        RowBox[{"PlotLabel", "->", "\"\<All Species\>\""}], ",", 
        RowBox[{"ChartLegends", "->", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
             "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], ",", 
           "Bottom"}], "]"}]}], ",", 
        RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
        RowBox[{"GridLines", "->", "Automatic"}], ",", 
        RowBox[{"ImageSize", "->", "Small"}]}], "]"}]}], "}"}], "]"}], "&"}], 
  "[", 
  RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.914529346806767*^9, 3.914529412793459*^9}, {
  3.918140869809884*^9, 3.9181408891102457`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"8b2d54a3-1e09-40e9-9dae-ff3c96952748"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{
        Opacity[0], 
        PointBox[{{0.5097251739635205, -0.29000000000000004`}, {
         4.4902748260364795`, 8.290000000000001}}]}, {
        CapForm[None], 
        Directive[
         RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
          Directive[
           RGBColor[0.982864, 0.7431472, 0.3262672]], {{
            Directive[
             RGBColor[0.658579, 0.316091, 0.207507]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GraphicsGroupBox[{Antialiasing -> False, 
                   
                   PolygonBox[{{0.7312248802544821, 6.4}, {1.268775119745518, 
                    6.4}, {1.268775119745518, 5.1}, {0.7312248802544821, 
                    5.1}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{1.268775119745518, 5.8}, {0.7312248802544821, 
                    5.8}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1., 5.1}, {1., 4.3}}, {{1., 6.4}, {1., 
                    7.9}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1.134387559872759, 4.3}, {0.865612440127241, 
                    4.3}}, {{1.134387559872759, 7.9}, {0.865612440127241, 
                    7.9}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "7.9`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "6.4`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "5.8`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "5.1`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "4.3`"}},
                  GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 7.9}, {
                  Style["75%", Bold], 6.4}, {
                  Style["median", Bold], 5.8}, {
                  Style["25%", Bold], 5.1}, {
                  Style["min", Bold], 4.3}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             RGBColor[
             0.9054976666666666, 0.7153413333333334, 0.2960873333333333]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GraphicsGroupBox[{Antialiasing -> False, 
                   
                   PolygonBox[{{1.731224880254482, 3.3}, {2.268775119745518, 
                    3.3}, {2.268775119745518, 2.8}, {1.731224880254482, 
                    2.8}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 2.}], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 4.4}], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 4.1}], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 4.2}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{2.268775119745518, 3.}, {1.7312248802544818`, 
                    3.}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2., 2.8}, {2., 2.2}}, {{2., 3.3}, {2., 
                    4.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2.134387559872759, 2.2}, {1.865612440127241, 
                    2.2}}, {{2.134387559872759, 4.}, {1.865612440127241, 
                    4.}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "4.4`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "3.3`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "3.`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "2.8`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "2.`"}}, 
                 GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 4.4}, {
                  Style["75%", Bold], 3.3}, {
                  Style["median", Bold], 3.}, {
                  Style["25%", Bold], 2.8}, {
                  Style["min", Bold], 2.}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             RGBColor[
             0.8486136666666667, 0.7211989999999999, 0.2780876666666667]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GraphicsGroupBox[{Antialiasing -> False, 
                   
                   PolygonBox[{{2.7312248802544823`, 5.1}, {3.268775119745518,
                     5.1}, {3.268775119745518, 1.6}, {2.7312248802544823`, 
                    1.6}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{3.268775119745518, 4.35}, {2.731224880254482, 
                    4.35}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3., 1.6}, {3., 1.}}, {{3., 5.1}, {3., 
                    6.9}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3.134387559872759, 1.}, {2.865612440127241, 
                    1.}}, {{3.134387559872759, 6.9}, {2.865612440127241, 
                    6.9}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "6.9`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "5.1`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "4.35`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "1.6`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}}, 
                 GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 6.9}, {
                  Style["75%", Bold], 5.1}, {
                  Style["median", Bold], 4.35}, {
                  Style["25%", Bold], 1.6}, {
                  Style["min", Bold], 1.}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             RGBColor[0.290517, 0.358022, 0.190234]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GraphicsGroupBox[{Antialiasing -> False, 
                   
                   PolygonBox[{{3.7312248802544823`, 1.8}, {4.268775119745518,
                     1.8}, {4.268775119745518, 0.3}, {3.7312248802544823`, 
                    0.3}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{4.268775119745518, 1.3}, {3.731224880254482, 
                    1.3}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4., 0.3}, {4., 0.1}}, {{4., 1.8}, {4., 
                    2.5}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4.134387559872759, 0.1}, {3.865612440127241, 
                    0.1}}, {{4.134387559872759, 2.5}, {3.865612440127241, 
                    2.5}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "2.5`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "1.8`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "1.3`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.3`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "0.1`"}},
                  GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 2.5}, {
                  Style["75%", Bold], 1.8}, {
                  Style["median", Bold], 1.3}, {
                  Style["25%", Bold], 0.3}, {
                  Style["min", Bold], 0.1}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], 
              "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {0.5543473682799303, -0.29000000000000004`}, Frame -> 
       True, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{True, True}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.7312248802544821, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           4.268775119745518, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.7312248802544821, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           4.268775119745518, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
       GridLines -> Automatic, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, PlotLabel -> 
       FormBox["\"All Species\"", TraditionalForm], PlotRange -> Automatic, 
       PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
          0.7312248802544821, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          4.268775119745518, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
         Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"SepalLength\"", "\"SepalWidth\"", "\"PetalLength\"", 
         "\"PetalWidth\""}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.658579, 0.316091, 0.207507]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9054976666666666, 0.7153413333333334, 
                    0.2960873333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8486136666666667, 0.7211989999999999, 
                    0.2780876666666667]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.290517, 0.358022, 0.190234]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.658579, 0.316091, 0.207507]|>, 
                    "RGBColorSwatchTemplate"], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9054976666666666, 0.7153413333333334, 
                    0.2960873333333333]|>, "RGBColorSwatchTemplate"], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.8486136666666667, 0.7211989999999999, 
                    0.2780876666666667]|>, "RGBColorSwatchTemplate"], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.290517, 0.358022, 0.190234]|>, 
                    "RGBColorSwatchTemplate"], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   TemplateBox[{
     GraphicsBox[{{
        Opacity[0], 
        PointBox[{{0.5097251739635205, -0.29000000000000004`}, {
         4.4902748260364795`, 8.290000000000001}}]}, {
        Directive[
         EdgeForm[
          Directive[
           Opacity[0.7]]], 
         RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
          Directive[
           EdgeForm[
            Directive[
             Opacity[0.7]]], 
           RGBColor[0.982864, 0.7431472, 0.3262672]], {{
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.7]]], 
             RGBColor[0.396811, 0.31014, 0.204105]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GeometricTransformationBox[
                  PolygonBox[CompressedData["
1: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
gDIv8DyBMk/wvIEyb/A8gjKP8LyCMq/wPIMyz/C8gzLv8DyEMg/xvIQyL/E8
hTJP8byFMm/xPIYyj/G8hjKv8TyHMs/xvIcy7/E8iDIP8ryIMi/yPIkyT/K8
iTJv8jyKMo/yvIoyr/I8izLP8ryLMu/yPIwyD/O8jDIv8zyNMk/zvI0yb/M8
jjKP87yOMq/zPI8yz/O8jzLv8z6Asg/wvoCyL/A+gbJP8L6Bsm/wPoKyj/C+
grKv8D6Dss/wvoOy7/A+hLIP8b6Esi/xPoWyT/G+hbJv8T6Gso/xvoayr/E+
h7LP8b6Hsu/xPoiyD/K+iLIv8j6Jsk/yvomyb/I+irKP8r6Ksq/yPouyz/K+
i7Lv8j6Msg/zvoyyL/M+jbJP876Nsm/zPo6yj/O+jrKv8z6Pss/zvo+y7zMP
QOEBzAtQeAHzBBSewLwBhTcwj0DhEcwrUHgF8wwUnsG8A4V3MA9B4SHMS1B4
CfMUFJ7CvAWFtzCPQeExzGtQeA3zHBSew7wHhfcwD0LhQcyLUHgR8yQUnsS8
CYU3MY9C4VHMq1B4FfMsFJ7FvAuFdzEPQ+FhzMtQeBnzNBSexrwNhbcxj0Ph
cczrUHgd8zwUnse8D4X3MQ9E4YHMC1F4IfNEFJ7IvBGFNzKPROGRzCtReCXz
TBSeybwThXcyD0XhocxLUXgp81QUnsq8FYW3Mo9F4bHMa1F4LfNcFJ7LvBeF
9zIPRuHBzItReDHzZBSezLwZhTczj0bh0cyrUXg182wUns28G4V3Mw9H4eHM
y1F4OfN0FJ7OvB2FtzOPR+HxzOtReD3zfBSez7wfhfdzHoCSB3BegJIXcJ6A
kidw3oCSN3AegZJHcF6BkldwnoGSZ3DegZJ3cB6CkodwXoKSl3CegpKncN6C
krdwHoOSx3Beg5LXcJ6Dkudw3oOS93AehJIHcV6EkhdxnoSSJ3HehJI3cR6F
kkdxXoWSV3GehZJncd6FkndxHoaSh3FehpKXcZ6Gkqdx3oaSt3Eeh5LHcV6H
ktdxnoeS53Heh5L3cR6IkgdyXoiSF3KeiJInct6IkjdyHomSR3JeiZJXcp6J
kmdy3omSd3IeipKHcl6KkpdynoqSp3LeipK3ch6LksdyXouS13Kei5Lnct6L
kvdyHoySB3NejJIXc56Mkidz3oySN3MejZJHc16Nkldzno2SZ3PejZJ3cx6O
kodzXo6Sl3OejpKnc96OkrdzHo+Sx3Nej5LXc56Pkudz3o+S97MPgOIDsC+A
4guwT4DiE7BvgOIbsI+A4iOwr4DiK7DPgOIzsO+A4juwD4HiQ7AvgeJLsE+B
4lOwb4HiW7CPgeJjsK+B4muwz4Hic7DvgeJ7sA+C4oOwL4Lii7BPguKTsG+C
4puwj4Lio7CvguKrsM+C4rOw74Liu7APg+LDsC+D4suwT4Pi07Bvg+LbsI+D
4uOwr4Pi67DPg+LzsO+D4vuwD4TiA7EvhOILsU+E4hOxb4TiG7GPhOIjsa+E
4iuxz4TiM7HvhOI7sQ+F4kOxL4XiS7FPheJTsW+F4luxj4XiY7GvheJrsc+F
4nOx74Xie7EPhuKDsS+G4ouxT4bik7FvhuKbsY+G4qOxr4biq7HPhuKzse+G
4ruxD4fiw7Evh+LLsU+H4tOxb4fi27GPh+Ljsa+H4uuxz4fi87Hvh+L7sQ+I
4gOyL4jiC7JPiOITsm+I4huyj4jiI7KviOIrss+I4jOy74jiO7IPieJDsi+J
4kuyT4niU7JvieJbso+J4mOyr4nia7LPieJzsu+J4nuyD4rig7IviuKLsk+K
4pOyb4rim7KPiuKjsq+K4quyz4ris7LviuK7sg+L4sOyL4viy7JPi+LTsm+L
4tuyj4vi47Kvi+Lrss+L4vOy74vi+7IPjOIDsy+M4guzT4ziE7NvjOIbs4+M
4iOzr4ziK7PPjOIzs++M4juzD43iQ7MvjeJLs0+N4lOzb43iW7OPjeJjs6+N
4muzz43ic7PvjeJ7sw+O4oOzL47ii7NPjuKTs2+O4puzj47io7OvjuKr/1+f
/X8ASOKz/Q==
                   "]], {{{0.6779446715082126, 0.}, {0., -1.}}, {1., 0.}}]}], 
               "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "7.9`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "6.4`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "5.8`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "5.1`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "4.3`"}},
                  GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 7.9}, {
                  Style["75%", Bold], 6.4}, {
                  Style["median", Bold], 5.8}, {
                  Style["25%", Bold], 5.1}, {
                  Style["min", Bold], 4.3}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.7]]], 
             RGBColor[0.726732, 0.538136, 0.31593]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GeometricTransformationBox[
                  PolygonBox[CompressedData["
1:eJxlmnlYjXvU95vnYe8kZCrDQTIPDdKSYxYyz8MxcyLz2KFJSUmKkKRSKUSl
gcRaiCJDyhASpRSijqFjrLfnetZ6/3hff3DtS1d77/v+3Wt9h4/lQrdJS9RU
VFQamv76n3/lz6IfARtfrvyNibdfHu2+2xfSvQO+//b7jatTWryY7bYbtA0D
/mkT9xuX/Oi4rsRtD8wM26M66Npv7Dh57F8l/oFwuv2eXTNf/kanJaXVgZeD
4HeCv+6WX7/R/eXTs6G7gmFCX/+9Ya0a8GvPW+fPXNwP0Zd2K9MHNuC+TsXn
an6EwOdhuw8WTW7AbF8vSBt9AIbf82v1aU0D9si1050SfxAOTfc7pghqwJWt
39v2Vh6Ct698LXudbsBf1y/W5+w5DINW+saNy2vA4q07myU2C4e9n3d1c61s
wJ1fzwwMPnMUXrrvStqj1ojLVca5OU87Bn20dvVJbN+IFeGf9O8rj4P3Pp/0
XIdGtAmxdzFdEwWPWvrYvZnZiNXWf5oM+ysausR4X9bY3Iihj07tbTM3BrZ0
93bqeKAR42YPmeuy+ATcTvO64ZTSiDs7d352enMstHH0Gr3gXiN29k2vfXEo
Dlbnet7d8b7pde24kqwb8bAggRLGa6hQ6bxpA0zUEkB3Fb17YaJCZtFPPyeP
S4TUPmS9ylKFUvvfyZyXeApm1+PqX71UKMPALehp8zOgcQmTAxxVqNYx+tCD
0CRI2omfzMepkJ0yM7ai4zmYNgz7n5qtQhP0QuudFyVDow5uslupQo3//vGz
p2MKJNy9ciFviwq1X1e5BDukwsSQKz+m+6lQzG2fSabK8/Bj2hWHqoMqZPo+
wr+PbhqcaH1lx6bYpvf7nXO9mX46OL+6TJrnVWhj1wqjXWYZ8DX2strBqyrk
5vLVfVL3TIhccXlYpwIVMlEMjugz+gKM7HnZ93xp0/dpFjL8mttFqPuUnTf0
gwrNXli8dn9kFhzJzNYr/KlCHcfMP2b+6BIMdc92/ktPlaqeFB+4ZXIZ3g/J
DqprqUqui/vH/pp2BQ5oZhfs7KJK/4U+aqMdjTD49iUT44GqZDdDrZn5FoI3
QZemRA5TJfcBiooKy6uwb/KlsB6TVUn/d5DC9+5VsG15qTj7L1UKPpo4PWrb
NSgryTJ3XqNKWVtCTpZ1vQ57orPmPN+hSpFVW7+9eXId+i3Nily5V5VyG/tY
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
lHnF8wxlnvG8Q5l3PA9R5iHPS5R5yfMUZZ7yvEWZtzyPUeYxz2uUec3zHGWe
87xHmfe8D1D2Ae8LlH3B+wRln/C+Qdk3vI9Q9hHvK5R9xfsMZZ/xvkPZd7wP
UfYh70uUfcn7FGWf8r5F2be8j1H2Me9rlH3N+xxln/O+R9n3rAdQ9ADrBRS9
wHoCRU+w3kDRG6xHUPQI6xUUvcJ6BkXPsN5B0Tush1D0EOslFL3EegpFT7He
QtFbrMdQ9BjrNRS9xnoORc+x3kPRe6wHUfQg60UUvch6EkVPst5E0ZusR1H0
KOtVFL3KehZFz7LeRdG7rIdR9DDrZRS9zHoaRU+z3kbR26zHUfQ463UUvc56
HkXPs95H0fvsB1D8APsFFL/AfgLFT7DfQPEb7EdQ/Aj7FRS/wn4Gxc+w30Hx
O+yHUPwQ+yUUv8R+CsVPsd9C8Vvsx1D8GPs1FL/Gfg7Fz7HfQ/F77AdR/CD7
RRS/yH4SxU+y30Txm+xHUfwo+1UUv8p+FsXPst9F8bvsh1H8MPtlFL/MfhrF
T7PfRvHb7MdR/Dj7dRS/zn4exc+z30fx+5wHoOQBnBeg5AWcJ6DkCZw3oOQN
nEeg5BGcV6DkFZxnoOQZnHeg5B2ch6DkIZyXoOQlnKeg5Cmct6DkLZzHoOQx
nNeg5DWc56DkOZz3oOQ9nAeh5EGcF6HkRZwnoeRJnDeh5E2cR6HkUZxXoeRV
nGeh5Fmcd6HkXZyHoeRhnJeh5GWcp6HkaZy3oeRtnMeh5HGc16HkdZznoeR5
nPeh5H2cB6LkgZwXouSFnCei5ImcN6LkjZxHouSRnFei5JWcZ6LkmZx3ouSd
nIei5KGcl6LkpZynouSpnLei5K2cx6LksZzXouS1nOei5Lmc96LkvZwHo+TB
nBej5MWcJ6PkyZw3o+TNnEej5NGcV6Pk1Zxno+TZnHej5N2ch6Pk4ZyXo+Tl
nKej5Omct6Pk7ZzHo+TxnNej5PWc56Pk+Zz3o+T93Aeg9AHcF6D0BdwnoPQJ
3Deg9A3cR6D0EdxXoPQV3Geg9Bncd6D0HdyHoPQh3Jeg9CXcp6D0Kdy3oPQt
3Meg9DHc16D0NdznoPQ53Peg9D3cB6H0QdwXofRF3Cfh/+2T/rdvQumbuI9C
6aO4r0Lpq7jPQumzuO9C6bu4D0Ppw7gvQ+nLuE9D6dO4b0Pp27iPQ+njuK9D
6eu4z0Pp87jvQ+n7uA9E6QO5L0TpC7lPROkTuW9E6Ru5j0TpI7mvROkruc9E
6TO570TpO7kPRelDuS9F6Uu5T0XpU7lvRelbuY9F6WO5r0Xpa7nPRelzue9F
6Xu5D0bpg7kvRumLuU9G6ZO5b0bpm7mPRumjua9G6au5z0bps7nvRum7uQ9H
6cO5L0fpy7lPR+nTuW9H6du5j0fp47mvR+nruc9H6fO570fp+5kHQOEBmBdA
4QWYJ0DhCZg3QOENmEdA4RGYV0DhFZhnQOEZmHdA4R2Yh0DhIZiXQOElmKdA
4SmYt0DhLZjHQOExmNdA4TWY50DhOZj3QOE9mAdB4UGYF0HhRZgnQeFJmDdB
4U2YR8H/y6P8L6+Cwqswz4LCszDvgsK7MA+DwsMwL4PCyzBPg8LTMG+Dwtsw
j4PC4zCvg8LrMM+DwvMw74PC+zAPhMIDMS+EwgsxT4TCEzFvhMIbMY+EwiMx
r4TCKzHPhMIzMe+EwjsxD4XCQzEvhcJLMU+FwlMxb4XCWzGPhcJjMa+Fwmsx
z4XCczHvhcJ7MQ+GwoMxL4bCizFPhsKTMW+Gwpsxj4bCozGvhsKrMc+GwrMx
74bCuzEPh8LDMS+HwssxT4fC0zFvh8LbMY+HwuMxr4fC6zHPh8LzMe+Hwvsx
D4jCAzIviMILMk+IwhMyb4jCGzKPiMIjMq+Iwisyz4jCMzLviMI7Mg+JwkMy
L4nCSzJPicJTMm+Jwlsyj4nCYzKvicJrMs+JwnMy74nCezIPisKDMi+Kwosy
T4rCkzJvisKbMo+KwqMyr4rCqzLPisKzMu+KwrsyD4vCwzIvi8LLMk+LwtMy
b4vC2zKPi8LjMq+Lwusyz4vC8zLvi8L7Mg+MwgMzL4zCCzNPjMITM2+Mwhsz
j4zCIzOvjMIrM8+MwjMz74zCOzMPjcJDMy+NwkszT43CUzNvjcJbM4+NwmMz
r43CazPPjcJzM++NwnszD47CgzMvjsKLM0+OwpMzb47CmzOPjsKjM6+Owqsz
z47CszPvjsK7Mw+PwsMzL4/CyzNPj8LTM2+Pwtszj4/C4zOvj8Lr/788//8B
5/MrgA==
                   "]], {{{0.25313917409995323`, 0.}, {0., -1.}}, {2., 
                   0.}}]}], "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "4.4`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "3.3`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "3.`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "2.8`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "2.`"}}, 
                 GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 4.4}, {
                  Style["75%", Bold], 3.3}, {
                  Style["median", Bold], 3.}, {
                  Style["25%", Bold], 2.8}, {
                  Style["min", Bold], 2.}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.7]]], 
             RGBColor[0.831964, 0.810543, 0.372854]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GeometricTransformationBox[
                  PolygonBox[CompressedData["
1:eJxlmndYzn/Ux1OR0t47P/NHkpGSdcxERqQyQlb5EZIRkYhkhEgDJSMpRUui
1Pm0p9xIUSE07OxE8Xiu65x/nscfXF1X6r7v7+dzznu8/lm+Ye4qaSkpqeq/
f/3vv/yncf1F6283qiGicV5dlqY7iGsbn5SOewi+lSHnK4v+g4gPsOds0QMY
adXDVgc9YPNg5b6bZt2HgvfZrWldPGHG+vqSqdUSsLjk1/C5YiPYuzg+Hnm7
EqK6hFXsK9gEUvWfer4oL4cuazv+u/t2C9xcdHT14boSSF+waNAym23gWTcw
2eJtIeTcujXxY40P9FxU3PbkZx50Wl4ctCDGFx7VroBABQGF/os2VDrvBtV0
KeVlFplQ0NPLqvX3Hth93ToqzeE6VAUH9Ewu3QvCvWm+YnMi7Fx22Wl8ZgCc
c3P2TulzHhbLKCvV3Q+E3aF9nRceCYCNv1dMLNQ6BFIb1M3Vth3EQkunUXYB
QSAVNddsqckFbLr/+kp272PQ82yDcmbDVRyp13v2zfZgODfbapvCveuoNyR4
0fwdJ2C8/e9XGSmZGPs9P7JR5yR4xr1IHDZNYHJFyjxfSSgk/2uz6qB1PhrO
3Rg2OjYcpOLjjRoGFGHL6zkG5qdPgf0ApWpL/VIMnD6tdtHVM3Au3vPoEYUK
/DdGyT+jIQoaBlTZNP6sxJ/TIjxC9M+B7sMzflHfJJino7wv2/E8jA+9U1ey
7j7qhyettrpwAVwd/1h9bXqAGY7RT+dIxcABraEnTZY8xKJQ2ejZnpcg+eHy
j9Orq3FrXH31ys+x8Cj05Iytsx5hZavwTN0fBz8ci+LOFz3GUbU7n9iaXYGe
2j9k74yrw4Azmdf7NCeAbfWAZT9u1GO22b01ZilXwTNsUXZv86d4ck7ReIuj
SRDsdERv9uVn6KqueHR7TjK4HH42KvtYA8qMbMkKyEkBz7U/Xt23e45aWV1K
pItTYbedWvgruRf4rfccrbiaNDhpOnDK7/wXaNDHeq7xx+sQ12PSF43dL/G8
u3FFF9UbcPvtovMDxjRisWR4UINlBlSUb54NPxrxvxXFzaNW3oSGhCOd8643
ofryJ4X+4bfg6+HYhDWezfjy7pk4Q0kmdPfABbsHteBOee+DS5Vug+6MR3Jh
r1rwtNNJCJ2VDYMGfUpPiHmFaJVX8PNEDoxXVFiZ6/oa5Zr23xSPEezf9VKv
MXyDtw71sO92XMDKitHi3aM36Fj1+9TOEbmwLXHeeunQt3hobO/q8se5EBS0
zlB3zjvEubkvvX3zINJjf5mZ0nusiFYd0qVnPiTPiN42qfQ96jk61DaKfCgY
dLPfgoAPuGnetPyopQXwSPFe1foJrTj6V8S0mF8F8Orda/99na3oq6ar5nmy
EHa57dG94/IRZ17U3r9tQBEcqD7SWpP5EQfPM48dkVkEwTani17ofsKoaTMO
9rQphtM3YqPeb/2Eq6c9i0yrKIaYfmmbf1R9Qs/0ydPXzSyBa2FoJzP8MzYv
N5tzt7gEbnSr6KV8/DP2dCla7Tq6FMTWR+26rZ+x+ouRX8LlUihrbpT0nvkF
b/2xTJqoWAZVTp8uD074gmpVU+NyVpdBfVHnLmv5r7j89Rc5cbsMmi0VnCa7
f8XTJXEfPsiVw8dYbbPZhV8x0tQ0vmNaOfzQ7i27sPc33HfSeXyMfzlIB5rX
rdzzDZsK+564klIOim2jUzc8+4Z7q1WePa0uB21324M+Y7/jj8SuOfqfy8G4
Zp5rwJnvaHNWbsYkmQr4d+oyq+D277hu8p8btgoVMCxjnfIZ5zZ0KLFX7S9X
AWP6+zRdSm9DvLZ5a2N7OUwO3387WeMHat3YGxXyohxmyYWEZG38gTHrTMbN
zS2H+d7Ra4ru/kCPoq44LawcXFsSJtwza8dxr3X7X11WDmucb+rWH25H0/sF
AzN7l8Pm4oLW5tft6Dnbd/2t+jLYZXWv6NPUn5jq2K2uI6gM9l9+EtVx6See
PPfu0DOLMgjWebNZTvYX7p0ycE5BVSmcDvxup778F3a3/p6gva4UYtqkexuJ
X3jkuPYX298lkOiu8rO/cQdu+Tl8V9WBv8+rxuDesJ0dmD9e5FgqlYCY+m/c
2NoOfDBt5agvh4uhJMPCz3ZkJ6ZphDoe71oM9/tPcHII68R+v748OeNTBPXh
M82WfO3EtyuXh0b/ncvNcgtl/5v7G2cbnMocuKAQPni71W1K/o1f301tqcgv
gB8tXqm7lP/g6fnSx7UGFYD0fL+DBz3+4KJ7FpKQE/mgWHLY9WTZH7yqlpzz
oC0PFAwrzszWlBI50xY+dnXJA5V5c+UcJ0kJL6fJk/JFLmgGPfJa6CUl5kR8
NNjdNxd0C5Y8XXpeSvhZprnpHBZg3NE4bZVESkw1Ly5UaEToZbE2fc0fKaGS
Pi7UPz0H+nl86uk5uIv457PpCZ/Df+9zjHfQlsVdhNz36rFlbrdhSH1nm09Q
F/Fcc3/caNsssNDct2J3Vhch9HLajw7JhFEzFO4GvOkiJG3fYWvPWzBuX/Co
w3rSwnxCaHKY7k2YeFs7NthWWnQrj4zer5cBtl8j1cK8pcUOn87Rkt43YMag
3r5nYqWF6522glardJi7Mv7VuYfSIvx71Z55TtfBKdJ8XqysjHAabxi91C8N
FlalY8JwGZFlY9ixKi0VXBXHmKYslxHjc6Q0kj+nwMrJeWE3jssIhQJ09Bmb
Aqt32krfFjLCJdpm3beQZFh/vXJdbquMcPftVhn0Lgm83s17XGQsKw7l3hqt
VnoNtvapm1wxU1b8nDRrzensq7DTZVnyvZ2yoixze551WSLsPtliUJMgK/r3
WpHy5kMC7K9YF1hfKyseJJqpRZkmwCHZr5+fy3cV37WScMjuK3B0jM+SlpFd
RewGfy+fd/FwcrNU2Tv3rqJXbqjiOM94iEjcP+JzWFdxEipfWvaIh8hGxfNt
hV2F3+4N03Sz4+CCYYhi59euwqt4fUpQQBzEztPbJt2nmxiZVD7NamUcXAmK
finn0E28lOvyLXV+HCQX9J2t5N9NzPh1ziFieRxc70jIVE/pJpoLgmt99sRB
psWwfroN3cSS4ue2767HQY7HzeNGKnLCZldFiHdHHOTFjOvsNU5OKMt4XI53
joeS+oLV/66TExfNLWcoFcVDhaZdlVmknIjMqRtqNvUKSGbcg+HlckL76J1D
J2qvQPU+54SRP+XEJpdDasV+CVB7+4n2uAHdRVL2/mJHy0R4+nWF/6T53cUA
qxSbss5EaBz05r1tYHeh4mU+O+XhVXi10nPBrBvdRV6UdmlY9jX4EPm9wKGp
u2jxa6qST0+Cz1U7hyzQlBd94xs/VSxOhu+KMpFLJsmL6t8/1nm8SoaOyQfl
VnrJCxPviQ8H+qSAlK/Kpv/OywuX9WuP3lNPBdn00KfrJfLi7IfTvwakpoLC
e4Ppm//IC52Xakc6ndNAue+F9O2DFUSw2+ksLdnroL7433/8FiuI5N05zaNv
XAfd0GtB+4IUxJ0NFkOt16eD4R2LHwezFET3F7Vu1aY3oFfXrBXH3iiIhaOO
va/7cAP6jZ1w96ReD2EdvOS9akYGDNxSPOq0bQ+x3Tlk/ph9N2HI1Zmx0d49
RODQXz97O90Ci6YHapdie4jDm1MLgwZlwkijhb5XHvYQZaZbGq3lsmCcY8Or
JFlFUaLqHP2+KQsmHnGblz5cUSRsOXRndcltsCl8h5nLFYXf2jmZa65lw4xO
L1NxXFG0PLczSQnPAfsR7WGFQlGM9u2v/WMvgtM6P+nyVkWxRmqsnK+1gIWX
uq6XGCsJ+YUvmq1SBSx5cvjxw5lKQoSnzOw+KBdWaqlPqdupJLa8Nk0tic2F
1TMjkhsSlMS2VHMlh1554BFgbNhcqyQqDrWv3302D7yyYwLfyiuL78GD5w8w
yIet3wZ++ThSWQx6Oki1b0Q++JilLPnuriyWLlq0d7pWAexeZVX2K0xZdLtj
JO95ogD2RWWP6FKkLI5u/bxwrUohHHo46Xy3b8rCo19JhlpQIRxVKlNU7KMi
7gQc/GHVvQhOTLHfpuagIsyOJBxI3VsEEb7VL7X9VYTvmpp2x99FEJnuMtsw
RUVkFBnv+u5dDOfev8j8p0FFDC4YK736YzE8OGEREiKnKvKiy6t2uZfAw2tt
ttomqqIxMfKQypMSqCnL/B1hqSp2jX735oN9KdQ2+143mKUqRm9fbPA5rxTq
pSesObtKVcj6aZR+GFYGz4xle/7jqyoWttTMzTpXBs9HFT+8eFJVBGq8NDdX
LIeXTocO90tUFaPkfo/utaUcmr1mTojPVxUtv3UOrqsrh1dHVdtM61TFWbfA
gDfjKuDNlQeJ1z6rirhqhSFboyvgfVHY8qEKauJl98F73nVUQOuLBbrX/1ET
zdv1Q0yd78Cn34aVltZqwjjCCdSv3YGv+g17b9mrifWqhWp7u1TCd8uL1mNW
q4nPH4fuWDanEtrnurXm+KkJ5YH79xyPqoRf6wdcmhCuJrbqv/Nvb6qEzkPv
FhZcUxNDVm6K2DPwLkhdTlKdWqQmagafDdVeexek872KSp+oCSu8d+7i5bsg
+2zEzhnf1ETw6kerdRrugtyvH0PvKqoLl2NxUkMVJCCvc7tlTh91YaYkXT+6
lwR6DPeLqhqtLsI7F+/qN1ICyrMnOjg7qAv/JY3/vbOTgOrarvK1a9TFrPfF
fQ8tloBGYEmOi7+6KB4ef6DTQwJaFw9vfnZKXVhrJq6f4iMBHZw1cHmKupBc
GL59WYAE9OvUGhpL1MXBe+83zD0qAcO2qlD3hr8/vzBJSz9UAsYaEXZv2tRF
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
75AfQvZD5JeQ/RL5KWQ/RX4L2W+RH0P2Y+TXkP0a+TlkP0d+D9nvkR9E9oPk
F5H9IvlJZD9JfhPZb5IfRfaj5FeR/Sr5WWQ/S34X2e+SH0b2w+SXkf0y+Wlk
P01+G9lvkx9H9uPk15H9Ovl5ZD9Pfh/Z71MegJwHUF6AnBdQnoCcJ1DegJw3
UB6BnEdQXoGcV1CegZxnUN6BnHdQHoKch1BegpyXUJ6CnKdQ3oKct1Aeg5zH
UF6DnNdQnoOc51Deg5z3UB6EnAdRXoScF1GehJwnUd6EnDdRHoWcR1FehZxX
UZ6FnGdR3oWcd1EehpyHUV6GnJdRnoacp1Hehpy3UR6HnMdRXoec11Geh5zn
Ud6HnPdRHoicB1JeiJwXUp6InCdS3oicN1IeiZxHUl6JnFdSnomcZ1LeiZx3
Uh6KnIdSXoqcl1KeipynUt6KnLdSHoucx1Jei5zXUp6LnOdS3ouc91IejJwH
U16MnBdTnoycJ1PejJw3Ux6NnEdTXo2cV1OejZxnU96NnHdTHo6ch1NejpyX
U56OnKdT3o6ct1Mej5zHU16PnNdTno+c51Pej5z3Ux+A3AdQX4DcF1CfgNwn
UN+A3DdQH4HcR1BfgdxXUJ+B3GdQ34Hcd1AfgtyHUF+C3JdQn4Lcp1Dfgty3
UB+D3MdQX4Pc11Cfg9znUN+D3PdQH4TcB1FfhNwXUZ+E3CdR34TcN1EfhdxH
UV+F3FdRn4XcZ1Hfhdx3UR+G3IdRX4bcl1GfhtynUd+G3LdRH4fcx1Ffh9zX
UZ+H3OdR34fc91EfiNwHUl+I3BdSn4jcJ1LfiNw3Uh+J3EdSX4ncV1Kfidxn
Ut+J3HdSH4rch1JfityXUp+K3KdS34rct1Ifi9zHUl+L3NdSn4vc51Lfi9z3
Uh+M3AdTX4zcF1OfjNwnU9+M3DdTH43cR1NfjdxXU5+N3GdT343cd1MfjtyH
U1+O3JdTn47cp1Pfjty3Ux+P3MdTX4/c11Ofj9znU9+P3PcTD4DMAxAvgMwL
EE+AzBMQb4DMGxCPgMwjEK+AzCsQz4DMMxDvgMw7EA+BzEMQL4HMSxBPgcxT
EG+BzFsQj4HMYxCvgcxrEM+BzHMQ74HMexAPgsyDEC+CzIsQT4LMkxBvgsyb
EI+CzKMQr4LMqxDPgsyzEO+CzLsQD4PMwxAvg8zLEE+DzNMQb4PM2xCPg8zj
EK+DzOsQz4PM8xDvg8z7EA+EzAMRL4TMCxFPhMwTEW+EzBsRj4TMIxGvhMwr
Ec+EzDMR74TMOxEPhcxDES+FzEsRT4XMUxFvhcxbEY+FzGMRr4XMaxHPhcxz
Ee+FzHsRD4bMgxEvhsyLEU+GzJMRb4bMmxGPhsyjEa+GzKsRz4bMsxHvhsy7
EQ+HzMMRL4fMyxFPh8zTEW+HzNsRj4fM4xGvh8zrEc+HzPMR74fM+xEPiMwD
Ei+IzAsST4jMExJviMwbEo+IzCMSr4jMKxLPiMwzEu+IzDsSD4nMQxIvicxL
Ek+JzFMSb4nMWxKPicxjEq+JzGsSz4nMcxLvicx7Eg+KzIMSL4rMixJPisyT
Em+KzJsSj4rMoxKvisyrEs+KzLMS74rMuxIPi8zDEi+LzMsST4vM0xJvi8zb
Eo+LzOMSr4vM6xLPi8zzEu+LzPsSD4zMAxMvjMwLE0+MzBMTb4zMGxOPjMwj
E6+MzCsTz4zMMxPvjMw7Ew+NzEMTL43MS/9fnvp/AO7ZJ5M=
                   "]], {{{1.0355111520443914`, 0.}, {0., -1.}}, {3., 0.}}]}],
                "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "6.9`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "5.1`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "4.3`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "1.6`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}}, 
                 GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 6.9}, {
                  Style["75%", Bold], 5.1}, {
                  Style["median", Bold], 4.3}, {
                  Style["25%", Bold], 1.6}, {
                  Style["min", Bold], 1.}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.7]]], 
             RGBColor[0.35082, 0.595178, 0.853742]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GeometricTransformationBox[
                  PolygonBox[CompressedData["
1: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
g6UFmfYHWbMnFkKUUru+zgRp4baSzZ3d3wrgWI3oSLW+tDDlqPMDyxcFoJeU
8PyuqbSgvuKzzJhjBdAc9PjH2m3SQrLFt3U+BgUQ4XJ9Wj87aSFgf1xcZlc+
2FnZ/4PnpYXZCrEDYt7mg86SzUH2PtLC6GArv82n8qF+7JLK6WHSgqdho1f4
gvxf/kxrTJUgLfQ5G1dFtOXBQdHAzd750kJkTfG8PS/zYObbRi/zL9LCzod+
87IO5MF33+J8uW5p4ZPN8pdftPIg1OHdkJjBMsIXhaOnX4lzYd/GIPPDE2SE
PVsGqRvdzoVp81yvTJ4nI5zpVS68bJoLX4YdShGZygjX9lpevt2bAyHN6+U9
tskIVR2iJftf5IB13kIjUzsZYfFO6yVqO3NAK2Kco9QFGcGrQkbBb2gOVLsr
vo3ykRHGyUwyH5CQDUG2P9r3h8kIcv+mjTpwOBt2mefNnRAnI6RkartljcmG
8dqv7UryZYSNVar6zp5ZUDXA/9n1LzJC6jZHvaAfmRBQe+778m4Z4VFj+mSt
pZlgmbpvavdgWSH/6I5VM7wyYEzIauuICbKCrtwmTdHXdBBf0H+wZ56scMtw
xqIdC9Ph7m71ijFmssIQxzzDj1c+wJZlMhoF22SF0KN3H1wvSwP1CV82XbGT
FZpnNV73mJYGpdKZnksuyAqNiVaR4xxSwbfiZV6bj6wwJ+llqHVyCmxEH+Xw
MFlh27jWc97DUmDEPcdVu+JkhaVjp3V92ZkMhad2u44qkBVUk/feuxKRBJ6b
zZKzv8gKLiuLQ/+TToJ1C2bLXeyWFaqOJQd6r3kPqiOHL1mkLCeUFXl12NxP
hNy27tNNE+SElTeXt1g1J8DNwqo3j+fJCZltY7a9ME6A1ZEpbdvN5ITx0zVN
Xe/Gg7JHuJ7adjnh1iTDTI2mOMi28zicbicntGUVbPY3i4Nra06EO1+QE6wm
N/oYBgtgrmP5bb6vnLBooKCuLSvAwMErptSFyQnHb5zbP/79O0j/MX33wzg5
AcvMXGdejgXX9CH3NxfICT2uZ4ZmrX0Lpk/bxEO+ygkb+jn1WIyPASVX0eiU
bjnBszfZpr3tNaTsSdh4RllecNW4drh//iu4YPz4tt5EeaGmocQsPioaVmhd
z62dJy8oOXnLrguIAgV5+8GBZvLCBHGie6d7JCR+/PuPDdvlhYUzAt3KL/0H
5+INL/92RF7QMHljoXnpJRgFaiUlXJAXUi5Gb6++FgEyTgNlT/jKCxvd7BxW
+r0AYVsj6ITLC5edrnhse/kcnBYVn6qOkxfUb/9Zu/f+M1is/u713QJ5IerT
0MuhP8Kgt/NB69qv8sLFU4U73ExC4W3JZd1+PfJC1wblMX0RT+DUK9tDqKwg
bEsKlihpP4bfvdaH2U9UEMb1/zzZPeoRdNovrJ0+X0H45lHz0dYiGN6sGze5
ykxBMI9fMtOxLQj+1VXc5b1dQdAyP/ngavgDmK/yI8D8iIIw9+Hv37YdvQ+t
9bkiuYsKwp0n0saRJoEQlfVqVIyvgvB21ohJJtMD4Gj4vQ2Hw399rb33wK15
90DP7ZzH5HgF4bHC3vBU3bvQaLMvR1SgIAy4YnbD2dQXIkxXD/L4qiCU4J/t
g056w6Gp+mamPQrCLf34/g8TPUFHSf2S1BBFwbLJ5/4prdvws1r6fdREReH0
4+nTU/xvQfj7GukD8xWFLlunt5GzbsLBoIzFE/5QFOoadbUPFbjDDJeXJ0u2
KwrvdcrmGGpeh+87fF5dP6IozIOgmJLYq/DE0LFl+UVFQbTgY/+us66wb+zu
Od2+ioL68lVRX/ddgim9prYR4YrC9PYkqYHHL8CXcp3QPfGKgkJ0YnlY0DkI
jlH7OqZQUZhxWMl5WqMzWPt2Tyr4qig4a/vlfdp6FiY6VFld6VEUDn2f6nc9
3RE+bUjxXzJESYixr9e6PvQ03NcPL2+bqCT8M6whMNHtBFgN8xgZPl9JUC3u
1TSa/y+Mb3b4a9cfSsLkQ6lpOsrHoCJ3+61RlkoC5/EBL5ZnZx/531/T9yN/
P/085J9Hfx/y30e/D/LvQ78v8u9Lnwf589DnRf689DyQnwc9L+TnRc8T+XnS
80Z+3vQ+kN8HvS/k90XvE/l90vtGft90HpDPA50X5PNC5wn5PNF5Qz5vdB6R
zyOdV+TzSucZ+TzTeUc+73QfkO8D3Rfk+0L3Cfk+0X1Dvm90H5HvI91X5PtK
9xn5PtN9R77vNA+Q5wHNC+R5QfMEeZ7QvEGeNzSPkOcRzSvkeUXzDHme0bxD
nnc0D5HnIc1L5HlJ8xR5ntK8RZ63NI+R5zHNa+R5TfMceZ7TvEee97QPkPcB
7QvkfUH7BHmf0L5B3je0j5D3Ee0r5H1F+wx5n9G+Q953tA+R9yHtS+R9SfsU
eZ/SvkXet7SPkfcx7WvkfU37HHmf075H3vekB5D1AOkFZL1AegJZT5DeQNYb
pEeQ9QjpFWS9QnoGWc+Q3kHWO6SHkPUQ6SVkvUR6CllPkd5C1lukx5D1GOk1
ZL1Geg5Zz5HeQ9Z7pAeR9SDpRWS9SHoSWU+S3kTWm6RHkfUo6VVkvUp6FlnP
kt5F1rukh5H1MOllZL1MehpZT5PeRtbbpMeR9TjpdWS9TnoeWc+T3kfW++QH
kP0A+QVkv0B+AtlPkN9A9hvkR5D9CPkVZL9CfgbZz5DfQfY75IeQ/RD5JWS/
RH4K2U+R30L2W+THkP0Y+TVkv0Z+DtnPkd9D9nvkB5H9IPlFZL9IfhLZT5Lf
RPab5EeR/Sj5VWS/Sn4W2c+S30X2u+SHkf0w+WVkv0x+GtlPk99G9tvkx5H9
OPl1ZL9Ofh7Zz5PfR/b7lAcg5wGUFyDnBZQnIOcJlDcg5w2URyDnEZRXIOcV
lGcg5xmUdyDnHZSHIOchlJcg5yWUpyDnKZS3IOctlMcg5zGU1yDnNZTnIOc5
lPcg5z2UByHnQZQXIedFlCch50mUNyHnTZRHIedRlFch51WUZyHnWZR3Iedd
lIch52GUlyHnZZSnIedplLch522UxyHncZTXIed1lOch53mU9yHnfZQHIueB
lBci54WUJyLniZQ3IueNlEci55GUVyLnlZRnIueZlHci552UhyLnoZSXIuel
lKci56mUtyLnrZTHIuexlNci57WU5yLnuZT3Iue9lAcj58GUFyPnxZQnI+fJ
lDcj582URyPn0ZRXI+fVlGcj59mUdyPn3ZSHI+fhlJcj5+WUpyPn6ZS3I+ft
lMcj5/GU1yPn9ZTnI+f5lPcj5/3UByD3AdQXIPcF1Ccg9wnUNyD3DdRHIPcR
1Fcg9xXUZyD3GdR3IPcd1Icg9yHUlyD3JdSnIPcp1Lcg9y3UxyD3MdTXIPc1
1Ocg9znU9yD3PdQHIfdB1Bch90XUJyH3SdQ3IfdN1Ech91HUVyH3VdRnIfdZ
1Hch913UhyH3YdSXIfdl1Kch92nUtyH3bdTHIfdx1Nch93XU5yH3edT3Ifd9
1Aci94HUFyL3hdQnIveJ1Dci943URyL3kdRXIveV1Gci95nUdyL3ndSHIveh
1Jci96XUpyL3qdS3Ivet1Mci97HU1yL3tdTnIve51Pci973UByP3wdQXI/fF
1Ccj98nUNyP3zdRHI/fR1Fcj99XUZyP32dR3I/fd1Icj9+HUlyP35dSnI/fp
1Lcj9+3UxyP38dTXI/f11Ocj9/nU9yP3/cQDIPMAxAsg8wLEEyDzBMQbIPMG
xCMg8wjEKyDzCsQzIPMMxDsg8w7EQyDzEMRLIPMSxFMg8xTEWyDzFsRjIPMY
xGsg8xrEcyDzHMR7IPMexIMg8yDEiyDzIsSTIPMkxJsg8ybEoyDzKMSrIPMq
xLMg8yzEuyDzLsTDIPMwxMsg8zLE0yDzNMTbIPM2xOMg8zjE6yDzOsTzIPM8
xPsg8z7EAyHzQMQLIfNCxBMh80TEGyHzRsQjIfNIxCsh80rEMyHzTMQ7IfNO
xEMh81DESyHzUsRTIfNUxFsh81bEYyHzWMRrIfNaxHMh81zEeyHzXsSDIfNg
xIsh82LEkyHzZMSbIfNmxKMh82jEqyHzasSz4f/n2f4f74bMuxEPh8zDES+H
zMsRT4fM0xFvh8zbEY+HzOMRr4fM6xHPh8zzEe+HzPsRD4jMAxIviMwLEk+I
zBMSb4jMGxKPiMwjEq+IzCsSz4jMMxLviMw7Eg+JzEMSL4nMSxJPicxTEm+J
zFsSj4nMYxKvicxrEs+JzHMS74nMexIPisyDEi+KzIsST4rMkxJvisybEo+K
zKMSr4rMqxLPisyzEu+KzLsSD4vMwxIvi8zLEk+LzNMSb4vM2xKPi8zjEq+L
zOsSz4vM8xLvi8z7Eg+MzAMTL4zMCxNPjMwTE2+MzBsTj4zMIxOvjMwrE8+M
zDMT74zMOxMPjcxDEy+NzEsTT43MUxNvjcxbE4+NzGMTr43MaxPPjcxzE++N
zHsTD47MgxMvjsyLE0+OzJMTb47MmxOPjsyjE6+OzKsTz47MsxPvjsy7Ew+P
zMP/T17+/wB5hEKd
                   "]], {{{0.5402328279174485, 0.}, {0., -1.}}, {4., 0.}}]}], 
               "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "2.5`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "1.8`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "1.3`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.3`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "0.1`"}},
                  GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 2.5}, {
                  Style["75%", Bold], 1.8}, {
                  Style["median", Bold], 1.3}, {
                  Style["25%", Bold], 0.3}, {
                  Style["min", Bold], 0.1}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], 
              "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.7312248802544821, 0.1}, 
       Frame -> True, FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
       Automatic, FrameTicks -> {{True, True}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.7312248802544821, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           4.268775119745518, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.7312248802544821, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           4.268775119745518, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
       GridLines -> Automatic, GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Small, PlotLabel -> 
       FormBox["\"All Species\"", TraditionalForm], PlotRange -> Automatic, 
       PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
          0.7312248802544821, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          4.268775119745518, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
         Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"SepalLength\"", "\"SepalWidth\"", "\"PetalLength\"", 
         "\"PetalWidth\""}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]], 
                    RGBColor[0.396811, 0.31014, 0.204105]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]], 
                    RGBColor[0.726732, 0.538136, 0.31593]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]], 
                    RGBColor[0.831964, 0.810543, 0.372854]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]], 
                    RGBColor[0.35082, 0.595178, 0.853742]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}], "]"}], "]"}], ",", 
                    
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.396811, 0.31014, 0.204105]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}], "]"}], "]"}], ",", 
                    
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.726732, 0.538136, 0.31593]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}], "]"}], "]"}], ",", 
                    
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.831964, 0.810543, 0.372854]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}], "]"}], "]"}], ",", 
                    
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.35082, 0.595178, 0.853742]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.914529394633057*^9, 3.914529413372865*^9}, 
   3.914529481203179*^9, 3.914530995023995*^9, 3.918140023466407*^9, 
   3.918140890444085*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"9536e863-0767-415f-afd0-501e6aba2dbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Short", "[", 
   RowBox[{"setosa", "=", 
    RowBox[{"Cases", "[", 
     RowBox[{"iris", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<setosa\>\"", ",", "__"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Short", "[", 
   RowBox[{"versi", "=", 
    RowBox[{"Cases", "[", 
     RowBox[{"iris", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<versicolor\>\"", ",", "__"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Short", "[", 
   RowBox[{"virgin", "=", 
    RowBox[{"Cases", "[", 
     RowBox[{"iris", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<virginica\>\"", ",", "__"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Column", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"setosa", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#1"}], "]"}], "]"}], ",", 
          RowBox[{"setosa", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#2"}], "]"}], "]"}], ",", 
          RowBox[{"setosa", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#3"}], "]"}], "]"}], ",", 
          RowBox[{"setosa", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#4"}], "]"}], "]"}]}], "}"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotRange", "->", "Automatic"}], ",", 
        RowBox[{"FrameTicks", "->", "True"}], ",", 
        RowBox[{"ChartStyle", "->", "\"\<Rainbow\>\""}], ",", 
        RowBox[{"PlotLabel", "->", "\"\<Setosa\>\""}], ",", 
        RowBox[{"ChartLegends", "->", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
             "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], ",", 
           "Bottom"}], "]"}]}], ",", 
        RowBox[{"GridLines", "->", "Automatic"}]}], "]"}], ",", 
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"versi", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#1"}], "]"}], "]"}], ",", 
          RowBox[{"versi", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#2"}], "]"}], "]"}], ",", 
          RowBox[{"versi", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#3"}], "]"}], "]"}], ",", 
          RowBox[{"versi", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#4"}], "]"}], "]"}]}], "}"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotRange", "->", "Automatic"}], ",", 
        RowBox[{"FrameTicks", "->", "True"}], ",", 
        RowBox[{"ChartStyle", "->", "\"\<Rainbow\>\""}], ",", 
        RowBox[{"PlotLabel", "->", "\"\<Versicolor\>\""}], ",", 
        RowBox[{"ChartLegends", "->", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
             "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], ",", 
           "Bottom"}], "]"}]}], ",", 
        RowBox[{"GridLines", "->", "Automatic"}]}], "]"}], ",", 
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"virgin", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#1"}], "]"}], "]"}], ",", 
          RowBox[{"virgin", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#2"}], "]"}], "]"}], ",", 
          RowBox[{"virgin", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#3"}], "]"}], "]"}], ",", 
          RowBox[{"virgin", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#4"}], "]"}], "]"}]}], "}"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotRange", "->", "Automatic"}], ",", 
        RowBox[{"FrameTicks", "->", "True"}], ",", 
        RowBox[{"ChartStyle", "->", "\"\<Rainbow\>\""}], ",", 
        RowBox[{"PlotLabel", "->", "\"\<Virginica\>\""}], ",", 
        RowBox[{"ChartLegends", "->", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
             "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], ",", 
           "Bottom"}], "]"}]}], ",", 
        RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]}], "\n", "}"}]}], 
   "&"}], "[", 
  RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.914529835680474*^9, 3.914529937263362*^9}, {
  3.9181409834268093`*^9, 3.9181410182043543`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"cefd2ee3-e1f5-4ea6-ad60-f1e2ecc66164"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{
          Opacity[0], 
          
          PointBox[{{0.5097251739635205, -0.18500000000000003`}, {
           4.4902748260364795`, 6.085}}]}, {
          CapForm[None], 
          Directive[
           RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
            Directive[
             RGBColor[0.982864, 0.7431472, 0.3262672]], {{
              Directive[
               RGBColor[0.471412, 0.108766, 0.527016]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{0.7312248802544821, 5.2}, {1.268775119745518,
                     5.2}, {1.268775119745518, 4.8}, {0.7312248802544821, 
                    4.8}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{1.268775119745518, 5.}, {0.7312248802544821, 
                    5.}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1., 4.8}, {1., 4.3}}, {{1., 5.2}, {1., 
                    5.8}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1.134387559872759, 4.3}, {0.865612440127241, 
                    4.3}}, {{1.134387559872759, 5.8}, {0.865612440127241, 
                    5.8}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "5.8`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "5.2`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "4.8`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.3`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 5.8}, {
                    Style["75%", Bold], 5.2}, {
                    Style["median", Bold], 5.}, {
                    Style["25%", Bold], 4.8}, {
                    Style["min", Bold], 4.3}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{1.731224880254482, 3.7}, {2.268775119745518, 
                    3.7}, {2.268775119745518, 3.2}, {1.731224880254482, 
                    3.2}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 2.3}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{2.268775119745518, 3.4}, {1.7312248802544818`, 
                    3.4}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2., 3.2}, {2., 2.9}}, {{2., 3.7}, {2., 
                    4.4}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2.134387559872759, 2.9}, {1.865612440127241, 
                    2.9}}, {{2.134387559872759, 4.4}, {1.865612440127241, 
                    4.4}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "4.4`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "3.7`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "3.4`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "3.2`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "2.3`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 4.4}, {
                    Style["75%", Bold], 3.7}, {
                    Style["median", Bold], 3.4}, {
                    Style["25%", Bold], 3.2}, {
                    Style["min", Bold], 2.3}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`]], 
              
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{2.7312248802544823`, 1.6}, {
                    3.268775119745518, 1.6}, {3.268775119745518, 1.4}, {
                    2.7312248802544823`, 1.4}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    3., 1.}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{3.268775119745518, 1.5}, {2.731224880254482, 
                    1.5}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3., 1.4}, {3., 1.1}}, {{3., 1.6}, {3., 
                    1.9}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3.134387559872759, 1.1}, {2.865612440127241, 
                    1.1}}, {{3.134387559872759, 1.9}, {2.865612440127241, 
                    1.9}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "1.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "1.6`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "1.5`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "1.4`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}},
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 1.9}, {
                    Style["75%", Bold], 1.6}, {
                    Style["median", Bold], 1.5}, {
                    Style["25%", Bold], 1.4}, {
                    Style["min", Bold], 1.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.857359, 0.131106, 0.132128]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{3.7312248802544823`, 0.3}, {
                    4.268775119745518, 0.3}, {4.268775119745518, 0.2}, {
                    3.7312248802544823`, 0.2}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    4., 0.5}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {4., 0.6}]}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{4.268775119745518, 0.2}, {3.731224880254482, 
                    0.2}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4., 0.2}, {4., 0.1}}, {{4., 0.3}, {4., 
                    0.4}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4.134387559872759, 0.1}, {3.865612440127241, 
                    0.1}}, {{4.134387559872759, 0.4}, {3.865612440127241, 
                    0.4}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "0.6`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "0.3`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "0.2`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "0.2`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "0.1`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 0.6}, {
                    Style["75%", Bold], 0.3}, {
                    Style["median", Bold], 0.2}, {
                    Style["25%", Bold], 0.2}, {
                    Style["min", Bold], 0.1}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
        DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, 
         AxesOrigin -> {0.5543473682799303, -0.18500000000000003`}, Frame -> 
         True, FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{True, True}, {{{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{
             1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
         GridLines -> Automatic, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], PlotLabel -> 
         FormBox["\"Setosa\"", TraditionalForm], PlotRange -> Automatic, 
         PlotRangePadding -> {{
            Scaled[0.05], 
            Scaled[0.05]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {{{1., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
            0.7312248802544821, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
            4.268775119745518, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
           Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"SepalLength\"", "\"SepalWidth\"", "\"PetalLength\"", 
           "\"PetalWidth\""}, "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.471412, 0.108766, 0.527016]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.471412, 0.108766, 0.527016]|>, 
                    "RGBColorSwatchTemplate"], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]|>, 
                    "RGBColorSwatchTemplate"], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]|>, 
                    "RGBColorSwatchTemplate"], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.857359, 0.131106, 0.132128]|>, 
                    "RGBColorSwatchTemplate"], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{
          Opacity[0], 
          PointBox[{{0.5097251739635205, 0.7}, {4.4902748260364795`, 7.3}}]}, {
          CapForm[None], 
          Directive[
           RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
            Directive[
             RGBColor[0.982864, 0.7431472, 0.3262672]], {{
              Directive[
               RGBColor[0.471412, 0.108766, 0.527016]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{0.7312248802544821, 6.3}, {1.268775119745518,
                     6.3}, {1.268775119745518, 5.6}, {0.7312248802544821, 
                    5.6}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{1.268775119745518, 5.9}, {0.7312248802544821, 
                    5.9}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1., 5.6}, {1., 4.9}}, {{1., 6.3}, {1., 
                    7.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1.134387559872759, 4.9}, {0.865612440127241, 
                    4.9}}, {{1.134387559872759, 7.}, {0.865612440127241, 
                    7.}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], "7.`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "6.3`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.9`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "5.6`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.9`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 7.}, {
                    Style["75%", Bold], 6.3}, {
                    Style["median", Bold], 5.9}, {
                    Style["25%", Bold], 5.6}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{1.731224880254482, 3.}, {2.268775119745518, 
                    3.}, {2.268775119745518, 2.5}, {1.731224880254482, 
                    2.5}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{2.268775119745518, 2.8}, {1.7312248802544818`, 
                    2.8}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    LineBox[{{{2., 2.5}, {2., 2.}}, {{2., 3.}, {2., 3.4}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2.134387559872759, 2.}, {1.865612440127241, 
                    2.}}, {{2.134387559872759, 3.4}, {1.865612440127241, 
                    3.4}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "3.4`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], "3.`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "2.8`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "2.5`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "2.`"}},
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 3.4}, {
                    Style["75%", Bold], 3.}, {
                    Style["median", Bold], 2.8}, {
                    Style["25%", Bold], 2.5}, {
                    Style["min", Bold], 2.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`]], 
              
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{2.7312248802544823`, 4.6}, {
                    3.268775119745518, 4.6}, {3.268775119745518, 4.}, {
                    2.7312248802544823`, 4.}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    3., 3.}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{3.268775119745518, 4.35}, {2.731224880254482, 
                    4.35}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3., 4.}, {3., 3.3}}, {{3., 4.6}, {3., 
                    5.1}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3.134387559872759, 3.3}, {2.865612440127241, 
                    3.3}}, {{3.134387559872759, 5.1}, {2.865612440127241, 
                    5.1}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "5.1`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "4.6`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "4.35`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], "4.`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "3.`"}},
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 5.1}, {
                    Style["75%", Bold], 4.6}, {
                    Style["median", Bold], 4.35}, {
                    Style["25%", Bold], 4.}, {
                    Style["min", Bold], 3.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.857359, 0.131106, 0.132128]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{3.7312248802544823`, 1.5}, {
                    4.268775119745518, 1.5}, {4.268775119745518, 1.2}, {
                    3.7312248802544823`, 1.2}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{4.268775119745518, 1.3}, {3.731224880254482, 
                    1.3}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4., 1.2}, {4., 1.}}, {{4., 1.5}, {4., 
                    1.8}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4.134387559872759, 1.}, {3.865612440127241, 
                    1.}}, {{4.134387559872759, 1.8}, {3.865612440127241, 
                    1.8}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "1.8`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "1.5`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "1.3`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "1.2`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}},
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 1.8}, {
                    Style["75%", Bold], 1.5}, {
                    Style["median", Bold], 1.3}, {
                    Style["25%", Bold], 1.2}, {
                    Style["min", Bold], 1.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
        DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0.5543473682799303, 0.7}, 
         Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{True, True}, {{{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{
             1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
         GridLines -> Automatic, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], PlotLabel -> 
         FormBox["\"Versicolor\"", TraditionalForm], PlotRange -> Automatic, 
         PlotRangePadding -> {{
            Scaled[0.05], 
            Scaled[0.05]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {{{1., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
            0.7312248802544821, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
            4.268775119745518, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
           Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"SepalLength\"", "\"SepalWidth\"", "\"PetalLength\"", 
           "\"PetalWidth\""}, "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.471412, 0.108766, 0.527016]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.471412, 0.108766, 0.527016]|>, 
                    "RGBColorSwatchTemplate"], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]|>, 
                    "RGBColorSwatchTemplate"], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]|>, 
                    "RGBColorSwatchTemplate"], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.857359, 0.131106, 0.132128]|>, 
                    "RGBColorSwatchTemplate"], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{
          Opacity[0], 
          
          PointBox[{{0.5097251739635205, 1.075}, {4.4902748260364795`, 
           8.225}}]}, {
          CapForm[None], 
          Directive[
           RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
            Directive[
             RGBColor[0.982864, 0.7431472, 0.3262672]], {{
              Directive[
               RGBColor[0.471412, 0.108766, 0.527016]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{0.7312248802544821, 6.9}, {1.268775119745518,
                     6.9}, {1.268775119745518, 6.2}, {0.7312248802544821, 
                    6.2}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 4.9}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{1.268775119745518, 6.5}, {0.7312248802544821, 
                    6.5}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1., 6.2}, {1., 5.6}}, {{1., 6.9}, {1., 
                    7.9}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1.134387559872759, 5.6}, {0.865612440127241, 
                    5.6}}, {{1.134387559872759, 7.9}, {0.865612440127241, 
                    7.9}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "7.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "6.9`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "6.5`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "6.2`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.9`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 7.9}, {
                    Style["75%", Bold], 6.9}, {
                    Style["median", Bold], 6.5}, {
                    Style["25%", Bold], 6.2}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{1.731224880254482, 3.2}, {2.268775119745518, 
                    3.2}, {2.268775119745518, 2.8}, {1.731224880254482, 
                    2.8}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{2.268775119745518, 3.}, {1.7312248802544818`, 
                    3.}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2., 2.8}, {2., 2.2}}, {{2., 3.2}, {2., 
                    3.8}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2.134387559872759, 2.2}, {1.865612440127241, 
                    2.2}}, {{2.134387559872759, 3.8}, {1.865612440127241, 
                    3.8}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "3.8`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "3.2`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "3.`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "2.8`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "2.2`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 3.8}, {
                    Style["75%", Bold], 3.2}, {
                    Style["median", Bold], 3.}, {
                    Style["25%", Bold], 2.8}, {
                    Style["min", Bold], 2.2}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`]], 
              
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{2.7312248802544823`, 5.9}, {
                    3.268775119745518, 5.9}, {3.268775119745518, 5.1}, {
                    2.7312248802544823`, 5.1}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{3.268775119745518, 5.55}, {2.731224880254482, 
                    5.55}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3., 5.1}, {3., 4.5}}, {{3., 5.9}, {3., 
                    6.9}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3.134387559872759, 4.5}, {2.865612440127241, 
                    4.5}}, {{3.134387559872759, 6.9}, {2.865612440127241, 
                    6.9}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "6.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "5.9`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.55`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "5.1`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.5`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 6.9}, {
                    Style["75%", Bold], 5.9}, {
                    Style["median", Bold], 5.55}, {
                    Style["25%", Bold], 5.1}, {
                    Style["min", Bold], 4.5}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.857359, 0.131106, 0.132128]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{3.7312248802544823`, 2.3}, {
                    4.268775119745518, 2.3}, {4.268775119745518, 1.8}, {
                    3.7312248802544823`, 1.8}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{4.268775119745518, 2.}, {3.731224880254482, 
                    2.}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4., 1.8}, {4., 1.4}}, {{4., 2.3}, {4., 
                    2.5}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4.134387559872759, 1.4}, {3.865612440127241, 
                    1.4}}, {{4.134387559872759, 2.5}, {3.865612440127241, 
                    2.5}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "2.5`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "2.3`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "2.`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "1.8`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "1.4`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 2.5}, {
                    Style["75%", Bold], 2.3}, {
                    Style["median", Bold], 2.}, {
                    Style["25%", Bold], 1.8}, {
                    Style["min", Bold], 1.4}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
        DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, 
         AxesOrigin -> {0.5543473682799303, 1.075}, Frame -> True, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{True, True}, {{{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{
             1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
         GridLines -> Automatic, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], PlotLabel -> 
         FormBox["\"Virginica\"", TraditionalForm], PlotRange -> Automatic, 
         PlotRangePadding -> {{
            Scaled[0.05], 
            Scaled[0.05]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {{{1., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
            0.7312248802544821, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
            4.268775119745518, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
           Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"SepalLength\"", "\"SepalWidth\"", "\"PetalLength\"", 
           "\"PetalWidth\""}, "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.471412, 0.108766, 0.527016]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.471412, 0.108766, 0.527016]|>, 
                    "RGBColorSwatchTemplate"], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]|>, 
                    "RGBColorSwatchTemplate"], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]|>, 
                    "RGBColorSwatchTemplate"], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.857359, 0.131106, 0.132128]|>, 
                    "RGBColorSwatchTemplate"], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.9145299391319857`*^9, 3.914530995224827*^9, 
  3.918140023679202*^9, 3.918141019927528*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"ee983b2b-f53c-46a6-80ab-a8f8f56cced6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"setosa", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"versi", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"virgin", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"FrameTicks", "->", "All"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"AspectRatio", "->", "1"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal length (cm)\>\"", ",", 
        RowBox[{"FontSize", "->", "20"}]}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal width (cm)\>\"", ",", 
        RowBox[{"FontSize", "->", "20"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Setosa\>\"", ",", "\"\<Versicolor\>\"", ",", "\"\<Virginica\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914530417811756*^9, 3.914530451310263*^9}, {
  3.914530617579026*^9, 3.914530619944958*^9}, {3.9145306710571837`*^9, 
  3.914530695660663*^9}, {3.914530784123816*^9, 3.914530784873693*^9}, {
  3.918141079791707*^9, 3.9181410850485888`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"39ac2b65-2820-46cb-9a54-22de59ebea1a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{
          TagBox[{
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]], 
            PointBox[CompressedData["
1:eJxtUtsNwjAMjPpDSwOkD8o3K8ACmYERkOCXeWAmuhO0vnMUt5ai6OzzxbF9
vr9uj8I5d/mf6X7O1kc3m4+f92QdcBnH72Qt/FUUfgt/CV4PzPxjvM52UL7g
WvnEwm+AN/o+9akn9w68TvOJWa/gxuATcIDuoO+u15v6Qb749xonzvNrjbPe
vF/e5G8X/2F/WL/tl+jY+mw8zYv6tp9WT+oJ0B3gD4t5sB7qk2/3J9+HNA/+
f/2/HncLXmHmVC34dh52H2yc88j7k/aL+pzPD0V++78=
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0]], 
            PointBox[CompressedData["
1:eJx1UtsNwjAMDKW8Pwlpm/LDCrBAZmAEJPhlHpgJdoI2d0Z2hKXKOud6ti85
XO7na+WcO36/IefYp+djiBVyZ3Cf3q8hlinzQ7qNUQFH4Dl4QfBpjA54Db0t
6lPUI/AC/3vwZtD3yA71BpjztKhPoNeKXsbB6EfZh+fUy7xG+mee1Se/lnno
F/vb/cm35/RbzxvNPL3xNxb76/0Cci33Rb8ttvtqP2fIuz/9NoWf+r6rwl/2
px/EnJf+2PvQ+/hCX9/Xrx+x9se+Dy/z2Pf7AR6E+Q8=
             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             RGBColor[0, 1, 0]], 
            PointBox[CompressedData["
1:eJxtUtsNwjAMDKiUFhA/SG36RKwAC2QGRkCCX+aBmWAnaM8+FBdLlXWx7/yo
D5f7+Tp3zh2/3+BPo1XhNtoqAJfh+RhsIe9tcKNlQfPhl/JeM478nhg6O8GJ
8Dry36/BasaBW/Eb6kMnF1+xP+g0rAdeYeqV0ldq+Pmkf/B7yd8SwyeS54U/
E99QD7yC9WK9lPvT/nV+3b/Or3rAnnx4b/ZbmXqtiXdm/j3ns/z4Hn71dH6d
5/89rKmHvIz7ivtpGNf5Fdu4vUf93/F+7P7qSX96D///tzf9l4x/AMFQF9k=

             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                PointSize[0.009166666666666668], 
                AbsoluteThickness[2], 
                RGBColor[0, 0, 1]], 
               Point[CompressedData["
1:eJxtUtsNwjAMjPpDSwOkD8o3K8ACmYERkOCXeWAmuhO0vnMUt5ai6OzzxbF9
vr9uj8I5d/mf6X7O1kc3m4+f92QdcBnH72Qt/FUUfgt/CV4PzPxjvM52UL7g
WvnEwm+AN/o+9akn9w68TvOJWa/gxuATcIDuoO+u15v6Qb749xonzvNrjbPe
vF/e5G8X/2F/WL/tl+jY+mw8zYv6tp9WT+oJ0B3gD4t5sB7qk2/3J9+HNA/+
f/2/HncLXmHmVC34dh52H2yc88j7k/aL+pzPD0V++78=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[0.009166666666666668], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0]], 
               Point[CompressedData["
1:eJx1UtsNwjAMDKW8Pwlpm/LDCrBAZmAEJPhlHpgJdoI2d0Z2hKXKOud6ti85
XO7na+WcO36/IefYp+djiBVyZ3Cf3q8hlinzQ7qNUQFH4Dl4QfBpjA54Db0t
6lPUI/AC/3vwZtD3yA71BpjztKhPoNeKXsbB6EfZh+fUy7xG+mee1Se/lnno
F/vb/cm35/RbzxvNPL3xNxb76/0Cci33Rb8ttvtqP2fIuz/9NoWf+r6rwl/2
px/EnJf+2PvQ+/hCX9/Xrx+x9se+Dy/z2Pf7AR6E+Q8=
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                PointSize[0.009166666666666668], 
                AbsoluteThickness[2], 
                RGBColor[0, 1, 0]], 
               Point[CompressedData["
1:eJxtUtsNwjAMDKiUFhA/SG36RKwAC2QGRkCCX+aBmWAnaM8+FBdLlXWx7/yo
D5f7+Tp3zh2/3+BPo1XhNtoqAJfh+RhsIe9tcKNlQfPhl/JeM478nhg6O8GJ
8Dry36/BasaBW/Eb6kMnF1+xP+g0rAdeYeqV0ldq+Pmkf/B7yd8SwyeS54U/
E99QD7yC9WK9lPvT/nV+3b/Or3rAnnx4b/ZbmXqtiXdm/j3ns/z4Hn71dH6d
5/89rKmHvIz7ivtpGNf5Fdu4vUf93/F+7P7qSX96D///tzf9l4x/AMFQF9k=

                "]]}, "Charting`Private`Tag#3"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{4.225000000000009, 7.9}, {0, 4.4}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {4.225000000000009, 0}, 
              "ImageSize" -> {360, 360}, "Axes" -> {True, True}, 
              "LabelStyle" -> {}, "AspectRatio" -> 1, "DefaultStyle" -> {
                Directive[
                 PointSize[0.009166666666666668], 
                 AbsoluteThickness[2], 
                 RGBColor[0, 1, 0]], 
                Directive[
                 PointSize[0.009166666666666668], 
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0]], 
                Directive[
                 PointSize[0.009166666666666668], 
                 AbsoluteThickness[2], 
                 RGBColor[0, 0, 1]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> Identity, 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{4.225000000000009, 7.9}, {0, 4.4}}, 
             "Frame" -> {{True, True}, {True, True}}, 
             "AxesOrigin" -> {4.225000000000009, 0}, 
             "ImageSize" -> {360, 360}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> 1, "DefaultStyle" -> {
               Directive[
                PointSize[0.009166666666666668], 
                AbsoluteThickness[2], 
                RGBColor[0, 1, 0]], 
               Directive[
                PointSize[0.009166666666666668], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0]], 
               Directive[
                PointSize[0.009166666666666668], 
                AbsoluteThickness[2], 
                RGBColor[0, 0, 1]]}, 
             "HighlightLabelingFunctions" -> <|
              "CoordinatesToolOptions" -> Identity, 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]], 
        Selectable -> False]}, 
      Annotation[{{
         Annotation[{
           Directive[
            PointSize[0.009166666666666668], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]], 
           Point[CompressedData["
1:eJxtUtsNwjAMjPpDSwOkD8o3K8ACmYERkOCXeWAmuhO0vnMUt5ai6OzzxbF9
vr9uj8I5d/mf6X7O1kc3m4+f92QdcBnH72Qt/FUUfgt/CV4PzPxjvM52UL7g
WvnEwm+AN/o+9akn9w68TvOJWa/gxuATcIDuoO+u15v6Qb749xonzvNrjbPe
vF/e5G8X/2F/WL/tl+jY+mw8zYv6tp9WT+oJ0B3gD4t5sB7qk2/3J9+HNA/+
f/2/HncLXmHmVC34dh52H2yc88j7k/aL+pzPD0V++78=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            PointSize[0.009166666666666668], 
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0]], 
           Point[CompressedData["
1:eJx1UtsNwjAMDKW8Pwlpm/LDCrBAZmAEJPhlHpgJdoI2d0Z2hKXKOud6ti85
XO7na+WcO36/IefYp+djiBVyZ3Cf3q8hlinzQ7qNUQFH4Dl4QfBpjA54Db0t
6lPUI/AC/3vwZtD3yA71BpjztKhPoNeKXsbB6EfZh+fUy7xG+mee1Se/lnno
F/vb/cm35/RbzxvNPL3xNxb76/0Cci33Rb8ttvtqP2fIuz/9NoWf+r6rwl/2
px/EnJf+2PvQ+/hCX9/Xrx+x9se+Dy/z2Pf7AR6E+Q8=
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            PointSize[0.009166666666666668], 
            AbsoluteThickness[2], 
            RGBColor[0, 1, 0]], 
           Point[CompressedData["
1:eJxtUtsNwjAMDKiUFhA/SG36RKwAC2QGRkCCX+aBmWAnaM8+FBdLlXWx7/yo
D5f7+Tp3zh2/3+BPo1XhNtoqAJfh+RhsIe9tcKNlQfPhl/JeM478nhg6O8GJ
8Dry36/BasaBW/Eb6kMnF1+xP+g0rAdeYeqV0ldq+Pmkf/B7yd8SwyeS54U/
E99QD7yC9WK9lPvT/nV+3b/Or3rAnnx4b/ZbmXqtiXdm/j3ns/z4Hn71dH6d
5/89rKmHvIz7ivtpGNf5Fdu4vUf93/F+7P7qSX96D///tzf9l4x/AMFQF9k=

            "]]}, "Charting`Private`Tag#3"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{4.225000000000009, 7.9}, {0, 4.4}}, 
          "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {4.225000000000009, 0}, "ImageSize" -> {360, 360}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 1, 
          "DefaultStyle" -> {
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             RGBColor[0, 1, 0]], 
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             RGBColor[1, 0, 0]], 
            Directive[
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> 1, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {4.225000000000009, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          StyleBox[
          "\"Sepal width (cm)\"", FontSize -> 20, StripOnInput -> False], 
          HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox[
          StyleBox[
          "\"Sepal length (cm)\"", FontSize -> 20, StripOnInput -> False], 
          HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{All, All}, {All, All}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
       "CurrentPoint", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{4.225000000000009, 7.9}, {0, 4.4}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Setosa\"", "\"Versicolor\"", "\"Virginica\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.914530452916685*^9, 3.914530623179101*^9, {3.914530691362424*^9, 
   3.914530696193912*^9}, 3.914530785609484*^9, 3.9145309953520393`*^9, 
   3.918140023955258*^9, 3.918141085967143*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"d03a798d-bc75-47e4-8008-b685717e2d46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"setosa", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"versi", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"virgin", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Ticks", "->", "All"}], ",", 
   RowBox[{"AspectRatio", "->", "1"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal length cm\>\"", ",", 
        RowBox[{"FontSize", "->", "13"}]}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal width cm\>\"", ",", 
        RowBox[{"FontSize", "->", "13"}]}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Petal Length cm\>\"", ",", 
        RowBox[{"FontSize", "->", "13"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Setosa\>\"", ",", "\"\<Versicolor\>\"", ",", "\"\<Virginica\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914531000883595*^9, 3.914531126839417*^9}, {
  3.918141105777041*^9, 3.918141117262837*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"320bc7d0-78ab-4e7e-92ca-fafd13e5843c"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{{{{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0, 0, 1]], 
        Point3DBox[CompressedData["
1:eJyFU0FuwjAQjOAABdomIYRzv9A+IH4DT0AqV94Db2r/0gqEiJCqQmZnI4+L
ulJk7dgZr2d2X9bb1fsgy7LX6ze8fpsuqpB1MQvIT81+d4u54WPHPz9uUQbs
PwTkxwb7peVj++/cYK0MV/5FeOvi2daL8yCf+nnyECc/eArDR0n9Wg/vxfro
OP6fOz/2W8dVB+CF4zj/bfjS8Nz4DqZbHViv1kMdYj1TX8iD/El0qxz/m3+a
nFcdYh9nhn8J/8R5VDfs/7hfsT5t4iNx3Ne/l/UQ137QPlS/6Dtx1UH5wZtL
39bGk//bV3wX66Hv5OG76G/Mo3PR95X2g9Yf69zzIy+NdyD3Fsn8Kg91076i
v/fmQs/HPL1f8Ryl88h62G88/wuSj6Gc
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[1, 0, 0]], 
        Point3DBox[CompressedData["
1:eJx1VFtywjAMdEMKtE0hr5qQ9IcrwAVyBo7ADP3teeBM7Z3aRLvKSGk9w2i8
suXVasPh8nm+JiGE4+9vEbje+/ttWE/999ewSuz3iss54h3OrbGvkI/9x7gS
7HPEFvgSscT9qDjrn8a1B/7s+FTILzQvsQW+cvVr3HtEfot3asSAmOHcDvs1
7pN/g/yD9iXvNPoueQoeHZ4htk63Qs/zXavDTvnLuRz3PZ/S1Um1X/bFOQpe
KX+rf676sw519+e9T9ivxELnwr7Yr+Q7rUM+1MfqwDlNOrNf+kdiqnOkD61P
NjNc+LzOdLY+aZz+9NPbbF6W54vjOc2dulmfJ//6gXMnf86F8yJOHWydxtWZ
fGV1Y51a+djvK6oO/C6oP+t73Pp/8u3fPuGcU1cvuv+NvP8B+NByEA==
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0, 1, 0]], 
        Point3DBox[CompressedData["
1:eJx9U1tOAzEMXKBst4D4YNNtun0grgAXyBk4AlL72/PAmeid2q5nZmWjEimy
4kzG9th5+zp87m6rqno/77vz/hjWsuyH9VCqYeVi/kX5+b6se9wn2DVwDe4X
hTxmp8B1wPXCk9fut/LbuQdfC/8E9gXvNuJnvOPvZfXCk9/8a9gn8GflY3Fm
qsvOS9VrPHPYlfI024G3C3mmUF99hX8m/qiP59/i/bPqpN/sBHzML+N8o3x4
z7jMm/1hntTdx60Vl3pTH4/vNT/kp/6My/zMn8VvvG3oTyN+6ub1HPnjXBl+
E/DU5VV6+n785ff/og7zn6W/zyfOcw7/4lF4xrV3Y9+pk6+rVR+Jt/M8zEUT
+FfBn67+a845+8V//X9/x7m1c1K98V/EOSee80B9WBfjez1TOQEwmZyf
         "]]}}, {}, {}}, {}}, {DisplayFunction -> Identity, Ticks -> {{{4.5, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"4.5\"", ShowStringCharacters -> False], 
            4.5`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {
        5., 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"5.0\"", ShowStringCharacters -> False], 
            5.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {5.5, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"5.5\"", ShowStringCharacters -> False], 
            5.5`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {
        6., 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"6.0\"", ShowStringCharacters -> False], 
            6.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {6.5, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"6.5\"", ShowStringCharacters -> False], 
            6.5`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {
        7., 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"7.0\"", ShowStringCharacters -> False], 
            7.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {7.5, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"7.5\"", ShowStringCharacters -> False], 
            7.5`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {
        4., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.1, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.2, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.3, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.4, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.6, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.7, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.8, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.9, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.1, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.2, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.3, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.4, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.6, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.7, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.8, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.9, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.1, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.2, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.3, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.4, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.6, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.7, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.8, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.9, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.1, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.2, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.3, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.4, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.6, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.7, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.8, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.9, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {8., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
        2., 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"2.0\"", ShowStringCharacters -> False], 
            2.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.5, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"2.5\"", ShowStringCharacters -> False], 
            2.5`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {
        3., 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"3.0\"", ShowStringCharacters -> False], 
            3.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {3.5, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"3.5\"", ShowStringCharacters -> False], 
            3.5`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {
        4., 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"4.0\"", ShowStringCharacters -> False], 
            4.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.1, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.2, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.3, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.4, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.6, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.7, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.8, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.9, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.1, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.2, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.3, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.4, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.6, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.7, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.8, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.9, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.1, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.2, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.3, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.4, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.5, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
        0., 
         FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
         FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
         FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
         FormBox["6", TraditionalForm], {0.01, 0.}}, {0.5, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {1., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.5, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.5, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.5, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.5, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.5, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.5, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.5, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {8., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}, 
     FaceGrids -> NCache[{{{0, 0, -1}, {{4, 5, 6, 7, 8}, {2, 
           Rational[5, 2], 3, 
           Rational[7, 2], 4, 
           Rational[9, 2]}}}, {{0, 1, 0}, {{4, 5, 6, 7, 8}, {0, 2, 4, 6, 
         8}}}, {{-1, 0, 0}, {{2, 
           Rational[5, 2], 3, 
           Rational[7, 2], 4, 
           Rational[9, 2]}, {0, 2, 4, 6, 8}}}}, {{{0, 
         0, -1}, {{4, 5, 6, 7, 8}, {2, 2.5, 3, 3.5, 4, 4.5}}}, {{0, 1, 0}, {{
         4, 5, 6, 7, 8}, {0, 2, 4, 6, 8}}}, {{-1, 0, 
         0}, {{2, 2.5, 3, 3.5, 4, 4.5}, {0, 2, 4, 6, 8}}}}], 
     Ticks -> {All, All, All}, AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox[
         "\"Sepal length cm\"", FontSize -> 13, StripOnInput -> False], 
         HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox[
         "\"Sepal width cm\"", FontSize -> 13, StripOnInput -> False], 
         HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox[
         "\"Petal Length cm\"", FontSize -> 13, StripOnInput -> False], 
         HoldForm], TraditionalForm]}, Axes -> True, 
     PlotRange -> {{4.3, 7.9}, {2., 4.4}, Automatic}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Lighting -> {{"Ambient", 
        GrayLevel[0.5]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{0, 2, 2}]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{2, 2, 2}]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{2, 0, 2}]}}, AspectRatio -> 1, ViewPoint -> {0, -3, 3}, 
     AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, Boxed -> {Left, Bottom, Back},
      FaceGrids -> {{0, 0, -1}, {0, 1, 0}, {-1, 0, 0}}, FaceGridsStyle -> 
     Directive[
       GrayLevel[0.3, 1], 
       AbsoluteDashing[{1, 2}]], BoxRatios -> {1, 1, 0.4}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Setosa\"", "\"Versicolor\"", "\"Virginica\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.914531043851872*^9, 3.914531072814385*^9}, {
   3.9145311091518307`*^9, 3.91453112740105*^9}, 3.918140024281571*^9, {
   3.918141112398645*^9, 3.918141117891387*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"12681a42-97c8-4f39-82a1-b59205e1c4c6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "fisher", "]"}], "\n", 
 RowBox[{"DeleteObject", "[", 
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.918141152071329*^9, 3.918141158252632*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"47b1e6fc-6b5d-4b65-aa9a-bc5d9b734b7c"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowToolbars->"MultipurposeBar",
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{},
TaggingRules-><|
 "TryRealOnly" -> False, "NotebookTemplateVersion" -> 2., "NotebookTemplate" -> 
  True, "GeneratedNotebookOptions" -> {}|>,
CellContext->Notebook,
Magnification:>0.75 Inherited,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"08bed5d6-ee40-40fc-814c-c62242954caa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 368, 6, 52, "Chapter",ExpressionUUID->"05aaea1f-aebc-4bc0-9c65-3cedb1dee26b"],
Cell[CellGroupData[{
Cell[973, 32, 319, 5, 51, "Section",ExpressionUUID->"8b3c9f85-6795-4d78-a8be-aa7f610696fb"],
Cell[CellGroupData[{
Cell[1317, 41, 253, 4, 24, "Input",ExpressionUUID->"67baf88c-6f28-4ae7-b3a8-f29d4c49f6af"],
Cell[1573, 47, 54598, 926, 48, "Output",ExpressionUUID->"917a454f-ec82-4ac8-b663-94cc624f355f"]
}, Open  ]],
Cell[56186, 976, 330, 5, 41, "Subsection",ExpressionUUID->"fcb5cbcb-a85c-493b-ba1e-a5e62b1e308d"],
Cell[56519, 983, 322, 5, 30, "Subsection",ExpressionUUID->"86a3a917-bdcc-4a37-9160-2e26eaa35556"]
}, Closed]],
Cell[CellGroupData[{
Cell[56878, 993, 390, 6, 41, "Section",ExpressionUUID->"1c0647c6-8067-45df-991f-aebdaa947119"],
Cell[CellGroupData[{
Cell[57293, 1003, 249, 4, 24, "Input",ExpressionUUID->"90aa26e2-fea8-48bd-9620-29ec96c988a8"],
Cell[57545, 1009, 18049, 350, 60, "Output",ExpressionUUID->"06e358ec-6223-471e-b93a-84e70319e65c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75631, 1364, 296, 6, 24, "Input",ExpressionUUID->"94981c6f-bc8e-421d-9bfe-4c3e31fc9a69"],
Cell[75930, 1372, 1820, 28, 123, "Output",ExpressionUUID->"670dfbd2-a46f-4633-9835-2cd3b235cbb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77787, 1405, 302, 6, 24, "Input",ExpressionUUID->"de13d540-3ae9-4f8d-b1c5-3ab0127e81d8"],
Cell[78092, 1413, 798, 14, 34, "Output",ExpressionUUID->"a4ca6825-fddf-421c-a4d0-919c7a0a3f93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78927, 1432, 310, 6, 24, "Input",ExpressionUUID->"08788d1b-1873-4359-b4aa-db299050698e"],
Cell[79240, 1440, 938, 17, 29, "Output",ExpressionUUID->"d0a2e03a-86da-4b37-8e4b-fda1d73430d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80215, 1462, 302, 6, 24, "Input",ExpressionUUID->"a61a9066-e9ad-44ac-bb28-4df2335d052b"],
Cell[80520, 1470, 732, 13, 33, "Output",ExpressionUUID->"b7ba3689-f0c9-4f2f-98fc-253a0ec51d7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81289, 1488, 379, 6, 41, "Subsection",ExpressionUUID->"24100989-cb59-4b85-8f4f-f1966cfb53aa"],
Cell[CellGroupData[{
Cell[81693, 1498, 291, 6, 24, "Input",ExpressionUUID->"11048cd4-914b-4a73-86df-c31bb32c6d11"],
Cell[81987, 1506, 138110, 2692, 489, "Output",ExpressionUUID->"a57e6eaf-093d-4419-ad5e-94fb543ead5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220134, 4203, 306, 6, 24, "Input",ExpressionUUID->"8d7378c7-7d84-478d-82c0-67cd6c4604a0"],
Cell[220443, 4211, 875, 14, 44, "Output",ExpressionUUID->"efff1b93-43d7-49ce-adf8-0daf78bded75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221355, 4230, 335, 7, 24, "Input",ExpressionUUID->"9b7ab18e-f819-427f-b4f8-116da9828a11"],
Cell[221693, 4239, 724, 11, 27, "Output",ExpressionUUID->"fffc3ea2-2040-4b68-9c61-67cf03738608"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222454, 4255, 533, 14, 41, "Input",ExpressionUUID->"6c3b0ead-440e-45f5-b7fa-6929ad2210e9"],
Cell[222990, 4271, 1279, 26, 108, "Output",ExpressionUUID->"b4ecc23d-0f06-4961-807b-41f64e4fff8f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[224318, 4303, 520, 8, 41, "Subsection",ExpressionUUID->"8a0262d6-0ee9-44b6-a665-9da73ecaa4de"],
Cell[224841, 4313, 398, 9, 24, "Input",ExpressionUUID->"266e865a-9bd7-4671-b94e-43768bab37c7"],
Cell[CellGroupData[{
Cell[225264, 4326, 303, 5, 24, "Input",ExpressionUUID->"001f2e24-ac8c-4819-a2e2-e2f7179b56b7"],
Cell[225570, 4333, 136219, 2598, 411, "Output",ExpressionUUID->"692bad22-912a-4882-bbde-35c602ddc757"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361826, 6936, 601, 14, 73, "Input",ExpressionUUID->"41ef7c4b-2ee4-4125-b274-25ea1e9d467f"],
Cell[362430, 6952, 121450, 2298, 411, "Output",ExpressionUUID->"47faedfa-cb8b-4a10-84ee-5b232d40239d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483917, 9255, 561, 14, 24, "Input",ExpressionUUID->"61547f77-df5d-4fe8-95f8-730efc897f42"],
Cell[484481, 9271, 177388, 3514, 490, "Output",ExpressionUUID->"da5c81a7-4a55-4341-9728-42b974743341"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661906, 12790, 293, 5, 24, "Input",ExpressionUUID->"d1bf3ac9-b471-4375-802f-361c78cabac8"],
Cell[662202, 12797, 26858, 476, 94, "Output",ExpressionUUID->"a8f74fd0-c153-4796-b0db-3fff9d81e955"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689097, 13278, 637, 15, 73, "Input",ExpressionUUID->"f19f25d7-b8fa-4bde-a732-2ea07148571c"],
Cell[689737, 13295, 42892, 799, 116, "Output",ExpressionUUID->"060679d2-4a7a-4221-a2d9-a569a7089ebd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[732666, 14099, 396, 9, 24, "Input",ExpressionUUID->"aee93259-4409-4060-8c7c-5dc0cad38b39"],
Cell[733065, 14110, 29628, 529, 116, "Output",ExpressionUUID->"312d9e53-c20d-4287-9e30-f03e99cb81b9"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[762754, 14646, 410, 6, 41, "Section",ExpressionUUID->"94dc73c9-5aed-4ada-b5db-6c5f9511f0d0"],
Cell[763167, 14654, 1793, 48, 133, "Input",ExpressionUUID->"80a53af8-83a0-4016-b8b6-fcb6dc068b71"],
Cell[CellGroupData[{
Cell[764985, 14706, 1094, 26, 54, "Input",ExpressionUUID->"2e2a4028-1460-44d6-9f9d-a3f1ddd3f084"],
Cell[766082, 14734, 96965, 1714, 164, "Output",ExpressionUUID->"ca1f44e4-f48d-4116-8886-79b89912d0e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[863084, 16453, 1031, 26, 41, "Input",ExpressionUUID->"37474bc5-14bb-4ff7-82af-047dd0b78d85"],
Cell[864118, 16481, 93633, 1683, 172, "Output",ExpressionUUID->"3248c721-828c-4c31-a78c-78df115e5684"]
}, Open  ]],
Cell[CellGroupData[{
Cell[957788, 18169, 415, 6, 41, "Subsection",ExpressionUUID->"31c67e7a-1722-456c-8899-9fbea6dc12cd"],
Cell[CellGroupData[{
Cell[958228, 18179, 804, 20, 41, "Input",ExpressionUUID->"935bfdb0-9822-4923-9219-24d396ddeb90"],
Cell[959035, 18201, 1516, 33, 41, "Output",ExpressionUUID->"86c9a7e0-88e1-4250-97d1-b4c5f85e3a00"]
}, Open  ]],
Cell[960566, 18237, 1086, 26, 57, "Input",ExpressionUUID->"73c6ee55-42d6-4a73-b358-866ab2636e69"],
Cell[CellGroupData[{
Cell[961677, 18267, 2810, 66, 185, "Input",ExpressionUUID->"384235de-fc0f-402e-8f99-071c5a3ead3b"],
Cell[964490, 18335, 9482, 243, 137, "Output",ExpressionUUID->"cc288607-f8cd-4f6d-8d7b-836a25a53e80"]
}, Open  ]],
Cell[973987, 18581, 1689, 39, 105, "Input",ExpressionUUID->"d96cca26-78cf-42a9-a8ed-6516fed0562a"],
Cell[CellGroupData[{
Cell[975701, 18624, 1128, 28, 73, "Input",ExpressionUUID->"1608254d-8e66-4b9d-837f-51175982c795"],
Cell[976832, 18654, 7638, 195, 328, "Output",ExpressionUUID->"64f5f018-989b-4384-b961-787e5f77012a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[984507, 18854, 394, 9, 24, "Input",ExpressionUUID->"dfd99393-5f7a-433e-9e1e-f2a01da2266f"],
Cell[984904, 18865, 472, 9, 38, "Output",ExpressionUUID->"e41c4150-1696-404d-893a-8591e8b1e1ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[985413, 18879, 781, 23, 41, "Input",ExpressionUUID->"f8545b8b-d52a-44d8-ac8f-f15c03a2d182"],
Cell[986197, 18904, 502, 9, 38, "Output",ExpressionUUID->"0d16a467-db0f-4bc5-addd-d549f6d31a4c"]
}, Open  ]],
Cell[986714, 18916, 2642, 66, 201, "Input",ExpressionUUID->"7241c545-daa7-4beb-9aa7-283cabb558ba"],
Cell[CellGroupData[{
Cell[989381, 18986, 1108, 28, 73, "Input",ExpressionUUID->"186286a1-1c3d-46a1-a4a1-c85f58b23f2f"],
Cell[990492, 19016, 7856, 202, 306, "Output",ExpressionUUID->"f2125682-b4a4-4359-8627-6e41ff3e5be9"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[998409, 19225, 454, 6, 41, "Section",ExpressionUUID->"5ef17200-1422-4184-9595-ba33231e8397"],
Cell[CellGroupData[{
Cell[998888, 19235, 585, 12, 57, "Input",ExpressionUUID->"8e42eb3d-dc0f-4a80-8282-8aed0878d75e"],
Cell[999476, 19249, 120654, 2187, 238, "Output",ExpressionUUID->"b84426dd-1f32-4193-acdc-970e59deb6cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1120167, 21441, 805, 18, 73, "Input",ExpressionUUID->"6fd16f4e-049f-4994-8f6f-07099151fb63"],
Cell[1120975, 21461, 60919, 1205, 212, "Output",ExpressionUUID->"1a4faec0-7b56-4120-8efe-5ea1708aeb30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1181931, 22671, 1042, 28, 73, "Input",ExpressionUUID->"8c8b3411-fe6d-4cb5-af24-5b9d484b6e3c"],
Cell[1182976, 22701, 45865, 930, 94, "Output",ExpressionUUID->"f14c6029-4713-4b42-90da-d8637f4075cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1228878, 23636, 887, 23, 57, "Input",ExpressionUUID->"94d83a2d-7b60-4de3-a03e-b70319200520"],
Cell[1229768, 23661, 44788, 863, 94, "Output",ExpressionUUID->"e171688c-631c-4319-85b4-7b3b0358778a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1274593, 24529, 422, 6, 41, "Subsection",ExpressionUUID->"d9b02035-c544-4e01-87f9-f029ab3c9e57"],
Cell[CellGroupData[{
Cell[1275040, 24539, 394, 9, 24, "Input",ExpressionUUID->"824b1741-f016-47f6-bfb9-277066a23843"],
Cell[1275437, 24550, 1512, 32, 62, "Output",ExpressionUUID->"0e1c4e1c-4e2d-48d0-81ca-800e4a299cc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1276986, 24587, 270, 5, 24, "Input",ExpressionUUID->"48ef22e1-46cd-49c0-a188-bf8ebcfa3c86"],
Cell[1277259, 24594, 3105, 69, 95, "Output",ExpressionUUID->"1e770f4a-6984-4a65-ba04-ea19805261a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1280401, 24668, 444, 10, 24, "Input",ExpressionUUID->"25cc467f-012a-4900-b457-14e7c17b0457"],
Cell[1280848, 24680, 738, 18, 55, "Output",ExpressionUUID->"a90d016c-d39c-4892-8dd3-c077d659c96d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1281635, 24704, 407, 6, 41, "Subsection",ExpressionUUID->"ea8d6d56-8f47-4ded-96de-26401129cad7"],
Cell[CellGroupData[{
Cell[1282067, 24714, 2982, 72, 185, "Input",ExpressionUUID->"8b2d54a3-1e09-40e9-9dae-ff3c96952748"],
Cell[1285052, 24788, 92034, 1817, 280, "Output",ExpressionUUID->"9536e863-0767-415f-afd0-501e6aba2dbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1377123, 26610, 4779, 124, 329, "Input",ExpressionUUID->"cefd2ee3-e1f5-4ea6-ad60-f1e2ecc66164"],
Cell[1381905, 26736, 79503, 1779, 384, "Output",ExpressionUUID->"ee983b2b-f53c-46a6-80ab-a8f8f56cced6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1461445, 28520, 1686, 44, 89, "Input",ExpressionUUID->"39ac2b65-2820-46cb-9a54-22de59ebea1a"],
Cell[1463134, 28566, 21030, 483, 295, "Output",ExpressionUUID->"d03a798d-bc75-47e4-8008-b685717e2d46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1484201, 29054, 1845, 50, 105, "Input",ExpressionUUID->"320bc7d0-78ab-4e7e-92ca-fafd13e5843c"],
Cell[1486049, 29106, 22152, 542, 174, "Output",ExpressionUUID->"12681a42-97c8-4f39-82a1-b59205e1c4c6"]
}, Open  ]],
Cell[1508216, 29651, 341, 7, 41, "Input",ExpressionUUID->"47b1e6fc-6b5d-4b65-aa9a-bc5d9b734b7c"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

