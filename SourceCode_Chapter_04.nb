(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1003945,      20130]
NotebookOptionsPosition[    978410,      19668]
NotebookOutlinePosition[    979023,      19690]
CellTagsIndexPosition[    978980,      19687]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Chapter 4 : Import and Export", "Chapter",
 CellChangeTimes->{{3.908460992291771*^9, 3.908460999780625*^9}, {
  3.908461047000375*^9, 
  3.9084610529807453`*^9}},ExpressionUUID->"05aaea1f-aebc-4bc0-9c65-\
3cedb1dee26b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Short", "[", 
   RowBox[{"$ImportFormats", ",", "4"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "$ImportFormats", "]"}], " ", "--"}], ">", " ", 
    RowBox[{"256", " ", "formats"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.908461650285338*^9, 3.908461686046586*^9}, {
  3.908461740985297*^9, 3.908461741768651*^9}, {3.908461780431264*^9, 
  3.908461823122892*^9}, {3.908461864989373*^9, 3.908461865160205*^9}, {
  3.908462415419102*^9, 3.908462415546964*^9}, {3.915201258360914*^9, 
  3.915201259333647*^9}, {3.9181308300169277`*^9, 3.918130830409359*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"87461ccc-d78b-4f47-b48c-4509d1e28139"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"\<\"3DS\"\>", ",", "\<\"7z\"\>", ",", "\<\"AC\"\>", 
    ",", "\<\"ACO\"\>", ",", "\<\"Affymetrix\"\>", 
    ",", "\<\"AgilentMicroarray\"\>", ",", "\<\"AIFF\"\>", 
    ",", "\<\"ApacheLog\"\>", ",", "\<\"ArcGRID\"\>", ",", "\<\"ASC\"\>", 
    ",", "\<\"ASE\"\>", ",", "\<\"AU\"\>", ",", "\<\"AVI\"\>", 
    ",", "\<\"Base64\"\>", ",", "\<\"BDF\"\>", ",", "\<\"Binary\"\>", 
    ",", "\<\"BioImageFormat\"\>", ",", "\<\"Bit\"\>", ",", "\<\"BLEND\"\>", 
    ",", "\<\"BMP\"\>", ",", 
    RowBox[{"\[LeftSkeleton]", "216", "\[RightSkeleton]"}], 
    ",", "\<\"WAV\"\>", ",", "\<\"Wave64\"\>", ",", "\<\"WDX\"\>", 
    ",", "\<\"WebP\"\>", ",", "\<\"WL\"\>", ",", "\<\"WLNet\"\>", 
    ",", "\<\"WMLF\"\>", ",", "\<\"WXF\"\>", ",", "\<\"X3D\"\>", 
    ",", "\<\"XBM\"\>", ",", "\<\"XGL\"\>", ",", "\<\"XHTML\"\>", 
    ",", "\<\"XHTMLMathML\"\>", ",", "\<\"XLS\"\>", ",", "\<\"XLSX\"\>", 
    ",", "\<\"XML\"\>", ",", "\<\"XPORT\"\>", ",", "\<\"XYZ\"\>", 
    ",", "\<\"ZIP\"\>", ",", "\<\"ZSTD\"\>"}], "}"}],
  Short[#, 4]& ]], "Output",
 CellChangeTimes->{{3.908461652815432*^9, 3.9084616816571693`*^9}, 
   3.908461742158149*^9, {3.908461786982614*^9, 3.908461834602735*^9}, {
   3.90846186553874*^9, 3.90846188269046*^9}, 3.9084624161029997`*^9, 
   3.908462671426011*^9, 3.908627410075636*^9, 3.908628290013683*^9, 
   3.908628555836375*^9, 3.908629180854188*^9, 3.908629888070682*^9, 
   3.908630128304614*^9, 3.908632057400338*^9, 3.908632304229579*^9, 
   3.908716248642881*^9, 3.908716983308198*^9, 3.908717130123764*^9, 
   3.908718406103736*^9, 3.908808100199604*^9, 3.9088081766060534`*^9, 
   3.908808208592083*^9, 3.9088092070265636`*^9, 3.908809400091208*^9, 
   3.908915251553904*^9, 3.908921175217177*^9, 3.9095841948668547`*^9, 
   3.9095844318131638`*^9, 3.909585805766108*^9, 3.909588830597128*^9, 
   3.909590742348762*^9, 3.909591264579556*^9, 3.909591604698995*^9, 
   3.909610593998609*^9, 3.91122354113223*^9, 3.911223821829208*^9, 
   3.915201237006646*^9, 3.915278926704528*^9, 3.918130479503286*^9, 
   3.9181308329279613`*^9},
 CellLabel->
  "Out[1]//Short=",ExpressionUUID->"afb4d10d-0e60-4b77-a5bf-8d6358107c11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", "\"\</Users/macosx/Desktop/Hello_World.txt\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.908462880279984*^9, 3.908462881934963*^9}, 
   3.90846297085355*^9, {3.909842032505078*^9, 3.909842033327261*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"79e40ceb-46c8-4264-b433-b6d9e3ff192e"],

Cell[BoxData["\<\"Hello world!\"\>"], "Output",
 CellChangeTimes->{3.9084629750410957`*^9, 3.908627411634865*^9, 
  3.908628290167221*^9, 3.908628555990724*^9, 3.908629181015717*^9, 
  3.908629888226964*^9, 3.9086301284596853`*^9, 3.908632057608488*^9, 
  3.908632304509398*^9, 3.908716248907444*^9, 3.908716983536188*^9, 
  3.908717130326258*^9, 3.908718406455634*^9, 3.908808100483739*^9, 
  3.908808176769474*^9, 3.908808208864018*^9, 3.908809207312046*^9, 
  3.908809400347638*^9, 3.9089152518121166`*^9, 3.908921175481687*^9, 
  3.909584195131308*^9, 3.909584433957579*^9, 3.909585806122349*^9, 
  3.909588830752939*^9, 3.909590742608186*^9, 3.909591264837555*^9, 
  3.909591604912131*^9, 3.909610594152504*^9, 3.911223541182425*^9, 
  3.911223822086177*^9, 3.918130879221434*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"ac85af5d-46fb-4f2a-80a2-bb636eb0cb59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\</Users/macosx/Desktop/Hello_World.txt\>\"", ",", "\"\<Text\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.908627402021719*^9, 3.90862741886274*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"628248b3-e62f-4937-ab8d-ed846aa30981"],

Cell[BoxData["\<\"Hello world!\"\>"], "Output",
 CellChangeTimes->{3.908627419875778*^9, 3.908628290192118*^9, 
  3.908628556015579*^9, 3.908629181041121*^9, 3.908629888252212*^9, 
  3.908630128486255*^9, 3.908632057612834*^9, 3.908632304515197*^9, 
  3.908716248911195*^9, 3.908716983541069*^9, 3.908717130330442*^9, 
  3.908718406487399*^9, 3.908808100487724*^9, 3.908808176796973*^9, 
  3.908808208868203*^9, 3.90880920732143*^9, 3.908809400351755*^9, 
  3.908915251816545*^9, 3.90892117548618*^9, 3.9095841951353087`*^9, 
  3.909584435344788*^9, 3.909585806127201*^9, 3.909588830779021*^9, 
  3.909590742613049*^9, 3.909591264844697*^9, 3.909591604917535*^9, 
  3.909610594183066*^9, 3.911223541187032*^9, 3.911223822090764*^9, 
  3.918130904880905*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"77129a5c-d69d-4afe-875b-b6d763b34375"]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.1 Importing Files", "Section",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461022708924*^9}, {
  3.908461059053986*^9, 
  3.9084610628916907`*^9}},ExpressionUUID->"8b3c9f85-6795-4d78-a8be-\
aa7f610696fb"],

Cell[CellGroupData[{

Cell["4.1.1 CSV and TSV Files", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461022708924*^9}, {
  3.908461059053986*^9, 
  3.908461077601696*^9}},ExpressionUUID->"fcb5cbcb-a85c-493b-ba1e-\
a5e62b1e308d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\</Users/macosx/Desktop/Grocery_List.csv\>\"", ",", "\"\<CSV\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.908628050467845*^9, 3.908628062559442*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"e5688880-27d5-49de-b9a4-433f7a185d05"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"id\"\>", ",", "\<\"grocery item\"\>", ",", "\<\"price\"\>", 
     ",", "\<\"sold items\"\>", ",", "\<\"sales per day\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "\<\"milk\"\>", ",", "\<\"4$\"\>", ",", "4", 
     ",", "\<\"4 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "\<\"butter\"\>", ",", "\<\"3$\"\>", ",", "2", 
     ",", "\<\"6 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "\<\"garlic\"\>", ",", "\<\"2$\"\>", ",", "1", 
     ",", "\<\"7 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "\<\"apple\"\>", ",", "\<\"2$\"\>", ",", "4", 
     ",", "\<\"1 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "\<\"orange\"\>", ",", "\<\"3$\"\>", ",", "5", 
     ",", "\<\"8 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "\<\"orange juice\"\>", ",", "\<\"5$\"\>", ",", "2", 
     ",", "\<\"8 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "\<\"cheese\"\>", ",", "\<\"5$\"\>", ",", "2", 
     ",", "\<\"6 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "\<\"cookies\"\>", ",", "\<\"2$\"\>", ",", "5", 
     ",", "\<\"9 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "\<\"grapes\"\>", ",", "\<\"4$\"\>", ",", "3", 
     ",", "\<\"21 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "\<\"potato\"\>", ",", "\<\"2$\"\>", ",", "5", 
     ",", "\<\"26 Jun 2019\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9086280636347303`*^9, 3.908628290404563*^9, 
  3.9086285562268753`*^9, 3.908629181252542*^9, 3.908629888465211*^9, 
  3.908630128699533*^9, 3.908632057786318*^9, 3.9086323047572803`*^9, 
  3.908716249158114*^9, 3.908716983803441*^9, 3.908717130530202*^9, 
  3.908718406795426*^9, 3.9088081005784793`*^9, 3.908808177012698*^9, 
  3.908808209065205*^9, 3.9088092075266848`*^9, 3.908809400552226*^9, 
  3.908915252039607*^9, 3.90892117570536*^9, 3.9095841955302353`*^9, 
  3.90958444319868*^9, 3.9095858063467407`*^9, 3.909588831033402*^9, 
  3.9095907428151016`*^9, 3.909591265140121*^9, 3.909591605119063*^9, 
  3.909610594420102*^9, 3.911223541542219*^9, 3.911223822285686*^9, 
  3.918130928009078*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"9aeafda5-1eae-4353-a079-6fc52942be46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"\"\</Users/macosx/Desktop/Grocery_List.csv\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Data\>\"", ",", 
     RowBox[{"5", ";;", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9086281797794933`*^9, 3.908628186327099*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"6bd0417d-8d09-4b81-ac1b-b047e0459a8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "4", ",", "\<\"apple\"\>", ",", "\<\"2$\"\>", ",", "4", 
     ",", "\<\"1 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "\<\"orange\"\>", ",", "\<\"3$\"\>", ",", "5", 
     ",", "\<\"8 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "\<\"orange juice\"\>", ",", "\<\"5$\"\>", ",", "2", 
     ",", "\<\"8 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "\<\"cheese\"\>", ",", "\<\"5$\"\>", ",", "2", 
     ",", "\<\"6 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "\<\"cookies\"\>", ",", "\<\"2$\"\>", ",", "5", 
     ",", "\<\"9 Jun 2019\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "\<\"grapes\"\>", ",", "\<\"4$\"\>", ",", "3", 
     ",", "\<\"21 Jun 2019\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.908628188000373*^9, 3.908628290423164*^9, 
  3.908628556248813*^9, 3.908629181276957*^9, 3.9086298884885798`*^9, 
  3.908630128722932*^9, 3.908632057811651*^9, 3.908632304785974*^9, 
  3.908716249166683*^9, 3.908716983840536*^9, 3.908717130557596*^9, 
  3.908718406816985*^9, 3.908808100596367*^9, 3.9088081770322037`*^9, 
  3.9088082090779047`*^9, 3.908809207545223*^9, 3.908809400567566*^9, 
  3.908915252063455*^9, 3.908921175724999*^9, 3.909584195546978*^9, 
  3.909584443240263*^9, 3.909585806357915*^9, 3.90958883104918*^9, 
  3.909590742828536*^9, 3.909591265160233*^9, 3.909591605134984*^9, 
  3.9096105944340277`*^9, 3.91122354155669*^9, 3.911223822309602*^9, 
  3.918130967598523*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"697ec8d4-c070-4a56-b2a9-98ba58b6b0fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"\"\</Users/macosx/Desktop/Grocery_List.csv\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Data\>\"", ",", "6", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908628257287197*^9, 3.90862827683391*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"1acf1189-4c61-482b-b291-7dde0cbf24d6"],

Cell[BoxData["\<\"orange\"\>"], "Output",
 CellChangeTimes->{{3.9086282641555233`*^9, 3.90862829043075*^9}, 
   3.908628556270759*^9, 3.908629181300274*^9, 3.9086298885122013`*^9, 
   3.90863012874884*^9, 3.908632057819714*^9, 3.908632304810773*^9, 
   3.9087162491928387`*^9, 3.9087169838513203`*^9, 3.908717130565894*^9, 
   3.908718406840685*^9, 3.9088081006009407`*^9, 3.908808177039129*^9, 
   3.908808209084895*^9, 3.908809207555284*^9, 3.908809400574929*^9, 
   3.908915252084876*^9, 3.908921175743697*^9, 3.909584195562814*^9, 
   3.909584443246929*^9, 3.909585806366208*^9, 3.909588831067053*^9, 
   3.909590742841627*^9, 3.909591265171063*^9, 3.9095916051532803`*^9, 
   3.909610594443102*^9, 3.911223541574855*^9, 3.911223822328373*^9, 
   3.918131006027999*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"34298e18-a6a7-408e-ad51-5d567166c191"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Short", "[", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/macosx/Desktop/Color_table.tsv\>\"", ",", "\"\<TSV\>\""}], 
    "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Rest", ",", 
    RowBox[{"to", " ", "view", " ", "the", " ", "remain"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.90862839082856*^9, 3.908628409911928*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b2ec1975-4e7b-402b-95d8-f568c33a0115"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"number\"\>", ",", "\<\"color\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\<\"red\"\>"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "\<\"magenta\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "\<\"brown\"\>"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.90862841495231*^9, 3.908628556280361*^9, 
  3.908629181310705*^9, 3.908629888521895*^9, 3.908630128776379*^9, 
  3.908632057844408*^9, 3.908632304841346*^9, 3.908716249203235*^9, 
  3.908716983888302*^9, 3.908717130592931*^9, 3.908718406866259*^9, 
  3.908808100776376*^9, 3.908808177058737*^9, 3.908808209099018*^9, 
  3.908809207570785*^9, 3.9088094005950947`*^9, 3.908915252100308*^9, 
  3.908921175760079*^9, 3.90958419558013*^9, 3.909584443258667*^9, 
  3.909585806378306*^9, 3.909588831082898*^9, 3.909590742856392*^9, 
  3.909591265189624*^9, 3.90959160516967*^9, 3.909610594454261*^9, 
  3.911223541591446*^9, 3.911223822347308*^9, 3.918131039775154*^9},
 CellLabel->
  "Out[7]//Short=",ExpressionUUID->"e2e785e5-159e-46e7-b3e5-e1c8b7788b28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\</Users/macosx/Desktop/Grocery_List.csv\>\"", ",", "\"\<CSV\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.908628536914307*^9, 3.908628546960129*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"fa22beab-d97c-4883-8154-987bd2b4a2dd"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"id\"\>", "\<\"grocery item\"\>", "\<\"price\"\>", "\<\"sold items\"\
\>", "\<\"sales per day\"\>"},
    {"1", "\<\"milk\"\>", "\<\"4$\"\>", "4", "\<\"4 Jun 2019\"\>"},
    {"2", "\<\"butter\"\>", "\<\"3$\"\>", "2", "\<\"6 Jun 2019\"\>"},
    {"3", "\<\"garlic\"\>", "\<\"2$\"\>", "1", "\<\"7 Jun 2019\"\>"},
    {"4", "\<\"apple\"\>", "\<\"2$\"\>", "4", "\<\"1 Jun 2019\"\>"},
    {"5", "\<\"orange\"\>", "\<\"3$\"\>", "5", "\<\"8 Jun 2019\"\>"},
    {"6", "\<\"orange juice\"\>", "\<\"5$\"\>", "2", "\<\"8 Jun 2019\"\>"},
    {"7", "\<\"cheese\"\>", "\<\"5$\"\>", "2", "\<\"6 Jun 2019\"\>"},
    {"8", "\<\"cookies\"\>", "\<\"2$\"\>", "5", "\<\"9 Jun 2019\"\>"},
    {"9", "\<\"grapes\"\>", "\<\"4$\"\>", "3", "\<\"21 Jun 2019\"\>"},
    {"10", "\<\"potato\"\>", "\<\"2$\"\>", "5", "\<\"26 Jun 2019\"\>"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.908628541651151*^9, 3.908628556307375*^9}, 
   3.908629181338216*^9, 3.908629888551742*^9, 3.908630128783628*^9, 
   3.908632057851811*^9, 3.908632304852398*^9, 3.908716249224593*^9, 
   3.908716983901888*^9, 3.908717130600575*^9, 3.908718406891344*^9, 
   3.908808100789551*^9, 3.908808177065258*^9, 3.908808209104034*^9, 
   3.908809207575841*^9, 3.908809400612565*^9, 3.9089152521174603`*^9, 
   3.908921175776349*^9, 3.909584195596405*^9, 3.909584443263648*^9, 
   3.9095858063896837`*^9, 3.909588831101283*^9, 3.909590742863858*^9, 
   3.909591265209819*^9, 3.909591605186352*^9, 3.9096105944713*^9, 
   3.91122354159897*^9, 3.911223822366427*^9, 3.9181310645592537`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"8f437630-1b72-4331-b6dc-fdf5f441ae25"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.1.2 XLSX Files", "Subsection",
 CellChangeTimes->{{3.908717249975823*^9, 
  3.9087172588160157`*^9}},ExpressionUUID->"86a3a917-bdcc-4a37-9160-\
2e26eaa35556"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", "=", "\"\</Users/macosx/Desktop/Grocery_List.xlsx\>\""}], 
  ";"}], "\n", 
 RowBox[{"Import", "[", 
  RowBox[{"path", ",", "\"\<Data\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.908629134685294*^9, 3.908629166810968*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a7e57711-4f63-4188-9818-9276a9a71adb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"id\"\>", ",", "\<\"grocery item\"\>", ",", "\<\" price\"\>",
       ",", "\<\" sold items\"\>", ",", "\<\"sales per day\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "\<\"milk\"\>", ",", "\<\"4$\"\>", ",", "4.`", 
      ",", "\<\"4-Jun-2019\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.`", ",", "\<\"butter\"\>", ",", "\<\"3$\"\>", ",", "2.`", 
      ",", "\<\"6-Jun-2020\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.`", ",", "\<\"garlic\"\>", ",", "\<\"2$\"\>", ",", "1.`", 
      ",", "\<\"7-Jun-2021\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.`", ",", "\<\"apple\"\>", ",", "\<\"2$\"\>", ",", "4.`", 
      ",", "\<\"1-Jun-2022\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.`", ",", "\<\"orange\"\>", ",", "\<\"3$\"\>", ",", "5.`", 
      ",", "\<\"8-Jun-2023\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.`", ",", "\<\"orange juice\"\>", ",", "\<\"5$\"\>", ",", "2.`", 
      ",", "\<\"8-Jun-2024\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.`", ",", "\<\"cheese\"\>", ",", "\<\"5$\"\>", ",", "2.`", 
      ",", "\<\"6-Jun-2025\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.`", ",", "\<\"cookies\"\>", ",", "\<\"2$\"\>", ",", "5.`", 
      ",", "\<\"9-Jun-2026\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.`", ",", "\<\"grapes\"\>", ",", "\<\"4$\"\>", ",", "3.`", 
      ",", "\<\"21-Jun-2027\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.`", ",", "\<\"potatoe\"\>", ",", "\<\"2$\"\>", ",", "5.`", 
      ",", "\<\"26-Jun-2028\"\>"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.908629181598545*^9, 3.908629585906945*^9, 
  3.908629888749667*^9, 3.908630128981419*^9, 3.908632058059414*^9, 
  3.90863230510882*^9, 3.9087162494511147`*^9, 3.908716984198182*^9, 
  3.908717130801996*^9, 3.908718407210044*^9, 3.908808101034189*^9, 
  3.908808177258243*^9, 3.908808209322118*^9, 3.908809207805727*^9, 
  3.908809400810894*^9, 3.908915252350823*^9, 3.908921175999223*^9, 
  3.909584196282127*^9, 3.909584445830044*^9, 3.909585806648934*^9, 
  3.909588833583262*^9, 3.909590743105645*^9, 3.909591265529463*^9, 
  3.909591605426983*^9, 3.909610594791595*^9, 3.911223542308234*^9, 
  3.911223822600329*^9, 3.9181313078773823`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"584144cc-e30d-424f-b69d-b3b12ab758b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{"path", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<SheetCount\>\"", ",", "\"\<Sheets\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.908630071725119*^9, 3.908630071728509*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ab1f39f5-06cd-4ecf-a30f-506fc0930222"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"{", "\<\"Grocery_List\"\>", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.908630076291015*^9, {3.908630114665925*^9, 3.908630129004504*^9}, 
   3.908632058083014*^9, 3.9086323051406918`*^9, 3.90871624947409*^9, 
   3.908716984231798*^9, 3.908717130827078*^9, 3.908718407291142*^9, 
   3.908808101060967*^9, 3.908808177280658*^9, 3.90880820934442*^9, 
   3.908809207828269*^9, 3.908809400833385*^9, 3.908915252382501*^9, 
   3.908921176021558*^9, 3.909584196349566*^9, 3.909584445876925*^9, 
   3.909585806679081*^9, 3.909588833738937*^9, 3.909590743130567*^9, 
   3.909591265562427*^9, 3.909591605452154*^9, 3.9096105948184023`*^9, 
   3.911223542381917*^9, 3.9112238226289787`*^9, 3.918131315600127*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"868b43fe-af19-4a7e-9b13-885c0c5ce717"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableView", "[", 
  RowBox[{"Import", "[", 
   RowBox[{"path", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Data\>\"", ",", "1"}], "}"}], ",", 
    RowBox[{"CharacterEncoding", "->", "\"\<UTF-8\>\""}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.908630332622552*^9, 3.908630342508683*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"d700d5a8-fac2-4687-bc41-3f5e0b0ca7b5"],

Cell[BoxData[
 TableViewBox[{{
   "id", "grocery item", " price", " sold items", "sales per day"}, {
   1., "milk", "4$", 4., "4-Jun-2019"}, {
   2., "butter", "3$", 2., "6-Jun-2020"}, {
   3., "garlic", "2$", 1., "7-Jun-2021"}, {
   4., "apple", "2$", 4., "1-Jun-2022"}, {
   5., "orange", "3$", 5., "8-Jun-2023"}, {
   6., "orange juice", "5$", 2., "8-Jun-2024"}, {
   7., "cheese", "5$", 2., "6-Jun-2025"}, {
   8., "cookies", "2$", 5., "9-Jun-2026"}, {
   9., "grapes", "4$", 3., "21-Jun-2027"}, {
   10., "potatoe", "2$", 5., "26-Jun-2028"}}, {Number, String},
  ScrollPosition->{0., 16.612762451171875`}]], "Output",
 CellChangeTimes->{{3.9086303361935663`*^9, 3.908630355214625*^9}, 
   3.90863205811033*^9, 3.908632305165377*^9, 3.908716249493701*^9, 
   3.908716984263989*^9, 3.908717130859744*^9, 3.908718407318506*^9, 
   3.908808101079327*^9, 3.908808177304303*^9, 3.908808209359956*^9, 
   3.908809207846542*^9, 3.9088094008493233`*^9, 3.908915252413537*^9, 
   3.908921176044393*^9, 3.909584196366728*^9, 3.909584445893332*^9, 
   3.909585806700609*^9, 3.9095888337582183`*^9, 3.909590743149596*^9, 
   3.909591265588422*^9, 3.90959160547075*^9, 3.909610594841072*^9, 
   3.911223542400922*^9, 3.911223822646291*^9, 3.918131320094351*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"6d50cfc1-6560-42ff-b7b9-007b4194b8fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"file", "=", "\"\</Users/macosx/Desktop/Grocery_List_2.xlsx\>\""}], 
  ";", 
  RowBox[{"Import", "[", 
   RowBox[{"file", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Dataset\>\"", ",", "1"}], "}"}], ",", 
    RowBox[{"HeaderLines", "->", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.908631994385173*^9, 3.908632007120281*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"245baf99-c149-4fd1-ab39-11d28e5b817a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "id" -> 1., "grocery item" -> "milk", " price" -> "4$", " sold items" -> 
        4.|>, <|"id" -> 2., "grocery item" -> "butter", " price" -> "3$", 
        " sold items" -> ""|>, <|
       "id" -> 3., "grocery item" -> "garlic", " price" -> "2$", 
        " sold items" -> 1.|>, <|
       "id" -> 4., "grocery item" -> "apple", " price" -> "2$", " sold items" -> 
        4.|>, <|"id" -> 5., "grocery item" -> "orange", " price" -> "", 
        " sold items" -> 5.|>, <|
       "id" -> 6., "grocery item" -> "orange juice", " price" -> "5$", 
        " sold items" -> 2.|>, <|
       "id" -> 7., "grocery item" -> "cheese", " price" -> "5$", 
        " sold items" -> 2.|>, <|
       "id" -> 8., "grocery item" -> "cookies", " price" -> "", " sold items" -> 
        5.|>, <|"id" -> 9., "grocery item" -> "grapes", " price" -> "4$", 
        " sold items" -> ""|>, <|
       "id" -> 10., "grocery item" -> "potato", " price" -> "2$", 
        " sold items" -> 5.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "grocery item"} -> 1, {All, " price"} -> 
        1, {All, " sold items"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[60], "grocery item" -> 
            TypeSystem`PackageScope`AtomShape[134.4], " price" -> 
            TypeSystem`PackageScope`AtomShape[31.5], " sold items" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 4, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"id", "grocery item", " price", " sold items"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["", "2$", "3$", "4$", "5$"]], 
         TypeSystem`AnyType}], 10], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "grocery item"} -> 1, {All, " price"} -> 
        1, {All, " sold items"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[60], "grocery item" -> 
            TypeSystem`PackageScope`AtomShape[134.4], " price" -> 
            TypeSystem`PackageScope`AtomShape[31.5], " sold items" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 4, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"id", "grocery item", " price", " sold items"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["", "2$", "3$", "4$", "5$"]], 
         TypeSystem`AnyType}], 10], "Path" -> {}, "DisplayedRowCount" -> 10, 
     "DisplayedColumnCount" -> 4, "DataRowCount" -> 10, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["grocery item", 
                  Style[
                  "grocery item", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "grocery item"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "grocery item"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[" price", 
                  Style[
                  " price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, " price"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, " price"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[" sold items", 
                  Style[
                  " sold items", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, " sold items"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, " sold items"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["milk", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["butter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["garlic", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["apple", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["orange", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["orange juice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cheese", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cookies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["grapes", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["potato", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{325., {155.134033203125, 160.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{325., {155.134033203125, 160.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.908632008123278*^9, 3.90863205848723*^9, 
  3.908632305599176*^9, 3.908716249671088*^9, 3.9087169847463493`*^9, 
  3.908717131266746*^9, 3.908718407477341*^9, 3.90880810119029*^9, 
  3.90880817792947*^9, 3.908808209459095*^9, 3.908809207949529*^9, 
  3.908809400952409*^9, 3.90891525252582*^9, 3.908921176148488*^9, 
  3.90958419648496*^9, 3.909584448986424*^9, 3.909585806820808*^9, 
  3.909588834237784*^9, 3.909590743262257*^9, 3.9095912661007357`*^9, 
  3.909591605871948*^9, 3.909610595471884*^9, 3.911223542513701*^9, 
  3.911223822756239*^9, 3.9181313608076763`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ec0a6463-b001-48b2-ae9a-6dc0416cf8dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"file", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Dataset\>\"", ",", "1"}], "}"}], ",", 
   RowBox[{"\"\<EmptyField\>\"", "->", "\"\<NaN\>\""}], ",", 
   RowBox[{"HeaderLines", "->", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908632275178872*^9, 3.908632292479205*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ba0786b5-5d21-429c-867d-03efc6c5771c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "id" -> 1., "grocery item" -> "milk", " price" -> "4$", " sold items" -> 
        4.|>, <|"id" -> 2., "grocery item" -> "butter", " price" -> "3$", 
        " sold items" -> "NaN"|>, <|
       "id" -> 3., "grocery item" -> "garlic", " price" -> "2$", 
        " sold items" -> 1.|>, <|
       "id" -> 4., "grocery item" -> "apple", " price" -> "2$", " sold items" -> 
        4.|>, <|"id" -> 5., "grocery item" -> "orange", " price" -> "NaN", 
        " sold items" -> 5.|>, <|
       "id" -> 6., "grocery item" -> "orange juice", " price" -> "5$", 
        " sold items" -> 2.|>, <|
       "id" -> 7., "grocery item" -> "cheese", " price" -> "5$", 
        " sold items" -> 2.|>, <|
       "id" -> 8., "grocery item" -> "cookies", " price" -> "NaN", 
        " sold items" -> 5.|>, <|
       "id" -> 9., "grocery item" -> "grapes", " price" -> "4$", 
        " sold items" -> "NaN"|>, <|
       "id" -> 10., "grocery item" -> "potato", " price" -> "2$", 
        " sold items" -> 5.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "grocery item"} -> 1, {All, " price"} -> 
        1, {All, " sold items"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[60], "grocery item" -> 
            TypeSystem`PackageScope`AtomShape[134.4], " price" -> 
            TypeSystem`PackageScope`AtomShape[31.5], " sold items" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 4, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"id", "grocery item", " price", " sold items"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["2$", "3$", "4$", "5$", "NaN"]], 
         TypeSystem`AnyType}], 10], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "grocery item"} -> 1, {All, " price"} -> 
        1, {All, " sold items"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[60], "grocery item" -> 
            TypeSystem`PackageScope`AtomShape[134.4], " price" -> 
            TypeSystem`PackageScope`AtomShape[31.5], " sold items" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 4, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"id", "grocery item", " price", " sold items"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["2$", "3$", "4$", "5$", "NaN"]], 
         TypeSystem`AnyType}], 10], "Path" -> {}, "DisplayedRowCount" -> 10, 
     "DisplayedColumnCount" -> 4, "DataRowCount" -> 10, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["grocery item", 
                  Style[
                  "grocery item", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "grocery item"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "grocery item"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[" price", 
                  Style[
                  " price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, " price"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, " price"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[" sold items", 
                  Style[
                  " sold items", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, " sold items"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, " sold items"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["milk", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["butter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NaN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["garlic", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["apple", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["orange", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NaN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["orange juice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cheese", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cookies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NaN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["grapes", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NaN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["potato", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2$", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[" price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[" sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{325., {155.134033203125, 160.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{325., {155.134033203125, 160.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.908632278804971*^9, 3.90863230581497*^9}, 
   3.908716249918704*^9, 3.908716984965929*^9, 3.908717131480778*^9, 
   3.908718407524354*^9, 3.908808101236703*^9, 3.908808178098014*^9, 
   3.908808209504841*^9, 3.908809207989673*^9, 3.908809400992323*^9, 
   3.908915252571765*^9, 3.908921176188368*^9, 3.9095841965374002`*^9, 
   3.909584449059165*^9, 3.909585806949338*^9, 3.909588834296553*^9, 
   3.909590743304594*^9, 3.909591266141852*^9, 3.9095916060118732`*^9, 
   3.909610595662232*^9, 3.911223542641768*^9, 3.91122382291437*^9, 
   3.918131403589025*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"734ff9b5-2c9f-4bfd-9658-066e631421d6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.1.3 JSON Files", "Subsection",
 CellChangeTimes->{{3.909842347079081*^9, 
  3.90984235263377*^9}},ExpressionUUID->"d4764b03-71be-4ab3-82af-\
acf07b9b629b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"json", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\</Users/macosx/Desktop/Sports_cars.json\>\"", ",", "\"\<JSON\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.908716269970786*^9, 3.908716284600777*^9}, {
  3.918131435844192*^9, 3.918131436186242*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a746ba3d-74e6-4c20-8c33-53cacb806977"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Enzo Ferrari\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2002"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "12"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "660"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1255"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Koenigsegg CCX\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2000"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "806"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1180"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Pagani Zonda\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2002"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "12"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "558"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1250"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"McLaren Senna\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2019"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "800"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1309"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"McLaren 675 LT\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2015"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "675"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1230"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Bugatti Veyron\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2006"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "1001"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1881"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Audi R8 Spyder \"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2010"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "10"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "525"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1795"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Aston Martin Vantage\"\>"}], 
     ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2009"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "926"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1705"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Maserati Gran Turismo\"\>"}], 
     ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2010"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "405"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1955"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Lamborghini Aventador S\"\>"}], 
     ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2017"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "12"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "740"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1740"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.908716286874548*^9, 3.908716985069612*^9, 
  3.908717131583445*^9, 3.908718407541053*^9, 3.908808101291593*^9, 
  3.908808178115481*^9, 3.908808209518585*^9, 3.908809208006218*^9, 
  3.908809401007829*^9, 3.9089152526204247`*^9, 3.908921176204402*^9, 
  3.909584196688386*^9, 3.909584449075242*^9, 3.909585806998064*^9, 
  3.909588834317379*^9, 3.909590743319151*^9, 3.909591266156554*^9, 
  3.909591606027733*^9, 3.90961059567839*^9, 3.911223542737627*^9, 
  3.9112238230109787`*^9, 3.918131446039098*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"5fd9e824-77cc-43ee-bfa9-14dfdbed30ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Association", ",", "json", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.908716462402684*^9, 3.908716462405575*^9}, {
  3.918131479877637*^9, 3.91813148018478*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"71ccac2a-4f21-4927-bf70-71149bec08d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Enzo Ferrari\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2002"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "12"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "660"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1255"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Koenigsegg CCX\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2000"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "806"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1180"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Pagani Zonda\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2002"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "12"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "558"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1250"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"McLaren Senna\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2019"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "800"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1309"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"McLaren 675 LT\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2015"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "675"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1230"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Bugatti Veyron\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2006"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "1001"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1881"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Audi R8 Spyder \"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2010"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "10"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "525"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1795"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Aston Martin Vantage\"\>"}], 
     ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2009"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "926"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1705"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Maserati Gran Turismo\"\>"}], 
     ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2010"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "405"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1955"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Lamborghini Aventador S\"\>"}], 
     ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2017"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "12"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "740"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1740"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.908716463937801*^9, 3.908716985075266*^9, 
  3.908717131588927*^9, 3.908718407545546*^9, 3.908808101310606*^9, 
  3.908808178119416*^9, 3.908808209525619*^9, 3.908809208010961*^9, 
  3.908809401015821*^9, 3.9089152526249337`*^9, 3.908921176208352*^9, 
  3.909584196693242*^9, 3.909584449080166*^9, 3.909585807002859*^9, 
  3.909588834324217*^9, 3.909590743323917*^9, 3.909591266161639*^9, 
  3.909591606032958*^9, 3.90961059568314*^9, 3.911223542744254*^9, 
  3.911223823018546*^9, 3.918131481357131*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"cc961b61-49f8-4bf2-97cc-15ce9c9e853a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.908716550786855*^9, 3.9087165528895082`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b3260789-0f78-451f-b15e-d8ab9474d797"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Model" -> "Enzo Ferrari", "Year" -> 2002, "Cylinders" -> 12, 
        "Horsepower HP" -> 660, "Weight Kg" -> 1255|>, <|
       "Model" -> "Koenigsegg CCX", "Year" -> 2000, "Cylinders" -> 8, 
        "Horsepower HP" -> 806, "Weight Kg" -> 1180|>, <|
       "Model" -> "Pagani Zonda", "Year" -> 2002, "Cylinders" -> 12, 
        "Horsepower HP" -> 558, "Weight Kg" -> 1250|>, <|
       "Model" -> "McLaren Senna", "Year" -> 2019, "Cylinders" -> 8, 
        "Horsepower HP" -> 800, "Weight Kg" -> 1309|>, <|
       "Model" -> "McLaren 675 LT", "Year" -> 2015, "Cylinders" -> 8, 
        "Horsepower HP" -> 675, "Weight Kg" -> 1230|>, <|
       "Model" -> "Bugatti Veyron", "Year" -> 2006, "Cylinders" -> 16, 
        "Horsepower HP" -> 1001, "Weight Kg" -> 1881|>, <|
       "Model" -> "Audi R8 Spyder ", "Year" -> 2010, "Cylinders" -> 10, 
        "Horsepower HP" -> 525, "Weight Kg" -> 1795|>, <|
       "Model" -> "Aston Martin Vantage", "Year" -> 2009, "Cylinders" -> 8, 
        "Horsepower HP" -> 926, "Weight Kg" -> 1705|>, <|
       "Model" -> "Maserati Gran Turismo", "Year" -> 2010, "Cylinders" -> 8, 
        "Horsepower HP" -> 405, "Weight Kg" -> 1955|>, <|
       "Model" -> "Lamborghini Aventador S", "Year" -> 2017, "Cylinders" -> 
        12, "Horsepower HP" -> 740, "Weight Kg" -> 1740|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Model"} -> 1, {All, "Year"} -> 
        1, {All, "Cylinders"} -> 1, {All, "Horsepower HP"} -> 
        1, {All, "Weight Kg"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Model" -> TypeSystem`PackageScope`AtomShape[235.20000000000002`], 
            "Year" -> TypeSystem`PackageScope`AtomShape[34], "Cylinders" -> 
            TypeSystem`PackageScope`AtomShape[34], "Horsepower HP" -> 
            TypeSystem`PackageScope`AtomShape[34], "Weight Kg" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 5, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Model", "Year", "Cylinders", "Horsepower HP", "Weight Kg"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 10], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Model"} -> 1, {All, "Year"} -> 
        1, {All, "Cylinders"} -> 1, {All, "Horsepower HP"} -> 
        1, {All, "Weight Kg"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Model" -> TypeSystem`PackageScope`AtomShape[235.20000000000002`], 
            "Year" -> TypeSystem`PackageScope`AtomShape[34], "Cylinders" -> 
            TypeSystem`PackageScope`AtomShape[34], "Horsepower HP" -> 
            TypeSystem`PackageScope`AtomShape[34], "Weight Kg" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 5, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Model", "Year", "Cylinders", "Horsepower HP", "Weight Kg"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 10], "Path" -> {}, "DisplayedRowCount" -> 
     10, "DisplayedColumnCount" -> 5, "DataRowCount" -> 10, "DataColumnCount" -> 
     5, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Model", 
                  Style[
                  "Model", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Model"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Model"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Year", 
                  Style[
                  "Year", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Year"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Year"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cylinders", 
                  Style[
                  "Cylinders", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Cylinders"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Cylinders"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Horsepower HP", 
                  Style[
                  "Horsepower HP", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Horsepower HP"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Horsepower HP"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Weight Kg", 
                  Style[
                  "Weight Kg", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Weight Kg"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Weight Kg"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Enzo Ferrari", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2002"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Cylinders"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["660"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Horsepower HP"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1255"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Weight Kg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Koenigsegg CCX", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Cylinders"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["806"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Horsepower HP"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1180"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Weight Kg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Pagani Zonda", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2002"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Cylinders"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["558"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Horsepower HP"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1250"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Weight Kg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["McLaren Senna", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2019"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Cylinders"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["800"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Horsepower HP"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1309"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Weight Kg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["McLaren 675 LT", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2015"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Cylinders"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["675"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Horsepower HP"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1230"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Weight Kg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Bugatti Veyron", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Cylinders"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Horsepower HP"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1881"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Weight Kg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Audi R8 Spyder ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2010"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Cylinders"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["525"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Horsepower HP"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1795"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Weight Kg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Aston Martin Vantage", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2009"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Cylinders"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["926"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Horsepower HP"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1705"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Weight Kg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Maserati Gran Turismo", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2010"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Cylinders"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["405"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Horsepower HP"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1955"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Weight Kg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Lamborghini Aventador S", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2017"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Cylinders"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["740"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Horsepower HP"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1740"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Weight Kg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{518., {155.134033203125, 160.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{518., {155.134033203125, 160.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.908716553307786*^9, 3.908716985107097*^9, 
  3.908717131620742*^9, 3.908718407576963*^9, 3.908808101348157*^9, 
  3.908808178149337*^9, 3.9088082095558968`*^9, 3.908809208041429*^9, 
  3.9088094010459833`*^9, 3.908915252662307*^9, 3.908921176238276*^9, 
  3.909584196729928*^9, 3.909584449109818*^9, 3.909585807050028*^9, 
  3.9095888343644753`*^9, 3.909590743357209*^9, 3.909591266192216*^9, 
  3.909591606063104*^9, 3.909610595719761*^9, 3.911223542783531*^9, 
  3.911223823050273*^9, 3.918131576187743*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"61580fb5-782d-4412-8e25-9ee2a317a1c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\</Users/macosx/Desktop/Sports_cars.json\>\"", ",", "\"\<RawJSON\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.908716815406756*^9, 3.908716838975996*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"f89783db-7d1f-480f-aa1a-b48838c19b84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Enzo Ferrari\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2002"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "12"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "660"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1255"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Koenigsegg CCX\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2000"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "806"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1180"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Pagani Zonda\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2002"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "12"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "558"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1250"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"McLaren Senna\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2019"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "800"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1309"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"McLaren 675 LT\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2015"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "675"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1230"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Bugatti Veyron\"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2006"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "1001"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1881"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Audi R8 Spyder \"\>"}], ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2010"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "10"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "525"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1795"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Aston Martin Vantage\"\>"}], 
     ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2009"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "926"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1705"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Maserati Gran Turismo\"\>"}], 
     ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2010"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "405"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1955"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Model\"\>", "\[Rule]", "\<\"Lamborghini Aventador S\"\>"}], 
     ",", 
     RowBox[{"\<\"Year\"\>", "\[Rule]", "2017"}], ",", 
     RowBox[{"\<\"Cylinders\"\>", "\[Rule]", "12"}], ",", 
     RowBox[{"\<\"Horsepower HP\"\>", "\[Rule]", "740"}], ",", 
     RowBox[{"\<\"Weight Kg\"\>", "\[Rule]", "1740"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.908716841716475*^9, 3.908716985223569*^9, 
  3.908717131714154*^9, 3.9087184075921993`*^9, 3.908808101362817*^9, 
  3.908808178166913*^9, 3.908808209572152*^9, 3.908809208083261*^9, 
  3.9088094010619497`*^9, 3.908915252682184*^9, 3.908921176295915*^9, 
  3.909584196735281*^9, 3.909584449120234*^9, 3.909585807054335*^9, 
  3.909588834370784*^9, 3.909590743372149*^9, 3.909591266197266*^9, 
  3.909591606068139*^9, 3.909610595731823*^9, 3.91122354288711*^9, 
  3.911223823142837*^9, 3.918131603411027*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"953e188d-2d3f-4f14-8746-ddb1a95ab3f3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cars", "=", 
   RowBox[{"Dataset", "[", "%", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9087169372480907`*^9, 3.908716937250979*^9}, {
  3.918131764295154*^9, 3.918131764467382*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"40bcc6b4-62b8-4c06-95f9-f78370b437dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cars", "[", 
   RowBox[{"SortBy", "[", 
    RowBox[{"#Year", "&"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.908716948341494*^9, 3.908716948344515*^9}, {
  3.918131766754891*^9, 3.918131766881181*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"18d058c3-7257-4a3f-bea3-6b65701c4f76"]
}, Closed]],

Cell[CellGroupData[{

Cell["4.1.4 Web Data", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461022708924*^9}, 
   3.908461059053986*^9, {3.908461109132196*^9, 
   3.908461112359853*^9}},ExpressionUUID->"11acd005-2a0c-4a2b-bc19-\
68bd62a2b924"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://www1.ncdc.noaa.gov/pub/data/igra/igra2-country-list.txt\>\"", 
    ",", "\"\<HTML\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.908717349299492*^9, 3.90871735255522*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"a6b4686a-fdde-4a3b-b2bb-6327c63f030d"],

Cell[BoxData[
 TagBox[
  RowBox[{"\<\"AC Antigua and Barbuda AE United A\"\>", 
   "\[Ellipsis]", "\<\"men ZA Zambia ZI Zimbabwe ZZ Ocean\"\>"}],
  Short]], "Output",
 CellChangeTimes->{3.90871735597353*^9, 3.908718409766378*^9, 
  3.908808106042451*^9, 3.908808211720549*^9, 3.908809210287608*^9, 
  3.908809403164117*^9, 3.908915257367268*^9, 3.90892117963019*^9, 
  3.909584199707417*^9, 3.909584454051106*^9, 3.909585809240756*^9, 
  3.909588838036419*^9, 3.909590745550212*^9, 3.9095912683256497`*^9, 
  3.909591608190946*^9, 3.90961060038329*^9, 3.91122354470708*^9, 
  3.911223825450944*^9, 3.918131822167795*^9},
 CellLabel->
  "Out[22]//Short=",ExpressionUUID->"90a971f3-a718-4df7-8a6f-569b6890da57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://www1.ncdc.noaa.gov/pub/data/igra/igra2-country-list.txt\>\"", 
    ",", "\"\<CSV\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.908717459523621*^9, 3.908717460957405*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"3b3e2b6f-a873-4417-ae6c-a7e670fa3c76"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "\<\"AC Antigua and Barbuda\"\>", "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "217", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", "\<\"ZZ Ocean\"\>", "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.908717462259686*^9, 3.908718410252993*^9, 
  3.908808106540266*^9, 3.90880821223173*^9, 3.9088092107727213`*^9, 
  3.908809403675507*^9, 3.908915257845497*^9, 3.908921180118966*^9, 
  3.909584200183072*^9, 3.909584454523632*^9, 3.909585809735841*^9, 
  3.909588838601468*^9, 3.9095907460322456`*^9, 3.909591268874617*^9, 
  3.909591608677595*^9, 3.909610600873322*^9, 3.911223545224674*^9, 
  3.911223825970351*^9, 3.918131847160821*^9},
 CellLabel->
  "Out[23]//Short=",ExpressionUUID->"59536db5-968c-492e-bc83-b9280e04448c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLRead", "[", 
  "\"\<https://www1.ncdc.noaa.gov/pub/data/igra/igra2-country-list.txt\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.90871758774605*^9, 3.908717589769751*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"47175233-69d2-4374-95e0-8d1a6b3d6434"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"200\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"OK\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"text/plain\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"200\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"OK\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"text/plain\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[CompressedData["
1:eJxlVs2WqkgSrtnmvETMaroX3e8AiIgIIj/WLXeJ5NW8AmknUDX61P0I8wWo
debMhhNERsbvF5Hxr8pk1T/e3t7+/ufbm+OR0w36NEqSXU2utNVYS+H4VHZ6
UDU5Vlbkt9rKQfXCWZLz83SWne4H2QknIKc5KatxY03OXdlK6l98EONiqzo+
2MLCyTSgduS0ED7KjnLZGnAyiJ0UHOjwk5Mz9oOVDd8qyOnPrbFq8suTdtDK
Utg3+IUf5SzLkh8cgbTHAYqF6yCGs5W6E647hSNr0wvXI9cM/ZeEHXdBrrIt
h+n6IJuTHlvhLvmibGVPxVkJN8Bvd2pkrfqzcFcsp+/gb6Co0Z8w7MYU32TX
SivcBOcd29yyoLQjTKaUm8a0pnt57WbkWnnXjXBLcsfmJDkA9we4Y6e08BwE
2kk45rmg2srUOPcW5J1lLTyfcqtpI7sLmEvyDNJKmbqOVaOPZH7SAMe94HGw
UK05omo4+j+ZFTRyyr2QiQacNezdWvntqxdBz9H09FukEHp3+v37KGbnlDWm
E14CMZQJOfa2IBFwxT7vKDEWtmxHMUfZye/rOeQAH8q4YF5BHgCAqgNZMzae
7gqvJG+sILOHwauivbI1fH3HfXP51vdB3u3KKV84iJoLchGLNS1+6cqMgxaL
jBam1d3/Kvc98o8j0GGFH5B/ul0H4YcUWsVqhZ+Q3w+GEexn5Fs9WAUyJ78B
eJvP+WJB/nDW5spSJfmjNddnoMI/kHdXx/O3yWVAS6s6sIKRUyKWIS11N0kv
1yB/abGMaCmbC/OeEdJvTPRIZPOJqvW/iyWgp4/WdKrXkpaqVtyeNeUDdynK
LJZbqLFGvbK0TJ+2U9PcpotimYEnu6MSy/x5miNlU9nYgVdjMeqgJHApkBXK
HgQUKGNPUBKsKDhzMEFIga5QSNwRwYYCq9QcWxBD2gJdNxFsKWiM1aY3L9eC
FPlAozVmvCoR7PivFUE2aYBzQcGcQbUSQyTYc/I61GIV0QpIpwgfsYpppaR9
5mzyPj4uTCebVx7Fass36tFK0Bl51qA9oKik1dihGW8i9Cg8zgAIFxR29Zxi
ESb8wwQaHFjQ/XlmdLQ9KnwLZcE2rCIDhjACwxx2rVSNCAsKB9ngCDg2g6L6
3+Gn0VaJ8MCyf4m1Q2t5xaV1DKKV3BjrBCR3z02Bv6W1sTVL7ECdO4YmOYNp
GrEuaT1Cslbouc8X/CKfItXdpIgCim72dLtPIztKkDBAee5PEWUUaasrJEJE
+eNowoCI0Jlni0HPM/GptKRo/JJ6ENGBInmXl/OkdeMAIZgBG582qpIdILIJ
wBp4UG5WtNHDGT7yT4ifanoyNlvKG3h8YXpHqWzam5WPqDYfLAf3Ywc5qOVJ
9kfgKnZ5nuC90H+NSsQLik1TQ4eIl5wqMwzgBuDykwO9cchtI7+0iCNQR1VP
LR1vmA3mFqLWHI9GxClYI9cWkyTeocHqL3l7YSfOHsdTFHHB9wcQJW0BbBHv
mVHrTzyS8Q+K1X806/yYrN8YQvEBpu4Y6pPniUeJ+sJYax4eJUuuyE/TPAeb
SAJKNB5XkaxoLzt0wCiScObxhQ00cKvO/iUJ5bobYA/pAWKSLetDBCJJIXiV
jUgyShACtOSUI5QOQ1wkJTQisxIrgEgOk1cHJScPtosZCpBm6KUOajQJ3kTq
U6qgKl1OPPTMK1NpBNZlXhDSDY8b1pXG4MKiFOkWPDuMJ7iUpuBesXyw2Udf
pzlDQUJ3+WD94eq+B2Pn0E7ydMl8DNWx04BZFlKOtQMJyWKGRn+Wzbcv2ZYy
004ly2AKb52+XqESJwDcqOxg+BkyIsspG3uuU+5gvo+1njYf/nfxz5lNsYA8
1pGYa9jAeo43Wd2OZ9U00JkvH/maXzKRBzjtFAearx5aVqpRGJZ5OGF/2pDy
DUoH3RK9g3kj8qmUJ3lFM4oca8SV15m8eGjYjEe+VD6qku8p/5RNheEn8nfK
v/AagPvj4cpjTE9uAy2vzOQflN8YR/kBd/Rwn4Ekime42J0g36j2JooFFYCL
ruU8WAtTyZMRhQ+2aXk7eGK2WGF7knqmQyrkL/1AQhFRMdpL/1jnNK8WT1+K
BCoRsCi2IFgzgpYGdDvnO4X1o8bjUOTQguUTfhcFFRqbxx8b1aPpi3LSr+Dt
HhQyMoriHR7oL7b+YzrljXT25oCT7j4Bo/SwZQDC0ogyoPIEg2BGzwU4Qilq
04oypfLCi6USZf48nB9cUe6xztkLOgqvbg89ByrvlXqEvvexuXTqDshIsY9p
r9WAThD7HUgU57V0Ufln/qd4d9CmrWbsvYf0ztFZXpjP6DPxvqN3eXmWUbzn
j036I6YPhfDEwaGDnHawQ0gH3Vay+lLicJjfKfFfwgHuWg==
    "]], <|
   "Headers" -> {{"Date", "Wed, 28 Feb 2024 17:57:33 GMT"}, {
      "Server", "Apache"}, {
      "Strict-Transport-Security", "max-age=31536000"}, {
      "Last-Modified", "Wed, 28 Feb 2024 00:17:22 GMT"}, {
      "ETag", "\"bf0-612661116a951-gzip\""}, {"Accept-Ranges", "bytes"}, {
      "Content-Type", "text/plain"}, {"Vary", "Accept-Encoding"}, {
      "Content-Encoding", "gzip"}, {"Access-Control-Allow-Origin", "*"}, {
      "Content-Length", "1781"}, {"Connection", "close"}}, "StatusCode" -> 
    200, "Cookies" -> {}|>, CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.90871759111278*^9, 3.908718410654748*^9, 
  3.908808106964844*^9, 3.908808212639635*^9, 3.90880921117523*^9, 
  3.908809404098272*^9, 3.908915258265497*^9, 3.908921180524665*^9, 
  3.9095842006655912`*^9, 3.909584454955872*^9, 3.909585810154282*^9, 
  3.909588839040104*^9, 3.9095907464393063`*^9, 3.90959126929757*^9, 
  3.909591609120548*^9, 3.909610601284975*^9, 3.911223545720977*^9, 
  3.911223870328038*^9, 3.918131853436504*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"36d582c8-d039-455d-8fa8-d971e99e9e36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLDownload", "[", 
  "\"\<https://www1.ncdc.noaa.gov/pub/data/igra/igra2-country-list.txt\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.908717694071055*^9, 3.908717695731846*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"43d36ba7-f039-424a-821f-5ced1be54bc2"],

Cell[BoxData[
 RowBox[{"File", "[", 
  TemplateBox[{
   "\"/private/var/folders/zs/hxtbpjpd5xb0krb6581764xm0000gn/T/igra2-country-\
list-7773b783-7536-4853-a91d-a1a0bc19ac74.txt\""},
   "FileArgument"], "]"}]], "Output",
 CellChangeTimes->{3.908717697264559*^9, 3.908718411067934*^9, 
  3.9088081073900127`*^9, 3.908808213038441*^9, 3.9088092115890093`*^9, 
  3.90880940451229*^9, 3.908915258685587*^9, 3.908921180929093*^9, 
  3.909584201067436*^9, 3.909584455370886*^9, 3.909585810575927*^9, 
  3.909588839469859*^9, 3.909590746839744*^9, 3.909591269715596*^9, 
  3.909591609529477*^9, 3.909610601685453*^9, 3.911223546195047*^9, 
  3.911223870798858*^9, 3.918131859710874*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f3ac100e-4f3e-40de-85b5-b5449db7b47a"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.2 Semantic Import", "Section",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461026373191*^9}, {
  3.908461129585497*^9, 
  3.908461132675728*^9}},ExpressionUUID->"5b215a5b-61c5-439c-aceb-\
923b78930eb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sImprt", "=", 
  RowBox[{
  "SemanticImport", "[", "\"\</Users/macosx/Desktop/Grocery_List.csv\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9087179255695257`*^9, 3.908717937179633*^9}, {
  3.908718229356923*^9, 3.908718240633358*^9}, {3.908718308351828*^9, 
  3.908718312650949*^9}, {3.908718448946574*^9, 3.908718469891862*^9}, {
  3.908718507458576*^9, 3.908718572024925*^9}, {3.918131916998076*^9, 
  3.918131919100526*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"1e4d0b7d-1b17-49f6-968c-4e2bc84d352e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "id" -> 1, "grocery item" -> "milk", "price" -> 
        Quantity[4, "USDollars"], "sold items" -> 4, "sales per day" -> 
        DateObject[{2019, 6, 4}, "Day"]|>, <|
       "id" -> 2, "grocery item" -> "butter", "price" -> 
        Quantity[3, "USDollars"], "sold items" -> 2, "sales per day" -> 
        DateObject[{2019, 6, 6}, "Day"]|>, <|
       "id" -> 3, "grocery item" -> "garlic", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 1, "sales per day" -> 
        DateObject[{2019, 6, 7}, "Day"]|>, <|
       "id" -> 4, "grocery item" -> "apple", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 4, "sales per day" -> 
        DateObject[{2019, 6, 1}, "Day"]|>, <|
       "id" -> 5, "grocery item" -> "orange", "price" -> 
        Quantity[3, "USDollars"], "sold items" -> 5, "sales per day" -> 
        DateObject[{2019, 6, 8}, "Day"]|>, <|
       "id" -> 6, "grocery item" -> "orange juice", "price" -> 
        Quantity[5, "USDollars"], "sold items" -> 2, "sales per day" -> 
        DateObject[{2019, 6, 8}, "Day"]|>, <|
       "id" -> 7, "grocery item" -> "cheese", "price" -> 
        Quantity[5, "USDollars"], "sold items" -> 2, "sales per day" -> 
        DateObject[{2019, 6, 6}, "Day"]|>, <|
       "id" -> 8, "grocery item" -> "cookies", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 5, "sales per day" -> 
        DateObject[{2019, 6, 9}, "Day"]|>, <|
       "id" -> 9, "grocery item" -> "grapes", "price" -> 
        Quantity[4, "USDollars"], "sold items" -> 3, "sales per day" -> 
        DateObject[{2019, 6, 21}, "Day"]|>, <|
       "id" -> 10, "grocery item" -> "potato", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 5, "sales per day" -> 
        DateObject[{2019, 6, 26}, "Day"]|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "grocery item"} -> 1, {All, "price"} -> 
        1, {All, "sold items"} -> 1, {All, "sales per day"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[34], "grocery item" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "price" -> 
            TypeSystem`PackageScope`AtomShape[75], "sold items" -> 
            TypeSystem`PackageScope`AtomShape[34], "sales per day" -> 
            TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 5, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "id", "grocery item", "price", "sold items", "sales per day"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Quantity[1, "USDollars"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[DateObject]}], 10], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "grocery item"} -> 1, {All, "price"} -> 
        1, {All, "sold items"} -> 1, {All, "sales per day"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[34], "grocery item" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "price" -> 
            TypeSystem`PackageScope`AtomShape[75], "sold items" -> 
            TypeSystem`PackageScope`AtomShape[34], "sales per day" -> 
            TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 5, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "id", "grocery item", "price", "sold items", "sales per day"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Quantity[1, "USDollars"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[DateObject]}], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     10, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["grocery item", 
                  Style[
                  "grocery item", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "grocery item"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "grocery item"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["price", 
                  Style[
                  "price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "price"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "price"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sold items", 
                  Style[
                  "sold items", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sold items"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sold items"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sales per day", 
                  Style[
                  "sales per day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sales per day"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sales per day"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["milk", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "4"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 4 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["butter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "3"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 6 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["garlic", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 7 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["apple", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 1 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["orange", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "3"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 8 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["orange juice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "5"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 8 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cheese", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "5"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 6 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cookies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 9 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["grapes", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "4"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 21 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["potato", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 26 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{446., {155.134033203125, 160.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{446., {155.134033203125, 160.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.908717941085717*^9, {3.908718234843283*^9, 3.908718241129342*^9}, 
   3.9087183131797123`*^9, {3.908718394364555*^9, 3.908718413260334*^9}, 
   3.908718452011282*^9, 3.908718510723061*^9, {3.908718544176001*^9, 
   3.908718572545161*^9}, 3.908721339523432*^9, 3.9088081075856953`*^9, {
   3.908808194519355*^9, 3.908808215163893*^9}, 3.908809213982168*^9, 
   3.908809406877959*^9, 3.908915261199252*^9, 3.908921183731477*^9, 
   3.909584204003744*^9, 3.90958446637449*^9, 3.909585812719042*^9, 
   3.909588842601033*^9, 3.909590748968486*^9, 3.90959127211339*^9, 
   3.909591611817032*^9, 3.90961060392726*^9, 3.9112235490325003`*^9, 
   3.911223873349608*^9, 3.91813192691154*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"4cf14d9d-68ca-4abd-bc33-9d519d303325"]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.2.1 Quantities", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461026373191*^9}, {
  3.908461129585497*^9, 
  3.908461150084478*^9}},ExpressionUUID->"e4742ce8-20bb-43f9-947a-\
42e5cea668e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"2", ",", "\"\<USDollars\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.908808231355209*^9, 3.908808231357705*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"101f470d-4484-4dcf-987c-5fc08fad0b1a"],

Cell[BoxData[
 TemplateBox[{"2", 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.908808232398508*^9, 3.908809214130625*^9, 
  3.908809407025702*^9, 3.908915261355*^9, 3.908921183874662*^9, 
  3.909584204164527*^9, 3.909584470966114*^9, 3.909585812851099*^9, 
  3.909588842783654*^9, 3.909590749104047*^9, 3.9095912722688932`*^9, 
  3.909591611951283*^9, 3.909610604066011*^9, 3.911223549180681*^9, 
  3.911223873486743*^9, 3.9181320132427073`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"27c8c6e1-7d1c-4930-a2dd-26c9c5b45d90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Quantity", "[", 
   RowBox[{"2", ",", "\"\<USDollars\>\""}], "]"}], "//", "Head"}]], "Input",
 CellChangeTimes->{{3.908808491847782*^9, 3.908808491852263*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"35a59f2c-aafb-4e3d-8bb6-19b83072108e"],

Cell[BoxData["Quantity"], "Output",
 CellChangeTimes->{3.908808492671627*^9, 3.908809214155554*^9, 
  3.908809407047994*^9, 3.908915261359736*^9, 3.908921183879934*^9, 
  3.909584204169136*^9, 3.909584470997107*^9, 3.909585812854622*^9, 
  3.909588842788436*^9, 3.909590749108322*^9, 3.909591272273162*^9, 
  3.90959161195545*^9, 3.909610604069818*^9, 3.911223549185596*^9, 
  3.911223873493232*^9, 3.918132014879829*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"279b116f-3675-492a-8ae2-0c16dbaa5faf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[<|
  "query" -> "77 min", "boxes" -> 
   TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""}, "Quantity", 
     SyntaxForm -> Mod], 
   "allassumptions" -> {{
     "type" -> "Clash", "word" -> "min", "template" -> 
      "Assuming \"min\" is a unit${separator}Use as ${desc} or ${desc} \
instead", "count" -> "3", "pulldown" -> "false", "default" -> 
      "{\"C\", \"min\"} -> {\"Unit\", \"dflt\"}", 
      "Values" -> {{
        "name" -> "Unit", "desc" -> "a unit", "input" -> 
         "{\"C\", \"min\"} -> {\"Unit\"}"}, {
        "name" -> "OptimizationWord", "desc" -> " referring to optimization", 
         "input" -> "{\"C\", \"min\"} -> {\"OptimizationWord\"}"}, {
        "name" -> "HistoricalCountry", "desc" -> "a historical country", 
         "input" -> "{\"C\", \"min\"} -> {\"HistoricalCountry\"}"}}}, {
     "type" -> "Unit", "word" -> "min", "template" -> 
      "Assuming minutes of time for \"min\"${separator}Use ${desc} or ${desc} \
instead", "count" -> "3", "pulldown" -> "false", "default" -> 
      "\"UnitClash\" -> {\"min\", {\"Minutes\", \"dflt\"}}", 
      "Values" -> {{
        "name" -> "Minutes", "desc" -> "minutes of time", "input" -> 
         "\"UnitClash\" -> {\"min\", {\"Minutes\"}}"}, {
        "name" -> "Minims", "desc" -> "US minims of volume", "input" -> 
         "\"UnitClash\" -> {\"min\", {\"Minims\"}}"}, {
        "name" -> "Arcminutes", "desc" -> "minutes of arc", "input" -> 
         "\"UnitClash\" -> {\"min\", {\"Arcminutes\"}}"}}}}, 
   "assumptions" -> {}, "open" -> {1, 2}, 
   "querystate" -> {
    "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
     1.467449`6.618108010125367, "Messages" -> {}}, "contextinfo" -> 
   Automatic, "version" -> 5|>,
  "LinguisticAssistantTemplate"]], "Input",
 CellChangeTimes->{{3.908808609536335*^9, 3.908808623119735*^9}, {
  3.908808815355799*^9, 3.908808828609939*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"4a5e58c4-5041-4de2-bcd6-69991260e114"],

Cell[BoxData[
 TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.908808627686458*^9, 3.9088091518544207`*^9, 
  3.908809214160664*^9, 3.908809407052794*^9, 3.9089152614162493`*^9, 
  3.908921183931813*^9, 3.909584204181443*^9, 3.909584471095824*^9, 
  3.909585812961911*^9, 3.909588842901204*^9, 3.909590749209205*^9, 
  3.909591272381038*^9, 3.909591612065071*^9, 3.909610604449004*^9, 
  3.911223549202327*^9, 3.911223873554807*^9, 3.918132030353099*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"930708b5-f7ec-4c83-a614-ecf5d35b1254"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QuantityMagnitude", "[", 
    TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
     "Quantity"], "]"}], ",", 
   RowBox[{"Head", "[", "%", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.908809131564111*^9, 3.90880917529274*^9}, {
  3.90880930456205*^9, 3.908809305072043*^9}, {3.9088093400647907`*^9, 
  3.908809340369083*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"384df9a1-d374-4cba-8e84-ae7b280795f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"77", ",", "Quantity"}], "}"}]], "Output",
 CellChangeTimes->{{3.908809138766066*^9, 3.908809155660151*^9}, 
   3.908809214164732*^9, 3.908809407056823*^9, 3.908915261420635*^9, 
   3.908921183936599*^9, 3.909584204186364*^9, 3.909584471106882*^9, 
   3.909585812969663*^9, 3.909588842905818*^9, 3.909590749215352*^9, 
   3.909591272385752*^9, 3.909591612069775*^9, 3.909610604453431*^9, 
   3.9112235492075453`*^9, 3.911223873560038*^9, 3.9181321923763723`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"24ad66d4-bf0f-45ce-9df4-9f6257e49e6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityUnit", "[", 
  TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
   "Quantity"], "]"}]], "Input",
 CellChangeTimes->{{3.9088092960505247`*^9, 3.908809334747748*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"8508ccc4-678f-492f-8855-f22706b7b8ef"],

Cell[BoxData["\<\"Minutes\"\>"], "Output",
 CellChangeTimes->{3.9088094070699244`*^9, 3.908915261424244*^9, 
  3.908921183940533*^9, 3.909584204199815*^9, 3.909584471111635*^9, 
  3.909585812980776*^9, 3.909588842922322*^9, 3.909590749227619*^9, 
  3.909591272389315*^9, 3.90959161208672*^9, 3.909610604456881*^9, 
  3.9112235492116623`*^9, 3.911223873578226*^9, 3.9181321938558292`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"5d100230-234f-4161-b711-8ec76370f6f0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.2.2 Datasets with Quantities", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461026373191*^9}, {
  3.908461129585497*^9, 
  3.9084611523237257`*^9}},ExpressionUUID->"e8b2d4b7-393f-4ce6-8cd3-\
4dda037d1cd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
     "Quantity"], "-", 
    TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
     "Quantity"], "+", 
    TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
     "Quantity"], "*", 
    TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
     "Quantity"], "/", 
    TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"77", "\"min\"", "minutes", "\"Minutes\""},
     "Quantity"], "*", 
    TemplateBox[{"3", "\"m\"", "meters", "\"Meters\""},
     "Quantity"]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.908809634637742*^9, 3.908809678371031*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"d234b419-4858-407b-a65b-994fc875a95f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"0", "\"min\"", "minutes", "\"Minutes\""},
    "Quantity"], ",", 
   TemplateBox[{"154", "\"min\"", "minutes", "\"Minutes\""},
    "Quantity"], ",", 
   TemplateBox[{"5929", 
     RowBox[{
       SuperscriptBox["\"min\"", "2"]}], "minutes squared", 
     SuperscriptBox["\"Minutes\"", "2"]},
    "Quantity"], ",", "1", ",", 
   TemplateBox[{"231", 
     RowBox[{"\"m\"", "\[ThinSpace]", "\"min\""}], "meter minutes", 
     RowBox[{"\"Meters\"", " ", "\"Minutes\""}]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.908809686037382*^9, 3.9089152614497013`*^9, 
  3.908921183967182*^9, 3.909584204214454*^9, 3.909584473806209*^9, 
  3.909585812995023*^9, 3.909588842931444*^9, 3.909590749241821*^9, 
  3.909591272403081*^9, 3.909591612104936*^9, 3.909610604473918*^9, 
  3.911223549229431*^9, 3.9112238735970573`*^9, 3.918132309763277*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"94269574-1bca-4d25-87da-4a54f07befea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sImprt", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "\"\<price\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.908809869854808*^9, 3.90880986985752*^9}, {
  3.918132313748095*^9, 3.918132313950511*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"88b856e2-28fa-455a-b4b0-478938678ab4"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
       Quantity[4, "USDollars"], 
       Quantity[3, "USDollars"], 
       Quantity[2, "USDollars"], 
       Quantity[2, "USDollars"], 
       Quantity[3, "USDollars"], 
       Quantity[5, "USDollars"], 
       Quantity[5, "USDollars"], 
       Quantity[2, "USDollars"], 
       Quantity[4, "USDollars"], 
       Quantity[2, "USDollars"]}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[2, 5, 10, 75], 10, 5, {All}], 
     "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "USDollars"]], 10], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[2, 5, 10, 75], 10, 5, {All}], 
     "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "USDollars"]], 10], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 5, "DataRowCount" -> 2, "DataColumnCount" -> 
     5, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "4"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "3"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "3"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "5"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "5"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "4"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{417., {33.634033203125, 39.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{417., {33.634033203125, 39.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.908809871454749*^9, 3.908915261484743*^9, 
  3.908921184002474*^9, 3.90958420423362*^9, 3.9095844738634443`*^9, 
  3.909585813011546*^9, 3.909588842951693*^9, 3.909590749258958*^9, 
  3.909591272420697*^9, 3.909591612122336*^9, 3.909610604495198*^9, 
  3.911223549250986*^9, 3.911223873627418*^9, 3.918132314677964*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"338fcb3d-a882-4058-bbed-2356c4f16da6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.908810200272377*^9, 3.908810200275158*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"614355fc-5589-4668-8e9a-571128dd7dd0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"4", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{"3", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{"2", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{"2", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{"3", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{"5", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{"5", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{"2", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{"4", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{"2", 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"]}], "}"}]], "Output",
 CellChangeTimes->{3.90881020119103*^9, 3.90891526155184*^9, 
  3.908921184069583*^9, 3.909584204310327*^9, 3.909584473869072*^9, 
  3.909585813016851*^9, 3.9095888429569206`*^9, 3.909590749264442*^9, 
  3.909591272425457*^9, 3.909591612127188*^9, 3.909610604499488*^9, 
  3.911223549317482*^9, 3.911223873695353*^9, 3.91813235823116*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"22dcba24-be9e-4626-a41a-a88632e79d3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantityMagnitude", "[", "#", "]"}], "&"}], "[", "%", 
  "]"}]], "Input",
 CellChangeTimes->{{3.908810308366034*^9, 3.9088103101140747`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"a2685eb9-6103-44ad-92b3-8a7fc8027408"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "3", ",", "2", ",", "2", ",", "3", ",", "5", ",", "5", ",", "2", 
   ",", "4", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.9088103106828957`*^9, 3.908915261576031*^9, 
  3.908921184094462*^9, 3.909584204324357*^9, 3.909584473880373*^9, 
  3.909585813028019*^9, 3.909588842971792*^9, 3.909590749277224*^9, 
  3.909591272438388*^9, 3.909591612141117*^9, 3.90961060451362*^9, 
  3.911223549337463*^9, 3.911223873714427*^9, 3.918132359850224*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"9d59860c-5f49-4963-b859-1286f8bc1d4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sImprt", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<id\>\"", ",", "\"\<sales per day\>\""}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.908810380480195*^9, 3.908810380482942*^9}, {
  3.9181323672906837`*^9, 3.918132367579131*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"8de5c573-4082-405c-b186-b81b1fc48ce1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "id" -> 1, "sales per day" -> DateObject[{2019, 6, 4}, "Day"]|>, <|
       "id" -> 2, "sales per day" -> DateObject[{2019, 6, 6}, "Day"]|>, <|
       "id" -> 3, "sales per day" -> DateObject[{2019, 6, 7}, "Day"]|>, <|
       "id" -> 4, "sales per day" -> DateObject[{2019, 6, 1}, "Day"]|>, <|
       "id" -> 5, "sales per day" -> DateObject[{2019, 6, 8}, "Day"]|>, <|
       "id" -> 6, "sales per day" -> DateObject[{2019, 6, 8}, "Day"]|>, <|
       "id" -> 7, "sales per day" -> DateObject[{2019, 6, 6}, "Day"]|>, <|
       "id" -> 8, "sales per day" -> DateObject[{2019, 6, 9}, "Day"]|>, <|
       "id" -> 9, "sales per day" -> DateObject[{2019, 6, 21}, "Day"]|>, <|
       "id" -> 10, "sales per day" -> DateObject[{2019, 6, 26}, "Day"]|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "sales per day"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[34], "sales per day" -> 
            TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"id", "sales per day"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[DateObject]}], 10], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "sales per day"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[34], "sales per day" -> 
            TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"id", "sales per day"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[DateObject]}], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     10, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sales per day", 
                  Style[
                  "sales per day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sales per day"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sales per day"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 4 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 6 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 7 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 1 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 8 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 8 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 6 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 9 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 21 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 26 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{151., {155.134033203125, 160.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{151., {155.134033203125, 160.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.908810382207252*^9, 3.908915261605515*^9, 
  3.908921184120021*^9, 3.909584204353579*^9, 3.9095844739050503`*^9, 
  3.909585813052638*^9, 3.9095888429981403`*^9, 3.90959074930209*^9, 
  3.909591272463338*^9, 3.90959161216586*^9, 3.9096106045441227`*^9, 
  3.911223549362962*^9, 3.911223873744069*^9, 3.9181323689069757`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"3f24e325-505f-4e2e-9494-8c4fd11f1782"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"Values", "[", "%", "]"}], "]"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.90881056199941*^9, 3.908810562002227*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"dd6c9a7a-f261-47d9-97dd-46cbe016d6b4"],

Cell["\<\
{{1, DateObject[{2019, 6, 4}, \"Day\"]}, 
 {2, DateObject[{2019, 6, 6}, \"Day\"]}, 
 {3, DateObject[{2019, 6, 7}, \"Day\"]}, 
 {4, DateObject[{2019, 6, 1}, \"Day\"]}, 
 {5, DateObject[{2019, 6, 8}, \"Day\"]}, 
 {6, DateObject[{2019, 6, 8}, \"Day\"]}, 
 {7, DateObject[{2019, 6, 6}, \"Day\"]}, 
 {8, DateObject[{2019, 6, 9}, \"Day\"]}, 
 {9, DateObject[{2019, 6, 21}, \"Day\"]}, 
 {10, DateObject[{2019, 6, 26}, \"Day\"]}}\
\>", "Output",
 CellChangeTimes->{3.908810564530517*^9, 3.908915261672284*^9, 
  3.908921184188085*^9, 3.909584204431441*^9, 3.909584473909303*^9, 
  3.909585813057101*^9, 3.909588843003413*^9, 3.909590749307184*^9, 
  3.909591272468158*^9, 3.909591612171173*^9, 3.909610604548723*^9, 
  3.911223549430869*^9, 3.911223873811973*^9, 3.918132378382921*^9},
 CellLabel->
  "Out[37]//InputForm=",ExpressionUUID->"c63651ba-8782-43a5-ada2-\
d9bb5cdfe406"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Association", "[", 
   RowBox[{"Apply", "[", 
    RowBox[{"Rule", ",", "%", ",", "1"}], "]"}], "]"}], "//", 
  "InputForm"}]], "Input",
 CellChangeTimes->{{3.908810719528817*^9, 3.908810719531753*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"1bdbacb6-4806-44d8-a427-fdd687ec173b"],

Cell["\<\
<|1 -> DateObject[{2019, 6, 4}, \"Day\"], 
 2 -> DateObject[{2019, 6, 6}, \"Day\"], 
 3 -> DateObject[{2019, 6, 7}, \"Day\"], 
 4 -> DateObject[{2019, 6, 1}, \"Day\"], 
 5 -> DateObject[{2019, 6, 8}, \"Day\"], 
 6 -> DateObject[{2019, 6, 8}, \"Day\"], 
 7 -> DateObject[{2019, 6, 6}, \"Day\"], 
 8 -> DateObject[{2019, 6, 9}, \"Day\"], 
 9 -> DateObject[{2019, 6, 21}, \"Day\"], 
 10 -> DateObject[{2019, 6, 26}, \"Day\"]|>\
\>", "Output",
 CellChangeTimes->{3.908810721112607*^9, 3.908915261692923*^9, 
  3.908921184212426*^9, 3.909584204437291*^9, 3.909584473920539*^9, 
  3.909585813068104*^9, 3.909588843016156*^9, 3.909590749319146*^9, 
  3.9095912724807277`*^9, 3.909591612185898*^9, 3.9096106045627937`*^9, 
  3.911223549448458*^9, 3.911223873829413*^9, 3.918132380403808*^9},
 CellLabel->
  "Out[38]//InputForm=",ExpressionUUID->"ff3b1d95-05e9-49c7-a99d-\
b6631658e4b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimelinePlot", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.90881083878524*^9, 3.908810845877445*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"326b4b52-a8fb-42fb-aae3-43808ae930f3"],

Cell[BoxData[
 GraphicsBox[{
   {AbsolutePointSize[0], Opacity[0], 
    PointBox[{{3.768336*^9, 0}, {3.770496*^9, 10}}], 
    PointBox[NCache[{{3.768336*^9, Rational[-1, 2]}, {3.770496*^9, 0}}, {{
       3.768336*^9, -0.5}, {3.770496*^9, 0}}]]}, {}, {
    {PointSize[0], Opacity[0], 
     PointBox[NCache[{{3.768336*^9, 0}, {3.770496*^9, Rational[19, 2]}}, {{
        3.768336*^9, 0}, {3.770496*^9, 9.5}}]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
               
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[10], 
             FrameBoxOptions -> {
              BoxFrame -> 2.5, FrameStyle -> Automatic}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{3.770496*^9, 0}, {
                 3.770496*^9, 0}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              JoinForm["Round"], 
              LineBox[
               NCache[{
                 Offset[{15, 0}, {3.770064*^9, 
                   Rational[5, 2]}], 
                 Offset[{5, 0}, {3.770064*^9, 
                   Rational[5, 2]}], 
                 Offset[{5, 0}, {3.770064*^9, 
                   Rational[3, 2]}], {3.770496*^9, 
                  Rational[3, 2]}, {3.770496*^9, 0}}, {
                 Offset[{15, 0}, {3.770064*^9, 2.5}], 
                 Offset[{5, 0}, {3.770064*^9, 2.5}], 
                 Offset[{5, 0}, {3.770064*^9, 1.5}], {3.770496*^9, 1.5}, {
                 3.770496*^9, 0}}]], 
              PolygonBox[
               NCache[{
                 Offset[{15, 5}, {3.770064*^9, 
                   Rational[5, 2]}], 
                 Offset[{10, 0}, {3.770064*^9, 
                   Rational[5, 2]}], 
                 Offset[{15, -5}, {3.770064*^9, 
                   Rational[5, 2]}]}, {
                 Offset[{15, 5}, {3.770064*^9, 2.5}], 
                 Offset[{10, 0}, {3.770064*^9, 2.5}], 
                 Offset[{15, -5}, {3.770064*^9, 2.5}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["10", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{15, 0}, {3.770064*^9, 
                  Rational[5, 2]}], 
                Offset[{15, 0}, {3.770064*^9, 2.5}]], {Left, Center}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               Offset[{0, 0}, {3.770064*^9, 2}], 
               Offset[{0, 0}, {3.7701221376*^9, 3}]]}}}},
          
          ImageSizeCache->{{454.13269330910043`, 565.8593066911017}, {
           23.692609975676746`, 89.5926400243232}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"06/26/2019\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2019", ",", "6", ",", "26"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "6.`"}], ",", "\"SmearedUTC\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], {
          GrayLevel[0.3]}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2019, 6, 26}, "Day", "Gregorian", -6., "SmearedUTC", {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {
          GrayLevel[0.3]}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
               
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[10], 
             FrameBoxOptions -> {
              BoxFrame -> 2.5, FrameStyle -> Automatic}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{3.770064*^9, 0}, {
                 3.770064*^9, 0}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              JoinForm["Round"], 
              LineBox[
               NCache[{
                 Offset[{15, 0}, {3.770064*^9, 
                   Rational[9, 2]}], 
                 Offset[{0, 0}, {3.770064*^9, 
                   Rational[9, 2]}], 
                 Offset[{0, 0}, {3.770064*^9, 3}], {3.770064*^9, 3}, {
                 3.770064*^9, 0}}, {
                 Offset[{15, 0}, {3.770064*^9, 4.5}], 
                 Offset[{0, 0}, {3.770064*^9, 4.5}], 
                 Offset[{0, 0}, {3.770064*^9, 3}], {3.770064*^9, 3}, {
                 3.770064*^9, 0}}]], 
              PolygonBox[
               NCache[{
                 Offset[{15, 5}, {3.770064*^9, 
                   Rational[9, 2]}], 
                 Offset[{10, 0}, {3.770064*^9, 
                   Rational[9, 2]}], 
                 Offset[{15, -5}, {3.770064*^9, 
                   Rational[9, 2]}]}, {
                 Offset[{15, 5}, {3.770064*^9, 4.5}], 
                 Offset[{10, 0}, {3.770064*^9, 4.5}], 
                 Offset[{15, -5}, {3.770064*^9, 4.5}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["9", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{15, 0}, {3.770064*^9, 
                  Rational[9, 2]}], 
                Offset[{15, 0}, {3.770064*^9, 4.5}]], {Left, Center}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               Offset[{0, 0}, {3.770064*^9, 4}], 
               Offset[{0, 0}, {3.770100336*^9, 5}]]}}}},
          
          ImageSizeCache->{{454.13269330910043`, 
           493.61130669108024`}, {-13.044523357656573`, 89.5926400243232}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"06/21/2019\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2019", ",", "6", ",", "21"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "6.`"}], ",", "\"SmearedUTC\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], {
          GrayLevel[0.3]}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2019, 6, 21}, "Day", "Gregorian", -6., "SmearedUTC", {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {
          GrayLevel[0.3]}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
               
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[10], 
             FrameBoxOptions -> {
              BoxFrame -> 2.5, FrameStyle -> Automatic}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{3.7690272*^9, 0}, {
                 3.7690272*^9, 0}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              JoinForm["Round"], 
              LineBox[
               NCache[{
                 Offset[{20, 0}, {3.7688544*^9, 
                   Rational[5, 2]}], 
                 Offset[{10, 0}, {3.7688544*^9, 
                   Rational[5, 2]}], 
                 Offset[{10, 0}, {3.7688544*^9, 
                   Rational[3, 2]}], {3.7690272*^9, 
                  Rational[3, 2]}, {3.7690272*^9, 0}}, {
                 Offset[{20, 0}, {3.7688544*^9, 2.5}], 
                 Offset[{10, 0}, {3.7688544*^9, 2.5}], 
                 Offset[{10, 0}, {3.7688544*^9, 1.5}], {3.7690272*^9, 1.5}, {
                 3.7690272*^9, 0}}]], 
              PolygonBox[
               NCache[{
                 Offset[{20, 5}, {3.7688544*^9, 
                   Rational[5, 2]}], 
                 Offset[{15, 0}, {3.7688544*^9, 
                   Rational[5, 2]}], 
                 Offset[{20, -5}, {3.7688544*^9, 
                   Rational[5, 2]}]}, {
                 Offset[{20, 5}, {3.7688544*^9, 2.5}], 
                 Offset[{15, 0}, {3.7688544*^9, 2.5}], 
                 Offset[{20, -5}, {3.7688544*^9, 2.5}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["8", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{20, 0}, {3.7688544*^9, 
                  Rational[5, 2]}], 
                Offset[{20, 0}, {3.7688544*^9, 2.5}]], {Left, Center}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               Offset[{0, 0}, {3.7688544*^9, 2}], 
               Offset[{0, 0}, {3.768890736*^9, 3}]]}}}},
          
          ImageSizeCache->{{159.43829330894732`, 208.01610669098227`}, {
           23.692609975676746`, 89.5926400243232}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"06/09/2019\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2019", ",", "6", ",", "9"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "6.`"}], ",", "\"SmearedUTC\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], {
          GrayLevel[0.3]}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2019, 6, 9}, "Day", "Gregorian", -6., "SmearedUTC", {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {
          GrayLevel[0.3]}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
               
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[10], 
             FrameBoxOptions -> {
              BoxFrame -> 2.5, FrameStyle -> Automatic}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{3.7689408*^9, 0}, {
                 3.7689408*^9, 0}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              JoinForm["Round"], 
              LineBox[
               NCache[{
                 Offset[{20, 0}, {3.7688544*^9, 
                   Rational[13, 2]}], 
                 Offset[{5, 0}, {3.7688544*^9, 
                   Rational[13, 2]}], 
                 Offset[{5, 0}, {3.7688544*^9, 
                   Rational[3, 4]}], {3.7689408*^9, 
                  Rational[3, 4]}, {3.7689408*^9, 0}}, {
                 Offset[{20, 0}, {3.7688544*^9, 6.5}], 
                 Offset[{5, 0}, {3.7688544*^9, 6.5}], 
                 Offset[{5, 0}, {3.7688544*^9, 0.75}], {3.7689408*^9, 0.75}, {
                 3.7689408*^9, 0}}]], 
              PolygonBox[
               NCache[{
                 Offset[{20, 5}, {3.7688544*^9, 
                   Rational[13, 2]}], 
                 Offset[{15, 0}, {3.7688544*^9, 
                   Rational[13, 2]}], 
                 Offset[{20, -5}, {3.7688544*^9, 
                   Rational[13, 2]}]}, {
                 Offset[{20, 5}, {3.7688544*^9, 6.5}], 
                 Offset[{15, 0}, {3.7688544*^9, 6.5}], 
                 Offset[{20, -5}, {3.7688544*^9, 6.5}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["5", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{20, 0}, {3.7688544*^9, 
                  Rational[13, 2]}], 
                Offset[{20, 0}, {3.7688544*^9, 6.5}]], {Left, Center}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               Offset[{0, 0}, {3.7688544*^9, 6}], 
               Offset[{0, 0}, {3.768890736*^9, 7}]]}}}},
          
          ImageSizeCache->{{159.43829330894732`, 
           203.91690669092714`}, {-49.78165669098989, 89.59264002432322}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"06/08/2019\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2019", ",", "6", ",", "8"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "6.`"}], ",", "\"SmearedUTC\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], {
          GrayLevel[0.3]}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2019, 6, 8}, "Day", "Gregorian", -6., "SmearedUTC", {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {
          GrayLevel[0.3]}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
               
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[10], 
             FrameBoxOptions -> {
              BoxFrame -> 2.5, FrameStyle -> Automatic}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{3.7689408*^9, 0}, {
                 3.7689408*^9, 0}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              JoinForm["Round"], 
              LineBox[
               NCache[{
                 Offset[{20, 0}, {3.7688544*^9, 
                   Rational[9, 2]}], 
                 Offset[{5, 0}, {3.7688544*^9, 
                   Rational[9, 2]}], 
                 Offset[{5, 0}, {3.7688544*^9, 
                   Rational[3, 4]}], {3.7689408*^9, 
                  Rational[3, 4]}, {3.7689408*^9, 0}}, {
                 Offset[{20, 0}, {3.7688544*^9, 4.5}], 
                 Offset[{5, 0}, {3.7688544*^9, 4.5}], 
                 Offset[{5, 0}, {3.7688544*^9, 0.75}], {3.7689408*^9, 0.75}, {
                 3.7689408*^9, 0}}]], 
              PolygonBox[
               NCache[{
                 Offset[{20, 5}, {3.7688544*^9, 
                   Rational[9, 2]}], 
                 Offset[{15, 0}, {3.7688544*^9, 
                   Rational[9, 2]}], 
                 Offset[{20, -5}, {3.7688544*^9, 
                   Rational[9, 2]}]}, {
                 Offset[{20, 5}, {3.7688544*^9, 4.5}], 
                 Offset[{15, 0}, {3.7688544*^9, 4.5}], 
                 Offset[{20, -5}, {3.7688544*^9, 4.5}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["6", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{20, 0}, {3.7688544*^9, 
                  Rational[9, 2]}], 
                Offset[{20, 0}, {3.7688544*^9, 4.5}]], {Left, Center}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               Offset[{0, 0}, {3.7688544*^9, 4}], 
               Offset[{0, 0}, {3.768890736*^9, 5}]]}}}},
          
          ImageSizeCache->{{159.43829330894732`, 
           203.91690669092714`}, {-13.044523357656573`, 89.5926400243232}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"06/08/2019\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2019", ",", "6", ",", "8"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "6.`"}], ",", "\"SmearedUTC\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], {
          GrayLevel[0.3]}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2019, 6, 8}, "Day", "Gregorian", -6., "SmearedUTC", {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {
          GrayLevel[0.3]}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
               
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[10], 
             FrameBoxOptions -> {
              BoxFrame -> 2.5, FrameStyle -> Automatic}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{3.7688544*^9, 0}, {
                 3.7688544*^9, 0}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              JoinForm["Round"], 
              LineBox[
               NCache[{
                 Offset[{20, 0}, {3.7688544*^9, 
                   Rational[17, 2]}], 
                 Offset[{0, 0}, {3.7688544*^9, 
                   Rational[17, 2]}], 
                 Offset[{0, 0}, {3.7688544*^9, 3}], {3.7688544*^9, 3}, {
                 3.7688544*^9, 0}}, {
                 Offset[{20, 0}, {3.7688544*^9, 8.5}], 
                 Offset[{0, 0}, {3.7688544*^9, 8.5}], 
                 Offset[{0, 0}, {3.7688544*^9, 3}], {3.7688544*^9, 3}, {
                 3.7688544*^9, 0}}]], 
              PolygonBox[
               NCache[{
                 Offset[{20, 5}, {3.7688544*^9, 
                   Rational[17, 2]}], 
                 Offset[{15, 0}, {3.7688544*^9, 
                   Rational[17, 2]}], 
                 Offset[{20, -5}, {3.7688544*^9, 
                   Rational[17, 2]}]}, {
                 Offset[{20, 5}, {3.7688544*^9, 8.5}], 
                 Offset[{15, 0}, {3.7688544*^9, 8.5}], 
                 Offset[{20, -5}, {3.7688544*^9, 8.5}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["3", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{20, 0}, {3.7688544*^9, 
                  Rational[17, 2]}], 
                Offset[{20, 0}, {3.7688544*^9, 8.5}]], {Left, Center}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               Offset[{0, 0}, {3.7688544*^9, 8}], 
               Offset[{0, 0}, {3.768890736*^9, 9}]]}}}},
          
          ImageSizeCache->{{159.4382933088309, 
           203.91690669092714`}, {-86.51879002432321, 89.5926400243232}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"06/07/2019\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2019", ",", "6", ",", "7"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "6.`"}], ",", "\"SmearedUTC\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], {
          GrayLevel[0.3]}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2019, 6, 7}, "Day", "Gregorian", -6., "SmearedUTC", {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {
          GrayLevel[0.3]}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
               
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[10], 
             FrameBoxOptions -> {
              BoxFrame -> 2.5, FrameStyle -> Automatic}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{3.768768*^9, 0}, {
                 3.768768*^9, 0}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              JoinForm["Round"], 
              LineBox[
               NCache[{
                 Offset[{20, 0}, {3.768336*^9, 
                   Rational[9, 2]}], 
                 Offset[{10, 0}, {3.768336*^9, 
                   Rational[9, 2]}], 
                 Offset[{10, 0}, {3.768336*^9, 
                   Rational[3, 2]}], {3.768768*^9, 
                  Rational[3, 2]}, {3.768768*^9, 0}}, {
                 Offset[{20, 0}, {3.768336*^9, 4.5}], 
                 Offset[{10, 0}, {3.768336*^9, 4.5}], 
                 Offset[{10, 0}, {3.768336*^9, 1.5}], {3.768768*^9, 1.5}, {
                 3.768768*^9, 0}}]], 
              PolygonBox[
               NCache[{
                 Offset[{20, 5}, {3.768336*^9, 
                   Rational[9, 2]}], 
                 Offset[{15, 0}, {3.768336*^9, 
                   Rational[9, 2]}], 
                 Offset[{20, -5}, {3.768336*^9, 
                   Rational[9, 2]}]}, {
                 Offset[{20, 5}, {3.768336*^9, 4.5}], 
                 Offset[{15, 0}, {3.768336*^9, 4.5}], 
                 Offset[{20, -5}, {3.768336*^9, 4.5}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["2", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{20, 0}, {3.768336*^9, 
                  Rational[9, 2]}], 
                Offset[{20, 0}, {3.768336*^9, 4.5}]], {Left, Center}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               Offset[{0, 0}, {3.768336*^9, 4}], 
               Offset[{0, 0}, {3.768372336*^9, 5}]]}}}},
          
          ImageSizeCache->{{33.14069330901475, 
           144.86730669101598`}, {-13.044523357656573`, 89.5926400243232}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"06/06/2019\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2019", ",", "6", ",", "6"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "6.`"}], ",", "\"SmearedUTC\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], {
          GrayLevel[0.3]}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2019, 6, 6}, "Day", "Gregorian", -6., "SmearedUTC", {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {
          GrayLevel[0.3]}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
               
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[10], 
             FrameBoxOptions -> {
              BoxFrame -> 2.5, FrameStyle -> Automatic}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{3.768768*^9, 0}, {
                 3.768768*^9, 0}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              JoinForm["Round"], 
              LineBox[
               NCache[{
                 Offset[{20, 0}, {3.768336*^9, 
                   Rational[5, 2]}], 
                 Offset[{10, 0}, {3.768336*^9, 
                   Rational[5, 2]}], 
                 Offset[{10, 0}, {3.768336*^9, 
                   Rational[3, 2]}], {3.768768*^9, 
                  Rational[3, 2]}, {3.768768*^9, 0}}, {
                 Offset[{20, 0}, {3.768336*^9, 2.5}], 
                 Offset[{10, 0}, {3.768336*^9, 2.5}], 
                 Offset[{10, 0}, {3.768336*^9, 1.5}], {3.768768*^9, 1.5}, {
                 3.768768*^9, 0}}]], 
              PolygonBox[
               NCache[{
                 Offset[{20, 5}, {3.768336*^9, 
                   Rational[5, 2]}], 
                 Offset[{15, 0}, {3.768336*^9, 
                   Rational[5, 2]}], 
                 Offset[{20, -5}, {3.768336*^9, 
                   Rational[5, 2]}]}, {
                 Offset[{20, 5}, {3.768336*^9, 2.5}], 
                 Offset[{15, 0}, {3.768336*^9, 2.5}], 
                 Offset[{20, -5}, {3.768336*^9, 2.5}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["7", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{20, 0}, {3.768336*^9, 
                  Rational[5, 2]}], 
                Offset[{20, 0}, {3.768336*^9, 2.5}]], {Left, Center}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               Offset[{0, 0}, {3.768336*^9, 2}], 
               Offset[{0, 0}, {3.768372336*^9, 3}]]}}}},
          
          ImageSizeCache->{{33.14069330901475, 144.86730669101598`}, {
           23.692609975676746`, 89.5926400243232}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"06/06/2019\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2019", ",", "6", ",", "6"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "6.`"}], ",", "\"SmearedUTC\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], {
          GrayLevel[0.3]}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2019, 6, 6}, "Day", "Gregorian", -6., "SmearedUTC", {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {
          GrayLevel[0.3]}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
               
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[10], 
             FrameBoxOptions -> {
              BoxFrame -> 2.5, FrameStyle -> Automatic}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{3.7685952*^9, 0}, {
                 3.7685952*^9, 0}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              JoinForm["Round"], 
              LineBox[
               NCache[{
                 Offset[{20, 0}, {3.768336*^9, 
                   Rational[13, 2]}], 
                 Offset[{5, 0}, {3.768336*^9, 
                   Rational[13, 2]}], 
                 Offset[{5, 0}, {3.768336*^9, 
                   Rational[3, 4]}], {3.7685952*^9, 
                  Rational[3, 4]}, {3.7685952*^9, 0}}, {
                 Offset[{20, 0}, {3.768336*^9, 6.5}], 
                 Offset[{5, 0}, {3.768336*^9, 6.5}], 
                 Offset[{5, 0}, {3.768336*^9, 0.75}], {3.7685952*^9, 0.75}, {
                 3.7685952*^9, 0}}]], 
              PolygonBox[
               NCache[{
                 Offset[{20, 5}, {3.768336*^9, 
                   Rational[13, 2]}], 
                 Offset[{15, 0}, {3.768336*^9, 
                   Rational[13, 2]}], 
                 Offset[{20, -5}, {3.768336*^9, 
                   Rational[13, 2]}]}, {
                 Offset[{20, 5}, {3.768336*^9, 6.5}], 
                 Offset[{15, 0}, {3.768336*^9, 6.5}], 
                 Offset[{20, -5}, {3.768336*^9, 6.5}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["1", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{20, 0}, {3.768336*^9, 
                  Rational[13, 2]}], 
                Offset[{20, 0}, {3.768336*^9, 6.5}]], {Left, Center}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               Offset[{0, 0}, {3.768336*^9, 6}], 
               Offset[{0, 0}, {3.768372336*^9, 7}]]}}}},
          
          ImageSizeCache->{{33.14069330901475, 
           102.76810669096085`}, {-49.78165669098989, 89.59264002432322}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"06/04/2019\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2019", ",", "6", ",", "4"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "6.`"}], ",", "\"SmearedUTC\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], {
          GrayLevel[0.3]}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2019, 6, 4}, "Day", "Gregorian", -6., "SmearedUTC", {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {
          GrayLevel[0.3]}], "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
               
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[10], 
             FrameBoxOptions -> {
              BoxFrame -> 2.5, FrameStyle -> Automatic}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{3.768336*^9, 0}, {
                 3.768336*^9, 0}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              JoinForm["Round"], 
              LineBox[
               NCache[{
                 Offset[{20, 0}, {3.768336*^9, 
                   Rational[17, 2]}], 
                 Offset[{0, 0}, {3.768336*^9, 
                   Rational[17, 2]}], 
                 Offset[{0, 0}, {3.768336*^9, 3}], {3.768336*^9, 3}, {
                 3.768336*^9, 0}}, {
                 Offset[{20, 0}, {3.768336*^9, 8.5}], 
                 Offset[{0, 0}, {3.768336*^9, 8.5}], 
                 Offset[{0, 0}, {3.768336*^9, 3}], {3.768336*^9, 3}, {
                 3.768336*^9, 0}}]], 
              PolygonBox[
               NCache[{
                 Offset[{20, 5}, {3.768336*^9, 
                   Rational[17, 2]}], 
                 Offset[{15, 0}, {3.768336*^9, 
                   Rational[17, 2]}], 
                 Offset[{20, -5}, {3.768336*^9, 
                   Rational[17, 2]}]}, {
                 Offset[{20, 5}, {3.768336*^9, 8.5}], 
                 Offset[{15, 0}, {3.768336*^9, 8.5}], 
                 Offset[{20, -5}, {3.768336*^9, 8.5}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["4", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{20, 0}, {3.768336*^9, 
                  Rational[17, 2]}], 
                Offset[{20, 0}, {3.768336*^9, 8.5}]], {Left, Center}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               Offset[{0, 0}, {3.768336*^9, 8}], 
               Offset[{0, 0}, {3.768372336*^9, 9}]]}}}},
          
          ImageSizeCache->{{33.14069330901475, 
           77.61930669099456}, {-86.51879002432321, 89.5926400243232}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"06/01/2019\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2019", ",", "6", ",", "1"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "6.`"}], ",", "\"SmearedUTC\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], {
          GrayLevel[0.3]}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2019, 6, 1}, "Day", "Gregorian", -6., "SmearedUTC", {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {
          GrayLevel[0.3]}], 
        "Tooltip"]& ]}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {}, \
{}},
  AspectRatio->NCache[
    Rational[97, 300], 0.3233333333333333],
  Axes->{False, False},
  AxesOrigin->{0, 0},
  Frame->{{None, None}, {True, None}},
  FrameTicks->
   FrontEndValueCache[{{None, None}, {
     Charting`getDateTicks[Automatic, {Automatic}, 
       (Map[DateList, {
         SlotSequence[1]}]& )[
        SlotSequence[1]], None, 7, {{0.01, 0}, {0.005, 0}}, Automatic]& , 
      Automatic}}, {{None, None}, {{{3.7685088*^9, 
        FormBox["\"Jun 03\"", TraditionalForm], {0.006666666666666666, 0}}, {
       3.7691136*^9, 
        FormBox["\"Jun 10\"", TraditionalForm], {0.006666666666666666, 0}}, {
       3.7697184*^9, 
        FormBox["\"Jun 17\"", TraditionalForm], {0.006666666666666666, 0}}, {
       3.7703232*^9, 
        FormBox["\"Jun 24\"", TraditionalForm], {0.006666666666666666, 0}}, {
       3.770928*^9, 
        FormBox["\"Jul 01\"", TraditionalForm], {0.006666666666666666, 0}}, {
       3.7715328*^9, 
        FormBox["\"Jul 08\"", TraditionalForm], {0.006666666666666666, 0}}, {
       3.7682496*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.768336*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7684224*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7685088*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7685952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7686816*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.768768*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7688544*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7689408*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7690272*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7691136*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7692*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7692864*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7693728*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7694592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7695456*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.769632*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7697184*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7698048*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7698912*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7699776*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.770064*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7701504*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7702368*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7703232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7704096*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.770496*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {3.7705824*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}}, Automatic}}],
  GridLines->{None, None},
  ImagePadding->All,
  ImageSize->{600, Automatic},
  PlotRange->{{All, All}, {0, All}},
  PlotRangePadding->{{
     Scaled[0.06], 
     Scaled[0.06]}, {None, 
     Scaled[0.05]}},
  Ticks->{{{3.7685088*^9, 
      FormBox["\"Jun 03\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.7691136*^9, 
      FormBox["\"Jun 10\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.7697184*^9, 
      FormBox["\"Jun 17\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.7703232*^9, 
      FormBox["\"Jun 24\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.770928*^9, 
      FormBox["\"Jul 01\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.7715328*^9, 
      FormBox["\"Jul 08\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.7682496*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.768336*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7684224*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7685088*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7685952*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7686816*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.768768*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7688544*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7689408*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7690272*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7691136*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7692*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7692864*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7693728*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7694592*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7695456*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.769632*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7697184*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7698048*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7698912*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7699776*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.770064*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7701504*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7702368*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7703232*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7704096*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.770496*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7705824*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}}, None}]], "Output",
 CellChangeTimes->{3.908810846859722*^9, 3.908915262315809*^9, 
  3.908921184847755*^9, 3.9095842050253696`*^9, 3.90958447455345*^9, 
  3.909585813710476*^9, 3.909588843639118*^9, 3.90959074996041*^9, 
  3.909591273106361*^9, 3.909591612819892*^9, 3.9096106052406073`*^9, 
  3.91122355022369*^9, 3.911223874467249*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"1aedb1c5-908e-46dd-9ea7-7362934d2b17"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.2.3 Costume Imports (Dealing with Large Datasets)", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461026373191*^9}, {
   3.908461129585497*^9, 3.9084611542326517`*^9}, {3.908915462551043*^9, 
   3.908915473541419*^9}, 
   3.911222345884959*^9},ExpressionUUID->"dea88928-a738-4cef-9ac0-\
dec300fb9c10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SemanticImport", "[", 
  RowBox[{"\"\</Users/macosx/Desktop/Grocery_List.csv\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Integer\>\"", ",", "\"\<String\>\"", ",", "\"\<Currency\>\"", ",", 
     "\"\<Real\>\"", ",", "\"\<Date\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908915475831534*^9, 3.908915488418038*^9}, {
  3.918132579914514*^9, 3.918132609131495*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"a065d272-3558-497a-9b45-12aa189ade35"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "id" -> 1, "grocery item" -> "milk", "price" -> 
        Quantity[4, "USDollars"], "sold items" -> 4., "sales per day" -> 
        DateObject[{2019, 6, 4}, "Day"]|>, <|
       "id" -> 2, "grocery item" -> "butter", "price" -> 
        Quantity[3, "USDollars"], "sold items" -> 2., "sales per day" -> 
        DateObject[{2019, 6, 6}, "Day"]|>, <|
       "id" -> 3, "grocery item" -> "garlic", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 1., "sales per day" -> 
        DateObject[{2019, 6, 7}, "Day"]|>, <|
       "id" -> 4, "grocery item" -> "apple", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 4., "sales per day" -> 
        DateObject[{2019, 6, 1}, "Day"]|>, <|
       "id" -> 5, "grocery item" -> "orange", "price" -> 
        Quantity[3, "USDollars"], "sold items" -> 5., "sales per day" -> 
        DateObject[{2019, 6, 8}, "Day"]|>, <|
       "id" -> 6, "grocery item" -> "orange juice", "price" -> 
        Quantity[5, "USDollars"], "sold items" -> 2., "sales per day" -> 
        DateObject[{2019, 6, 8}, "Day"]|>, <|
       "id" -> 7, "grocery item" -> "cheese", "price" -> 
        Quantity[5, "USDollars"], "sold items" -> 2., "sales per day" -> 
        DateObject[{2019, 6, 6}, "Day"]|>, <|
       "id" -> 8, "grocery item" -> "cookies", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 5., "sales per day" -> 
        DateObject[{2019, 6, 9}, "Day"]|>, <|
       "id" -> 9, "grocery item" -> "grapes", "price" -> 
        Quantity[4, "USDollars"], "sold items" -> 3., "sales per day" -> 
        DateObject[{2019, 6, 21}, "Day"]|>, <|
       "id" -> 10, "grocery item" -> "potato", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 5., "sales per day" -> 
        DateObject[{2019, 6, 26}, "Day"]|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "grocery item"} -> 1, {All, "price"} -> 
        1, {All, "sold items"} -> 1, {All, "sales per day"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[34], "grocery item" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "price" -> 
            TypeSystem`PackageScope`AtomShape[75], "sold items" -> 
            TypeSystem`PackageScope`AtomShape[60], "sales per day" -> 
            TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 5, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "id", "grocery item", "price", "sold items", "sales per day"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Quantity[1, "USDollars"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[DateObject]}], 10], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "grocery item"} -> 1, {All, "price"} -> 
        1, {All, "sold items"} -> 1, {All, "sales per day"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[34], "grocery item" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "price" -> 
            TypeSystem`PackageScope`AtomShape[75], "sold items" -> 
            TypeSystem`PackageScope`AtomShape[60], "sales per day" -> 
            TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 5, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "id", "grocery item", "price", "sold items", "sales per day"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Quantity[1, "USDollars"]], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[DateObject]}], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     10, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["grocery item", 
                  Style[
                  "grocery item", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "grocery item"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "grocery item"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["price", 
                  Style[
                  "price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "price"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "price"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sold items", 
                  Style[
                  "sold items", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sold items"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sold items"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sales per day", 
                  Style[
                  "sales per day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sales per day"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sales per day"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["milk", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "4"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 4 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["butter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "3"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 6 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["garlic", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 7 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["apple", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 1 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["orange", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "3"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 8 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["orange juice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "5"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 8 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cheese", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "5"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 6 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cookies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 9 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["grapes", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "4"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 21 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["potato", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 26 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{446., {155.134033203125, 160.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{446., {155.134033203125, 160.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.908915490201088*^9, 3.90892118509491*^9, 
  3.909584205200425*^9, 3.909584480344757*^9, 3.9095858138577747`*^9, 
  3.909588843821409*^9, 3.909590750100662*^9, 3.909591273245018*^9, 
  3.909591612958125*^9, 3.909610605516955*^9, 3.91122355046911*^9, 
  3.91122387470338*^9, 3.91813256755639*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"e7b35be9-c9fa-425f-80ee-24f89513d4ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SemanticImport", "[", 
    RowBox[{
    "\"\</Users/macosx/Desktop/Grocery_List.csv\>\"", ",", "Automatic", ",", 
     "\"\<Rows\>\""}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "5"}], "]"}], "]"}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.908921080325814*^9, 3.908921097549247*^9}, {
  3.9181325839321413`*^9, 3.918132584122183*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"eaf707d8-a4f5-4447-bfb7-b81bf6c5bfeb"],

Cell["\<\
{{1, \"milk\", Quantity[4, \"USDollars\"], 4, DateObject[{2019, 6, 4}, 
   \"Day\"]}, {2, \"butter\", Quantity[3, \"USDollars\"], 2, 
  DateObject[{2019, 6, 6}, \"Day\"]}, 
 {3, \"garlic\", Quantity[2, \"USDollars\"], 1, DateObject[{2019, 6, 7}, 
   \"Day\"]}, {4, \"apple\", Quantity[2, \"USDollars\"], 4, 
  DateObject[{2019, 6, 1}, \"Day\"]}, 
 {5, \"orange\", Quantity[3, \"USDollars\"], 5, DateObject[{2019, 6, 8}, 
   \"Day\"]}}\
\>", "Output",
 CellChangeTimes->{3.908921102165019*^9, 3.908921185223595*^9, 
  3.909584205394657*^9, 3.909584484498699*^9, 3.9095858140404263`*^9, 
  3.909588843907744*^9, 3.909590750183388*^9, 3.90959127332836*^9, 
  3.9095916130418663`*^9, 3.909610605535767*^9, 3.911223550588109*^9, 
  3.91122387482028*^9, 3.918132573091414*^9},
 CellLabel->
  "Out[40]//InputForm=",ExpressionUUID->"8a9a2739-45d6-4934-a8d3-\
0d089fb2c337"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SemanticImport", "[", 
   RowBox[{
   "\"\</Users/macosx/Desktop/Grocery_List.csv\>\"", ",", "Automatic", ",", 
    "\"\<Columns\>\""}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.90892126794464*^9, 3.908921277455469*^9}, {
  3.9181325864026117`*^9, 3.9181325865414543`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"42308809-9e24-48ca-9ec0-79a0b41e5d8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"milk\"\>", ",", "\<\"butter\"\>", ",", "\<\"garlic\"\>", 
     ",", "\<\"apple\"\>", ",", "\<\"orange\"\>", ",", "\<\"orange juice\"\>",
      ",", "\<\"cheese\"\>", ",", "\<\"cookies\"\>", ",", "\<\"grapes\"\>", 
     ",", "\<\"potato\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.908921279885141*^9, 3.90958420541235*^9, 
  3.909584487767629*^9, 3.909585814058173*^9, 3.909588843925201*^9, 
  3.909590750200539*^9, 3.909591273343968*^9, 3.909591613057513*^9, 
  3.909610605554655*^9, 3.911223550611566*^9, 3.911223874838974*^9, 
  3.918132618264949*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"a9d1259b-e3d5-4e40-a909-96f1462d162d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SemanticImport", "[", 
  RowBox[{"\"\</Users/macosx/Desktop/Grocery_List.csv\>\"", ",", 
   RowBox[{"ExcludedLines", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "10", "}"}], ",", 
      RowBox[{"{", "11", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.909584383654031*^9, 3.9095843962286797`*^9}, {
  3.909584498759021*^9, 3.909584499543412*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"e5152fb5-0075-4ccf-b184-eccbc4046c93"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "id" -> 1, "grocery item" -> "milk", "price" -> 
        Quantity[4, "USDollars"], "sold items" -> 4, "sales per day" -> 
        DateObject[{2019, 6, 4}, "Day"]|>, <|
       "id" -> 2, "grocery item" -> "butter", "price" -> 
        Quantity[3, "USDollars"], "sold items" -> 2, "sales per day" -> 
        DateObject[{2019, 6, 6}, "Day"]|>, <|
       "id" -> 3, "grocery item" -> "garlic", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 1, "sales per day" -> 
        DateObject[{2019, 6, 7}, "Day"]|>, <|
       "id" -> 4, "grocery item" -> "apple", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 4, "sales per day" -> 
        DateObject[{2019, 6, 1}, "Day"]|>, <|
       "id" -> 5, "grocery item" -> "orange", "price" -> 
        Quantity[3, "USDollars"], "sold items" -> 5, "sales per day" -> 
        DateObject[{2019, 6, 8}, "Day"]|>, <|
       "id" -> 6, "grocery item" -> "orange juice", "price" -> 
        Quantity[5, "USDollars"], "sold items" -> 2, "sales per day" -> 
        DateObject[{2019, 6, 8}, "Day"]|>, <|
       "id" -> 7, "grocery item" -> "cheese", "price" -> 
        Quantity[5, "USDollars"], "sold items" -> 2, "sales per day" -> 
        DateObject[{2019, 6, 6}, "Day"]|>, <|
       "id" -> 8, "grocery item" -> "cookies", "price" -> 
        Quantity[2, "USDollars"], "sold items" -> 5, "sales per day" -> 
        DateObject[{2019, 6, 9}, "Day"]|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "grocery item"} -> 1, {All, "price"} -> 
        1, {All, "sold items"} -> 1, {All, "sales per day"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[34], "grocery item" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "price" -> 
            TypeSystem`PackageScope`AtomShape[75], "sold items" -> 
            TypeSystem`PackageScope`AtomShape[34], "sales per day" -> 
            TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 5, {All}]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "id", "grocery item", "price", "sold items", "sales per day"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Quantity[1, "USDollars"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[DateObject]}], 8], "Meta" -> <||>, "RowTarget" -> 20,
      "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
        1, {All, "grocery item"} -> 1, {All, "price"} -> 
        1, {All, "sold items"} -> 1, {All, "sales per day"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "id" -> TypeSystem`PackageScope`AtomShape[34], "grocery item" -> 
            TypeSystem`PackageScope`AtomShape[134.4], "price" -> 
            TypeSystem`PackageScope`AtomShape[75], "sold items" -> 
            TypeSystem`PackageScope`AtomShape[34], "sales per day" -> 
            TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 5, {All}]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "id", "grocery item", "price", "sold items", "sales per day"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Quantity[1, "USDollars"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[DateObject]}], 8], "Path" -> {}, "DisplayedRowCount" -> 
     8, "DisplayedColumnCount" -> 5, "DataRowCount" -> 8, "DataColumnCount" -> 
     5, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "id"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "id"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["grocery item", 
                  Style[
                  "grocery item", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "grocery item"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "grocery item"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["price", 
                  Style[
                  "price", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "price"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "price"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sold items", 
                  Style[
                  "sold items", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sold items"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sold items"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sales per day", 
                  Style[
                  "sales per day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sales per day"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sales per day"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["milk", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "4"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 4 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["butter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "3"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 6 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["garlic", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 7 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["apple", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 1 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["orange", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "3"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 8 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["orange juice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "5"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 8 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cheese", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "5"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 6 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cookies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["grocery item"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{
                  RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                  "2"}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["price"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sold items"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 9 Jun 2019\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sales per day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{436., {128.134033203125, 133.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{436., {128.134033203125, 133.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.909584491632069*^9, 3.909584500238072*^9}, 
   3.9095858141055326`*^9, 3.909588843972893*^9, 3.909590750248559*^9, 
   3.909591273395837*^9, 3.9095916131037207`*^9, 3.9096106056111393`*^9, 
   3.911223550658427*^9, 3.91122387488627*^9, 3.918132642416638*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"8c4fd4be-27f4-4bae-b584-0a2c2bc5cdec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SemanticImport", "[", 
   RowBox[{"\"\<ExampleData/buildings.dat\>\"", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Name\>\"", "->", "Automatic"}], ",", 
      RowBox[{"\"\<City\>\"", "->", "Automatic"}], ",", 
      RowBox[{"\"\<Country\>\"", "->", "Automatic"}], ",", 
      RowBox[{"\"\<Year\>\"", "->", "Automatic"}]}], "|>"}], ",", 
    RowBox[{"HeaderLines", "->", "1"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"%", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "<=", "2000"}], "&"}]}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.908919798370665*^9, 3.908919815700723*^9}, {
  3.908919981633154*^9, 3.908920039097371*^9}, {3.908920453645385*^9, 
  3.90892047684104*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"7638f501-02c1-49f0-9360-673a5001d50d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Name" -> "Petronas Tower 1", "City" -> 
        Entity["City", {"KualaLumpur", "KualaLumpur", "Malaysia"}], "Country" -> 
        Entity["Country", "Malaysia"], "Year" -> 1998|>, <|
       "Name" -> "Petronas Tower 2", "City" -> 
        Entity["City", {"KualaLumpur", "KualaLumpur", "Malaysia"}], "Country" -> 
        Entity["Country", "Malaysia"], "Year" -> 1998|>, <|
       "Name" -> "Sears Tower", "City" -> 
        Entity["City", {"Chicago", "Illinois", "UnitedStates"}], "Country" -> 
        Entity["Country", "UnitedStates"], "Year" -> 1974|>, <|
       "Name" -> "Jin Mao Building", "City" -> 
        Entity["City", {"Shanghai", "Shanghai", "China"}], "Country" -> 
        Entity["Country", "China"], "Year" -> 1999|>, <|
       "Name" -> "CITIC Plaza", "City" -> 
        Entity["City", {"Guangzhou", "Guangdong", "China"}], "Country" -> 
        Entity["Country", "China"], "Year" -> 1996|>, <|
       "Name" -> "Shun Hing Square", "City" -> 
        Entity["City", {"Shenzhen", "Guangdong", "China"}], "Country" -> 
        Entity["Country", "China"], "Year" -> 1996|>, <|
       "Name" -> "Empire State Building", "City" -> 
        Entity["City", {"NewYork", "NewYork", "UnitedStates"}], "Country" -> 
        Entity["Country", "UnitedStates"], "Year" -> 1931|>, <|
       "Name" -> "Central Plaza", "City" -> 
        Entity["City", {"HongKong", "HongKong", "HongKong"}], "Country" -> 
        Entity["Country", "China"], "Year" -> 1992|>, <|
       "Name" -> "Bank of China", "City" -> 
        Entity["City", {"HongKong", "HongKong", "HongKong"}], "Country" -> 
        Entity["Country", "China"], "Year" -> 1989|>, <|
       "Name" -> "Emirates Tower One", "City" -> 
        Entity["City", {"Dubai", "Dubai", "UnitedArabEmirates"}], "Country" -> 
        Entity["Country", "UnitedArabEmirates"], "Year" -> 1999|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 1, {All, "City"} -> 
        1, {All, "Country"} -> 1, {All, "Year"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[235.20000000000002`], 
            "City" -> TypeSystem`PackageScope`AtomShape[90], "Country" -> 
            TypeSystem`PackageScope`AtomShape[90], "Year" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 4, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Name", "City", "Country", "Year"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Entity["City"]], 
         TypeSystem`Atom[
          Entity["Country"]], 
         TypeSystem`Atom[Integer]}], 10], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 1, {All, "City"} -> 
        1, {All, "Country"} -> 1, {All, "Year"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[235.20000000000002`], 
            "City" -> TypeSystem`PackageScope`AtomShape[90], "Country" -> 
            TypeSystem`PackageScope`AtomShape[90], "Year" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 4, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Name", "City", "Country", "Year"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          Entity["City"]], 
         TypeSystem`Atom[
          Entity["Country"]], 
         TypeSystem`Atom[Integer]}], 10], "Path" -> {}, "DisplayedRowCount" -> 
     10, "DisplayedColumnCount" -> 4, "DataRowCount" -> 10, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["City", 
                  Style[
                  "City", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "City"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "City"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Country", 
                  Style[
                  "Country", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Country"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Country"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Year", 
                  Style[
                  "Year", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Year"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Year"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Petronas Tower 1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Kuala Lumpur\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["City"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Malaysia\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1998"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Petronas Tower 2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Kuala Lumpur\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["City"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Malaysia\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1998"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Sears Tower", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Chicago\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["City"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"United States\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1974"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Jin Mao Building", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Shanghai\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["City"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"China\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1999"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CITIC Plaza", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Guangzhou\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["City"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"China\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1996"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Shun Hing Square", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Shenzhen\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["City"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"China\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1996"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Empire State Building", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"New York City\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["City"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"United States\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1931"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Central Plaza", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Hong Kong\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["City"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"China\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1992"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Bank of China", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Hong Kong\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["City"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"China\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1989"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Emirates Tower One", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Dubai\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["City"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"United Arab Emirates\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1999"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{519., {155.134033203125, 160.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{519., {155.134033203125, 160.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.908919800002444*^9, 3.9089198161746073`*^9}, {
   3.908919998016634*^9, 3.9089200091696*^9}, 3.908920043892995*^9, {
   3.908920456375103*^9, 3.908920477523041*^9}, 3.908921185344736*^9, 
   3.909584207954838*^9, 3.90958581426866*^9, 3.909588844044445*^9, 
   3.9095907503205*^9, 3.9095912734677377`*^9, 3.9095916131739607`*^9, 
   3.909610607850358*^9, 3.91122355368857*^9, 3.911223875049741*^9, 
   3.918132647447258*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"c0c2b427-19ee-420d-a4ee-9ea57fdd5612"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.3 Export", "Section",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 
  3.908461173177229*^9}},ExpressionUUID->"1c0647c6-8067-45df-991f-\
aebdaa947119"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"$ExportFormats", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.909586191648246*^9, 3.909586191651763*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"ff97efc5-da07-4e5b-bb29-8b11dcc0b6a6"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"\<\"3DS\"\>", ",", "\<\"AC\"\>", ",", "\<\"ACO\"\>", 
    ",", "\<\"AIFF\"\>", ",", "\<\"ASE\"\>", ",", "\<\"AU\"\>", 
    ",", "\<\"AVI\"\>", ",", "\<\"Base64\"\>", ",", "\<\"Binary\"\>", 
    ",", "\<\"Bit\"\>", ",", "\<\"BLEND\"\>", ",", "\<\"BMP\"\>", 
    ",", "\<\"BREP\"\>", ",", "\<\"BSON\"\>", ",", "\<\"Byte\"\>", 
    ",", "\<\"BYU\"\>", ",", "\<\"BZIP2\"\>", ",", "\<\"C\"\>", 
    ",", "\<\"CDF\"\>", ",", 
    RowBox[{"\[LeftSkeleton]", "167", "\[RightSkeleton]"}], 
    ",", "\<\"WDX\"\>", ",", "\<\"WebP\"\>", ",", "\<\"WL\"\>", 
    ",", "\<\"WLNet\"\>", ",", "\<\"WMLF\"\>", ",", "\<\"WXF\"\>", 
    ",", "\<\"X3D\"\>", ",", "\<\"XBM\"\>", ",", "\<\"XGL\"\>", 
    ",", "\<\"XHTML\"\>", ",", "\<\"XHTMLMathML\"\>", ",", "\<\"XLS\"\>", 
    ",", "\<\"XLSX\"\>", ",", "\<\"XML\"\>", ",", "\<\"XPORT\"\>", 
    ",", "\<\"XYZ\"\>", ",", "\<\"ZIP\"\>", ",", "\<\"ZPR\"\>", 
    ",", "\<\"ZSTD\"\>"}], "}"}],
  Short[#, 5]& ]], "Output",
 CellChangeTimes->{3.909586193414546*^9, 3.909588844049247*^9, 
  3.909590750325403*^9, 3.909591273472656*^9, 3.909591613178938*^9, 
  3.909610607883688*^9, 3.91122355380572*^9, 3.911223875134379*^9, 
  3.9181326858885612`*^9},
 CellLabel->
  "Out[48]//Short=",ExpressionUUID->"ac95193e-9084-4ce4-902b-8d8ea4d137f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.909586406600913*^9, 3.909586406603961*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"bd97cbba-1cc0-4eb2-bfc8-c973da3fc2ed"],

Cell[BoxData["\<\"/Users/macosx\"\>"], "Output",
 CellChangeTimes->{3.909586407528327*^9, 3.909588844072623*^9, 
  3.909590750346898*^9, 3.909591273494902*^9, 3.909591613202333*^9, 
  3.909610507545609*^9, 3.9096106078886843`*^9, 3.91122355381031*^9, 
  3.911223875150846*^9, 3.9181327188276978`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"8778b17b-b892-40cd-83c9-ba10a5a1e6fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.909586575981275*^9, 3.909586575983938*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"3cce5f5d-82fb-4c25-9a54-c4303bb42cfc"],

Cell[BoxData["\<\"/Users/macosx/Desktop\"\>"], "Output",
 CellChangeTimes->{3.909586576867775*^9, 3.909588844079214*^9, 
  3.909590750371332*^9, 3.909591273502198*^9, 3.909591613228217*^9, 
  3.909610511940117*^9, 3.909610607914803*^9, 3.911223553832481*^9, 
  3.911223875157671*^9, 3.918132720541218*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"4f546fd0-7e98-4af5-afe7-3a3b0d1f259a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mydata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Prime", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<New_File.txt\>\"", ",", "mydata", ",", "\"\<Table\>\""}], 
    "]"}], ",", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<New_File.csv\>\"", ",", "mydata"}], "]"}]}], "}"}]}], "Input",\

 CellChangeTimes->{{3.9095868651017036`*^9, 3.909586865105114*^9}, {
  3.918132722374881*^9, 3.91813272818259*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"78ccf1a5-581a-4ae3-abaf-a51a9cc6960f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"New_File.txt\"\>", ",", "\<\"New_File.csv\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.909586881841324*^9, 3.909588844107859*^9, 
  3.909590750397705*^9, 3.909591273525578*^9, 3.909591613260198*^9, 
  3.909610607945491*^9, 3.9112235538462887`*^9, 3.911223875173374*^9, 
  3.9181327339644403`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"14874297-9052-44b2-b8d3-11d9b7e07b6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/macosx/Desktop/New_File.TSV\>\"", ",", "mydata", ",", 
   "\"\<TSV\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9095872018323812`*^9, 3.909587201834651*^9}, {
  3.918132730436438*^9, 3.918132730619877*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"78654ccc-c971-40d0-9195-a0fb184717a3"],

Cell[BoxData["\<\"/Users/macosx/Desktop/New_File.TSV\"\>"], "Output",
 CellChangeTimes->{3.90958720394538*^9, 3.9095888441136637`*^9, 
  3.9095907504039*^9, 3.909591273531543*^9, 3.909591613266583*^9, 
  3.909610607950924*^9, 3.9112235538643293`*^9, 3.9112238751792107`*^9, 
  3.918132806375942*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"054e7749-8836-4f94-843d-10d5896b141f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "\"\</Users/macosx/Desktop/New_File.TSV\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.909587298099796*^9, 3.9095873111523547`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"f9bad737-3dfa-4c56-aac4-48bd209a36cb"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.909587393158206*^9, 3.909587393160991*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"7c92e49c-305f-499e-bdb6-9def06819b4f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tabD1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tabD2", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "/", "11"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "4"}], "}"}]}], "]"}], ",", "3"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.909587511524133*^9, 3.909587511527261*^9}, {
  3.918132831717949*^9, 3.918132832672205*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"a8ff4543-1972-4e58-940f-9b6105c618f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Tabular_data.xls\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "tabD1", "}"}], ",", 
     RowBox[{"{", "tabD2", "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.909587561608969*^9, 3.90958756161265*^9}, {
  3.918132834930328*^9, 3.918132837402615*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"473297fd-e98d-4ed6-8ee8-b32515924664"],

Cell[BoxData["\<\"Tabular_data.xls\"\>"], "Output",
 CellChangeTimes->{3.9095875641058683`*^9, 3.909588845959374*^9, 
  3.909590752412215*^9, 3.909591275503119*^9, 3.909591615291893*^9, 
  3.909610609892494*^9, 3.911223559387328*^9, 3.911223877014854*^9, 
  3.9181328420791273`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"4534f02e-b5f6-42d0-98ae-63b65415f6ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Tabular_data_2.xls\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Page number 1\>\"", "->", "tabD1"}], ",", 
     RowBox[{"\"\<Page number 2\>\"", "->", "tabD2"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.909587853024802*^9, 3.909587857862887*^9}, {
  3.918132844923188*^9, 3.918132847618321*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"5be1aeec-a376-4eff-885b-fd2c06fd253d"],

Cell[BoxData["\<\"Tabular_data_2.xls\"\>"], "Output",
 CellChangeTimes->{3.909587858735367*^9, 3.9095888459892673`*^9, 
  3.9095907524484*^9, 3.909591275531052*^9, 3.909591615346746*^9, 
  3.9096106099249372`*^9, 3.911223559438271*^9, 3.911223877040249*^9, 
  3.918132848911166*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"0812c149-cc3f-42ea-a928-2f84401351d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<New_data.xls\>\"", ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"tabD1", ",", "tabD2"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.909587906415577*^9, 3.909587906418672*^9}, {
  3.918132856988144*^9, 3.918132859146656*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"d487501f-2334-4366-af20-5ae98b2253c0"],

Cell[BoxData["\<\"New_data.xls\"\>"], "Output",
 CellChangeTimes->{3.909587925185699*^9, 3.909588845998005*^9, 
  3.9095907524659452`*^9, 3.909591275539699*^9, 3.909591615357427*^9, 
  3.909610609968858*^9, 3.911223559446864*^9, 3.911223877060286*^9, 
  3.918132865557252*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"6c885c8c-f582-4c2c-a3e6-e24af53d321f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"tabD1", ",", "tabD2"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.90958795526701*^9, 3.909587955269757*^9}, {
  3.918132860722047*^9, 3.918132862389284*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"6a907dd3-dd38-4b14-99dc-db9224790a6c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0.0909090909090909091`3."},
    {"2", "0.1818181818181818182`3."},
    {"3", "0.2727272727272727273`3."},
    {"4", "0.3636363636363636364`3."}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9095879562847433`*^9, 3.909588846004414*^9, 
  3.909590752498938*^9, 3.909591275569011*^9, 3.909591615391843*^9, 
  3.909610609974465*^9, 3.9112235594696627`*^9, 3.911223877066674*^9, 
  3.918132866987268*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"5a62186c-7d50-4481-a31f-c9f8d76b0ef8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"table1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Dog\>\"", ",", "\"\<Wolf\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Cat\>\"", ",", "\"\<Leopard\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Pigeon\>\"", ",", "\"\<Shark\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Animal_table.xls\>\"", ",", "table1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.909588003857196*^9, 3.909588003860318*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"af98dae6-dc53-40fd-9a94-e8417d46cfe4"],

Cell[BoxData["\<\"Animal_table.xls\"\>"], "Output",
 CellChangeTimes->{3.909588005434841*^9, 3.909588846032475*^9, 
  3.90959075256022*^9, 3.909591275597402*^9, 3.90959161543659*^9, 
  3.909610610007923*^9, 3.911223559480062*^9, 3.9112238770922823`*^9, 
  3.918132868709579*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"989ccaf6-71e0-4b25-bd32-8c3bedec24ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.3.1 Other Formats", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 
  3.908461198842817*^9}},ExpressionUUID->"a106914b-4ce3-451f-90b1-\
cec682825295"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"newD", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "+", "j"}], ",", 
       RowBox[{"i", "*", "j"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<File_text.txt\>\"", ",", "newD", ",", "\"\<Text\>\""}], 
    "]"}], ",", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<File_dat.dat\>\"", ",", "newD", ",", "\"\<Table\>\""}], 
    "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.909588624610157*^9, 3.909588624613291*^9}, {
  3.918133006884203*^9, 3.918133011488768*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"56d2557f-1d5e-4c08-8dbb-ba14b811a747"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"File_text.txt\"\>", ",", "\<\"File_dat.dat\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9095886279943857`*^9, 3.909588846050256*^9, 
  3.909590752592299*^9, 3.909591275651516*^9, 3.909591615475911*^9, 
  3.9096106100317574`*^9, 3.9112235595018883`*^9, 3.9112238771288357`*^9, 
  3.918133033774354*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"8aa3757f-a133-4c30-bce1-ffe34c36a0a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<File_text.txt\>\"", ",", "newD", ",", "\"\<TSV\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.909588737654248*^9, 3.9095887376563396`*^9}, {
  3.918133013125396*^9, 3.918133013300273*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"5b62a7a4-da1b-49ac-a9c9-4a27dbaa5520"],

Cell[BoxData["\<\"File_text.txt\"\>"], "Output",
 CellChangeTimes->{3.90958873887934*^9, 3.909588846055838*^9, 
  3.9095907526121917`*^9, 3.909591275658029*^9, 3.909591615483451*^9, 
  3.90961061003729*^9, 3.9112235595079603`*^9, 3.9112238771358*^9, 
  3.9181330356720667`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"0038471d-aded-4461-8151-de027e3cdcd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<File_csv.csv\>\"", ",", "newD", ",", "\"\<CSV\>\""}], "]"}], 
   ",", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<File_tsv.tsv\>\"", ",", "newD", ",", "\"\<TSV\>\""}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.909588778472191*^9, 3.90958877847514*^9}, {
  3.9181330155938177`*^9, 3.9181330175561132`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"6bb89392-00e5-4473-9e58-61adc6ea699c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"File_csv.csv\"\>", ",", "\<\"File_tsv.tsv\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.909588779882038*^9, 3.9095888460725946`*^9, 
  3.9095907526327276`*^9, 3.909591275674459*^9, 3.90959161551315*^9, 
  3.909610610060856*^9, 3.91122355953568*^9, 3.911223877161419*^9, 
  3.918133037114904*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"6dd596df-c241-4273-b6de-966158811da7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<File_csv.csv\>\"", ",", "newD", ",", "\"\<CSV\>\"", ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<column 1\>\"", ",", "\"\<column 2\>\"", ",", "\"\<column 3\>\"", 
      ",", "\"\<column 4\>\"", ",", "\"\<column 5\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.909588813755991*^9, 3.909588819862228*^9}, {
  3.918133018949975*^9, 3.918133019120632*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"749f30af-f3e2-4082-9a6d-341a3e82bbe6"],

Cell[BoxData["\<\"File_csv.csv\"\>"], "Output",
 CellChangeTimes->{{3.909588814602254*^9, 3.909588846078253*^9}, 
   3.90959075263955*^9, 3.909591275680056*^9, 3.909591615523244*^9, 
   3.909610610066486*^9, 3.9112235595438538`*^9, 3.911223877209939*^9, 
   3.918133038723654*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"04960062-617c-4d88-8dbb-f291b68313f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Coordinates 1\>\"", ",", "\"\<Coordinates 2\>\"", ",", 
     "\"\<Coordindates 3\>\"", ",", "\"\<Coordinates 4\>\"", ",", 
     "\"\<Coordindates 5\>\""}], "}"}]}], ";", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<File_csv.csv\>\"", ",", "newD", ",", "\"\<CSV\>\"", ",", 
    RowBox[{"TableHeadings", "->", "labels"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9095889187130737`*^9, 3.9095889233528347`*^9}, {
  3.918133022567227*^9, 3.918133028241872*^9}, {3.919518998585457*^9, 
  3.919519005618935*^9}},ExpressionUUID->"b0bb1856-d148-4fa0-bbc6-\
edef6d093c9e"],

Cell[BoxData["\<\"File_csv.csv\"\>"], "Output",
 CellChangeTimes->{3.909588924620265*^9, 3.909590752645677*^9, 
  3.9095912756956596`*^9, 3.909591615555337*^9, 3.9096106100716887`*^9, 
  3.911223559574721*^9, 3.911223877216635*^9, 3.918133040218646*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"1b057941-f7ff-4be1-b5eb-4edcc1269f54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spData", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Statistics\>\"", ",", "\"\<CarStoppingDistances\>\""}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.909589035017564*^9, 3.909589035019678*^9}, {
  3.918133030211051*^9, 3.918133030888907*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"7fdf8128-e419-41f3-bb5a-a4696c8c9de7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "76"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "84"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "68"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "66"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "70"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "92"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "93"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "85"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.909589044893698*^9, 3.90959075918446*^9, 
  3.909591283624382*^9, 3.9095916179397497`*^9, 3.909610612948262*^9, 
  3.911223566739053*^9, 3.911223879983979*^9, 3.918133046470537*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"70012a92-203c-4ec3-b47b-265a9840f895"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Statistics\>\"", ",", "\"\<CarStoppingDistances\>\""}], 
      "}"}], ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<Description\>\"", ",", "\"\<ColumnDescriptions\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.9095890684089546`*^9, 3.9095890699835653`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"947f0221-717f-4fbe-b7e0-aa07bf898502"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Car stopping distances as a function of speed.\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Speed in miles per hour.\"\>", 
     ",", "\<\"Stopping distance in feet.\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.909589071803896*^9, 3.909590759266644*^9, 
  3.909591283703747*^9, 3.909591618023176*^9, 3.909610613022356*^9, 
  3.911223566844895*^9, 3.91122388006353*^9, 3.91813329046663*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"efcb0c5f-1152-4f9a-ade9-d4c34fade378"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spDataset", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Dataset", "[", 
      RowBox[{"spData", ",", 
       RowBox[{"Background", "->", "LightBlue"}]}], "]"}], "[", 
     RowBox[{"All", ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"#1", "->", "1"}], ",", 
        RowBox[{"#2", "->", "2"}]}], "|>"}]}], "]"}], "&"}], "[", 
   RowBox[{
   "\"\<Speed in miles per hours\>\"", ",", 
    "\"\<Stopping distance in feet\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9095891713772497`*^9, 3.909589179736485*^9}, {
  3.9181332930487347`*^9, 3.918133295559029*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"c97fee28-07bc-44b4-a273-675afa46a9c4"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Speed in miles per hours" -> 4, "Stopping distance in feet" -> 2|>, <|
       "Speed in miles per hours" -> 4, "Stopping distance in feet" -> 10|>, <|
       "Speed in miles per hours" -> 7, "Stopping distance in feet" -> 4|>, <|
       "Speed in miles per hours" -> 7, "Stopping distance in feet" -> 22|>, <|
       "Speed in miles per hours" -> 8, "Stopping distance in feet" -> 16|>, <|
       "Speed in miles per hours" -> 9, "Stopping distance in feet" -> 10|>, <|
       "Speed in miles per hours" -> 10, "Stopping distance in feet" -> 
        18|>, <|"Speed in miles per hours" -> 10, "Stopping distance in feet" -> 
        26|>, <|"Speed in miles per hours" -> 10, "Stopping distance in feet" -> 
        34|>, <|"Speed in miles per hours" -> 11, "Stopping distance in feet" -> 
        17|>, <|"Speed in miles per hours" -> 11, "Stopping distance in feet" -> 
        28|>, <|"Speed in miles per hours" -> 12, "Stopping distance in feet" -> 
        14|>, <|"Speed in miles per hours" -> 12, "Stopping distance in feet" -> 
        20|>, <|"Speed in miles per hours" -> 12, "Stopping distance in feet" -> 
        24|>, <|"Speed in miles per hours" -> 12, "Stopping distance in feet" -> 
        28|>, <|"Speed in miles per hours" -> 13, "Stopping distance in feet" -> 
        26|>, <|"Speed in miles per hours" -> 13, "Stopping distance in feet" -> 
        34|>, <|"Speed in miles per hours" -> 13, "Stopping distance in feet" -> 
        34|>, <|"Speed in miles per hours" -> 13, "Stopping distance in feet" -> 
        46|>, <|"Speed in miles per hours" -> 14, "Stopping distance in feet" -> 
        26|>, <|"Speed in miles per hours" -> 14, "Stopping distance in feet" -> 
        36|>, <|"Speed in miles per hours" -> 14, "Stopping distance in feet" -> 
        60|>, <|"Speed in miles per hours" -> 14, "Stopping distance in feet" -> 
        80|>, <|"Speed in miles per hours" -> 15, "Stopping distance in feet" -> 
        20|>, <|"Speed in miles per hours" -> 15, "Stopping distance in feet" -> 
        26|>, <|"Speed in miles per hours" -> 15, "Stopping distance in feet" -> 
        54|>, <|"Speed in miles per hours" -> 16, "Stopping distance in feet" -> 
        32|>, <|"Speed in miles per hours" -> 16, "Stopping distance in feet" -> 
        40|>, <|"Speed in miles per hours" -> 17, "Stopping distance in feet" -> 
        32|>, <|"Speed in miles per hours" -> 17, "Stopping distance in feet" -> 
        40|>, <|"Speed in miles per hours" -> 17, "Stopping distance in feet" -> 
        50|>, <|"Speed in miles per hours" -> 18, "Stopping distance in feet" -> 
        42|>, <|"Speed in miles per hours" -> 18, "Stopping distance in feet" -> 
        56|>, <|"Speed in miles per hours" -> 18, "Stopping distance in feet" -> 
        76|>, <|"Speed in miles per hours" -> 18, "Stopping distance in feet" -> 
        84|>, <|"Speed in miles per hours" -> 19, "Stopping distance in feet" -> 
        36|>, <|"Speed in miles per hours" -> 19, "Stopping distance in feet" -> 
        46|>, <|"Speed in miles per hours" -> 19, "Stopping distance in feet" -> 
        68|>, <|"Speed in miles per hours" -> 20, "Stopping distance in feet" -> 
        32|>, <|"Speed in miles per hours" -> 20, "Stopping distance in feet" -> 
        48|>, <|"Speed in miles per hours" -> 20, "Stopping distance in feet" -> 
        52|>, <|"Speed in miles per hours" -> 20, "Stopping distance in feet" -> 
        56|>, <|"Speed in miles per hours" -> 20, "Stopping distance in feet" -> 
        64|>, <|"Speed in miles per hours" -> 22, "Stopping distance in feet" -> 
        66|>, <|"Speed in miles per hours" -> 23, "Stopping distance in feet" -> 
        54|>, <|"Speed in miles per hours" -> 24, "Stopping distance in feet" -> 
        70|>, <|"Speed in miles per hours" -> 24, "Stopping distance in feet" -> 
        92|>, <|"Speed in miles per hours" -> 24, "Stopping distance in feet" -> 
        93|>, <|"Speed in miles per hours" -> 24, "Stopping distance in feet" -> 
        120|>, <|"Speed in miles per hours" -> 25, 
        "Stopping distance in feet" -> 85|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Speed in miles per hours"} -> 
        1, {All, "Stopping distance in feet"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Speed in miles per hours" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "Stopping distance in feet" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Speed in miles per hours", "Stopping distance in feet"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 50], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Speed in miles per hours"} -> 
        1, {All, "Stopping distance in feet"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Speed in miles per hours" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "Stopping distance in feet" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Speed in miles per hours", "Stopping distance in feet"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 50], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 50, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Speed in miles per hours", 
                  Style[
                  "Speed in miles per hours", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Speed in miles per hours"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Speed in miles per hours"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Stopping distance in feet", 
                  Style[
                  "Stopping distance in feet", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Stopping distance in feet"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Stopping distance in feet"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Speed in miles per hours"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Stopping distance in feet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 50, 1], {1, 50 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 50, 1], {1, 50 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[50, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[50, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 50, 1], {1, 50 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 50, 1], {1, 50 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{327., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{327., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.909589180716007*^9, 3.909590759301146*^9, 
  3.909591283741271*^9, 3.909591618060268*^9, 3.909610613063523*^9, 
  3.911223566888145*^9, 3.911223880116093*^9, 3.9181332963693533`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"15596e4b-a886-4be7-81f3-8ecce105e8d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Dataset_csv.csv\>\"", ",", "spDataset", ",", "\"\<CSV\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.909589410739738*^9, 3.909589410742207*^9}, {
  3.918133316868438*^9, 3.9181333170220823`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"f9414143-70be-4939-aad1-225021902cb9"],

Cell[BoxData["\<\"Dataset_csv.csv\"\>"], "Output",
 CellChangeTimes->{3.909589411530334*^9, 3.9095907593158484`*^9, 
  3.909591283760398*^9, 3.909591618065216*^9, 3.9096106130679083`*^9, 
  3.911223567047047*^9, 3.9112238803756447`*^9, 3.918133322259775*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"4ddccd40-5919-4b13-8085-0f3dbc85ac05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Dataset_tsv.tsv\>\"", ",", "spDataset", ",", "\"\<TSV\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9095894659401484`*^9, 3.909589465943438*^9}, {
  3.9181333204717903`*^9, 3.9181333205953712`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"18b5e7cd-4646-4b35-be74-143ca0ada92e"],

Cell[BoxData["\<\"Dataset_tsv.tsv\"\>"], "Output",
 CellChangeTimes->{3.909589466644968*^9, 3.9095907593207493`*^9, 
  3.909591283765456*^9, 3.909591618081599*^9, 3.909610613084244*^9, 
  3.911223567064359*^9, 3.911223880382256*^9, 3.9181333232596073`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"a90af5f8-0cf2-4a72-bcc9-929f1d990b59"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.3.2 XLS and XLSX Formats", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 
  3.908461200864008*^9}},ExpressionUUID->"0b32360f-b3ee-4800-a096-\
01512bbf5005"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "@", 
  RowBox[{"Normal", "@", "spDataset"}]}]], "Input",
 CellChangeTimes->{{3.909589688342226*^9, 3.9095896883446007`*^9}, {
  3.9181333404900713`*^9, 3.918133340686425*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"65c5c66f-7e0a-41e9-a365-2ce3339d941f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "76"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "84"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "68"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "66"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "70"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "92"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "93"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "85"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.909589689447536*^9, 3.909590759325476*^9, 
  3.909591283769995*^9, 3.90959161808727*^9, 3.90961061308944*^9, 
  3.911223567069454*^9, 3.9112238804054003`*^9, 3.918133366508338*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"c26935b0-be84-43ea-a901-64e67efc5694"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"colTitles", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Speed in miles per hours\>\"", ",", 
     "\"\<Stopping distance in feet\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.909589734080244*^9, 3.909589734083859*^9}, {
  3.9181333692806673`*^9, 3.918133369429126*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"f6f476ea-3050-4a12-891a-56b723d6dc94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{
   RowBox[{"exprtData", "=", 
    RowBox[{"Prepend", "[", 
     RowBox[{"%%", ",", "colTitles"}], "]"}]}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.9095897697123547`*^9, 3.909589771331601*^9}, {
  3.918133374952879*^9, 3.918133376890931*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"f4d9d1a6-d238-42e1-a267-4ad8ff17a8d6"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Speed in miles per hours\"\>", 
      ",", "\<\"Stopping distance in feet\"\>"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "49", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"25", ",", "85"}], "}"}]}], "}"}],
  Short[#, 1]& ]], "Output",
 CellChangeTimes->{3.9095897737131033`*^9, 3.909590759343409*^9, 
  3.909591283777211*^9, 3.909591618109305*^9, 3.909610613105886*^9, 
  3.911223567090339*^9, 3.911223880415483*^9, 3.918133380895158*^9},
 CellLabel->
  "Out[78]//Short=",ExpressionUUID->"76ea8679-f973-4e26-be34-3dbee9058d2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<Stopping_distance_Dataset.xlsx\>\"", ",", "exprtData", ",", 
   "\"\<XLSX\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.909589822922398*^9, 3.9095898229258213`*^9}, {
  3.918133382873516*^9, 3.9181333830677567`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"69d8b4de-ac83-40d8-bfa0-da7eff2f66a1"],

Cell[BoxData["\<\"Stopping_distance_Dataset.xlsx\"\>"], "Output",
 CellChangeTimes->{3.909589824524549*^9, 3.90959075976227*^9, 
  3.909591284221639*^9, 3.909591618571998*^9, 3.909610613538398*^9, 
  3.9112235676052322`*^9, 3.911223881000399*^9, 3.9181333844816093`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"1c9aadf6-b0a2-49ac-81d1-8535364ff763"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.3.3 JSON Format", "Subsection",
 CellChangeTimes->{{3.909590014531034*^9, 
  3.9095900303306417`*^9}},ExpressionUUID->"7dbd427e-4ca7-4921-879c-\
efdc14fa5844"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Association", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "->", "\"\<Ellis\>\""}], ",", 
     RowBox[{"\"\<Date of birth\>\"", "->", "\"\<1990,01,04\>\""}], ",", 
     RowBox[{"\"\<Height\>\"", "->", "\"\<180 cm\>\""}], ",", 
     RowBox[{"\"\<Favorite color\>\"", "->", "\"\<Red\>\""}], ",", 
     RowBox[{
     "\"\<Hobbies\>\"", "->", "\"\<Soccer, Pc gaming, Board games\>\""}], ",", 
     RowBox[{"\"\<Social netwoks\>\"", "->", "\"\<Twitter, Facebook\>\""}]}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<File_json.json\>\"", ",", "%", ",", "\"\<JSON\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9095900391339903`*^9, 3.909590057091366*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"cf417b6a-83c8-4f54-a4b6-fd4836171b68"],

Cell[BoxData["\<\"File_json.json\"\>"], "Output",
 CellChangeTimes->{3.909590058692395*^9, 3.90959075976695*^9, 
  3.909591284227518*^9, 3.909591618577189*^9, 3.909610613543852*^9, 
  3.911223567610725*^9, 3.9112238810295773`*^9, 3.9181334083850927`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"6ae4e60b-ad52-4b6b-96fd-3670b93b5d90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Association", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "->", "\"\<Ellis\>\""}], ",", 
     RowBox[{"\"\<Date of birth\>\"", "->", 
      RowBox[{"DateObject", "[", 
       RowBox[{"{", 
        RowBox[{"1990", ",", "01", ",", "04"}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Height\>\"", "->", 
      RowBox[{"Quantity", "[", 
       RowBox[{"180", ",", "\"\<Centimeters\>\""}], "]"}]}], ",", 
     RowBox[{"\"\<Favorite color\>\"", "->", "\"\<Red\>\""}], ",", 
     RowBox[{
     "\"\<Hobbies\>\"", "->", "\"\<Soccer, Pc gaming, Board games\>\""}], ",", 
     RowBox[{"\"\<Social netwoks\>\"", "->", "\"\<Twitter, Facebook\>\""}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"user", "=", 
  RowBox[{"Dataset", "[", "%", "]"}]}]}], "Input",
 CellChangeTimes->{{3.909590156684586*^9, 3.909590203506199*^9}, {
  3.91813341609517*^9, 3.918133416823018*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"2aaac9c9-2c44-434b-94a6-333800ed285e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Name" -> "Ellis", "Date of birth" -> DateObject[{1990, 1, 4}, "Day"], 
       "Height" -> Quantity[180, "Centimeters"], "Favorite color" -> "Red", 
       "Hobbies" -> "Soccer, Pc gaming, Board games", "Social netwoks" -> 
       "Twitter, Facebook"|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Name"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {
         "Date of birth"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Height"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Favorite color"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"Hobbies"} -> 
        TypeSystem`PackageScope`AtomShape[336.00000000000006`], {
         "Social netwoks"} -> TypeSystem`PackageScope`AtomShape[190.4]|>, 1], 
     "InitialType" -> 
     TypeSystem`Struct[{
       "Name", "Date of birth", "Height", "Favorite color", "Hobbies", 
        "Social netwoks"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[DateObject], 
        TypeSystem`Atom[
         Quantity[1, "Centimeters"]], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Name"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {
         "Date of birth"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Height"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Favorite color"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"Hobbies"} -> 
        TypeSystem`PackageScope`AtomShape[336.00000000000006`], {
         "Social netwoks"} -> TypeSystem`PackageScope`AtomShape[190.4]|>, 1], 
     "Type" -> TypeSystem`Struct[{
       "Name", "Date of birth", "Height", "Favorite color", "Hobbies", 
        "Social netwoks"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[DateObject], 
        TypeSystem`Atom[
         Quantity[1, "Centimeters"]], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 6, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Ellis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Date of birth", 
                  Style[
                  "Date of birth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Date of birth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Date of birth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 4 Jan 1990\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Date of birth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Height", 
                  Style[
                  "Height", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Height"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Height"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"180", "\"cm\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Height"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Favorite color", 
                  Style[
                  "Favorite color", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Favorite color"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Favorite color"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Favorite color"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hobbies", 
                  Style[
                  "Hobbies", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hobbies"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hobbies"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Soccer, Pc gaming, Board games", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hobbies"]}, "Item", False], "Mouse"], 
              ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Social netwoks", 
                  Style[
                  "Social netwoks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Social netwoks"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Social netwoks"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Twitter, Facebook", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Social netwoks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{190.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{444., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{444., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.90959020626476*^9, 3.909590759788108*^9, 
  3.909591284257697*^9, 3.909591618602475*^9, 3.90961061356807*^9, 
  3.911223567635564*^9, 3.911223881057025*^9, 3.91813341767482*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"5c12cf27-6665-4b60-a673-03ee9e8df241"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Dataset_json.json\>\"", ",", "user", ",", "\"\<JSON\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.909590716439611*^9, 3.9095907164425926`*^9}, {
  3.918133457942417*^9, 3.9181334582699413`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"b2e71aa1-8d50-43c3-9f3a-f8a9fa2f94be"],

Cell[BoxData["\<\"Dataset_json.json\"\>"], "Output",
 CellChangeTimes->{3.909590718011539*^9, 3.909590759863581*^9, 
  3.909591284355255*^9, 3.909591618688766*^9, 3.90961061358315*^9, 
  3.911223567714788*^9, 3.911223881138422*^9, 3.918133459040262*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"27705e7c-ab69-42f6-a14c-8eeed0d0a35a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"assoc1", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Log in Date\>\"", "->", 
      RowBox[{"DateObject", "[", 
       RowBox[{"{", 
        RowBox[{"2020", ",", "06", ",", "29"}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<User ID\>\"", "->", "123"}], ",", 
     RowBox[{"\"\<Status\>\"", "->", "\"\<Active\>\""}]}], "|>"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"assoc2", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Log in Date\>\"", "->", 
       RowBox[{"DateObject", "[", 
        RowBox[{"{", 
         RowBox[{"2020", ",", "06", ",", "28"}], "}"}], "]"}]}], ",", 
      RowBox[{"\"\<User ID\>\"", "->", "122"}], ",", 
      RowBox[{"\"\<Status\>\"", "->", "\"\<Not Active\>\""}]}], "|>"}]}], ";", 
   RowBox[{"Dataset", "[", 
    RowBox[{"{", 
     RowBox[{"assoc1", ",", "assoc2"}], "}"}], "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Dataset2_json.json\>\"", ",", "%", ",", "\"\<JSON\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.909590797829191*^9, 3.909590797832284*^9}, {
  3.909590835608151*^9, 3.909590845816883*^9}, {3.918133461227887*^9, 
  3.918133466411798*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"f3de77d6-628e-43eb-9022-b321a2a8eaaf"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Log in Date" -> DateObject[{2020, 6, 29}, "Day"], "User ID" -> 123, 
        "Status" -> "Active"|>, <|
       "Log in Date" -> DateObject[{2020, 6, 28}, "Day"], "User ID" -> 122, 
        "Status" -> "Not Active"|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Log in Date"} -> 
        1, {All, "User ID"} -> 1, {All, "Status"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Log in Date" -> TypeSystem`PackageScope`AtomShape[75], "User ID" -> 
            TypeSystem`PackageScope`AtomShape[34], "Status" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`]|>], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Log in Date", "User ID", "Status"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Log in Date"} -> 
        1, {All, "User ID"} -> 1, {All, "Status"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Log in Date" -> TypeSystem`PackageScope`AtomShape[75], "User ID" -> 
            TypeSystem`PackageScope`AtomShape[34], "Status" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`]|>], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Log in Date", "User ID", "Status"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Log in Date", 
                  Style[
                  "Log in Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Log in Date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Log in Date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["User ID", 
                  Style[
                  "User ID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "User ID"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "User ID"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Status", 
                  Style[
                  "Status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Status"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Status"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 29 Jun 2020\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Log in Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["123"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["User ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Active", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 28 Jun 2020\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Log in Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["122"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["User ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Not Active", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{279., {47.134033203125, 52.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{279., {47.134033203125, 52.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.909590847844892*^9, 3.909591284385384*^9, 
  3.90959161871533*^9, 3.909610613608784*^9, 3.91122356774548*^9, 
  3.911223881165037*^9, 3.9181334681572723`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"b98cbfa5-9a7f-47a3-8325-f7825ada8c42"],

Cell[BoxData["\<\"Dataset2_json.json\"\>"], "Output",
 CellChangeTimes->{3.909590847844892*^9, 3.909591284385384*^9, 
  3.90959161871533*^9, 3.909610613608784*^9, 3.91122356774548*^9, 
  3.911223881165037*^9, 3.918133468213355*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"ce7d1050-33b8-4d86-a209-a067a536f776"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"assoc3", "=", 
   RowBox[{"\"\<Player A\>\"", "->", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{"\"\<Date\>\"", "->", 
       RowBox[{"DateObject", "[", 
        RowBox[{"{", 
         RowBox[{"2020", ",", "06", ",", "29"}], "}"}], "]"}]}], ",", 
      RowBox[{"\"\<User ID\>\"", "->", "123"}], ",", 
      RowBox[{"\"\<Status\>\"", "->", "\"\<Active\>\""}]}], "]"}]}]}], ";", 
  RowBox[{"assoc4", "=", 
   RowBox[{"\"\<Player B\>\"", "->", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{"\"\<Date\>\"", "->", 
       RowBox[{"DateObject", "[", 
        RowBox[{"{", 
         RowBox[{"2020", ",", "06", ",", "28"}], "}"}], "]"}]}], ",", 
      RowBox[{"\"\<User ID\>\"", "->", "122"}], ",", 
      RowBox[{"\"\<Status\>\"", "->", "\"\<Not Active\>\""}]}], "]"}]}]}], 
  ";", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", 
    RowBox[{"<|", 
     RowBox[{"assoc3", ",", "assoc4"}], "|>"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.909591016096698*^9, 3.90959103324607*^9}, {
  3.9181335002431393`*^9, 3.918133506651876*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"86455831-f57f-4def-b206-f5307e57a595"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Player A" -> <|
         "Date" -> DateObject[{2020, 6, 29}, "Day"], "User ID" -> 123, 
          "Status" -> "Active"|>, 
        "Player B" -> <|
         "Date" -> DateObject[{2020, 6, 28}, "Day"], "User ID" -> 122, 
          "Status" -> "Not Active"|>|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "Date"} -> 
        1, {All, All, "User ID"} -> 1, {All, All, "Status"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "Date" -> TypeSystem`PackageScope`AtomShape[75], "User ID" -> 
               TypeSystem`PackageScope`AtomShape[34], "Status" -> 
               TypeSystem`PackageScope`AtomShape[112.00000000000001`]|>], 
             DirectedInfinity[1], 3, {All, All}]]], 2, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Date", "User ID", "Status"}, {
          TypeSystem`Atom[DateObject], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[String]}], 2], 1], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "Date"} -> 
        1, {All, All, "User ID"} -> 1, {All, All, "Status"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "Date" -> TypeSystem`PackageScope`AtomShape[75], "User ID" -> 
               TypeSystem`PackageScope`AtomShape[34], "Status" -> 
               TypeSystem`PackageScope`AtomShape[112.00000000000001`]|>], 
             DirectedInfinity[1], 3, {All, All}]]], 2, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Date", "User ID", "Status"}, {
          TypeSystem`Atom[DateObject], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[String]}], 2], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     1, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Date", 
                  Style[
                  "Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["User ID", 
                  Style[
                  "User ID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "User ID"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "User ID"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Status", 
                  Style[
                  "Status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Status"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Status"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Player A", 
                  Style[
                  "Player A", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Player A"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Player A"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 29 Jun 2020\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Player A"], 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["123"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Player A"], 
                 Key["User ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Active", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Player A"], 
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Player B", 
                  Style[
                  "Player B", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Player B"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Player B"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 28 Jun 2020\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Player B"], 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["122"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Player B"], 
                 Key["User ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Not Active", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Player B"], 
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{377., {47.134033203125, 52.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{377., {47.134033203125, 52.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.909591034725205*^9, 3.909591284471035*^9, 
  3.909591618798849*^9, 3.9096106136391363`*^9, 3.9112235678567457`*^9, 
  3.91122388124536*^9, 3.918133507154395*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"dc3e8374-ecad-4750-a2cf-b5dc521dd010"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Dataset3_json.json\>\"", ",", "%", ",", "\"\<JSON\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.909591144779626*^9, 3.909591144782578*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"28668bcb-5665-4086-baac-30e14ec97e95"],

Cell[BoxData["\<\"Dataset3_json.json\"\>"], "Output",
 CellChangeTimes->{3.909591146415641*^9, 3.909591284544383*^9, 
  3.9095916188688993`*^9, 3.9096106136436377`*^9, 3.911223567922673*^9, 
  3.911223881310464*^9, 3.918133544955201*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"9d3f9794-35c5-48d2-8f60-40d3ad42b0b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<apple\>\"", "->", "3"}], ",", 
     RowBox[{"\"\<car\>\"", "->", "\"\<3\>\""}], ",", 
     RowBox[{"\"\<2\>\"", "->", "2"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Rules.json\>\"", ",", "rules", ",", "\"\<JSON\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.909591219688093*^9, 3.909591232137248*^9}, {
  3.9181335469617577`*^9, 3.918133548864088*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"133632df-05f9-4d1a-b189-bd2443a9eb8b"],

Cell[BoxData["\<\"Rules.json\"\>"], "Output",
 CellChangeTimes->{{3.909591222151484*^9, 3.909591232578836*^9}, 
   3.909591284559989*^9, 3.909591618893491*^9, 3.909610613657558*^9, 
   3.911223567939625*^9, 3.911223881326754*^9, 3.918133549468574*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"e5a4c855-ecc2-49b2-82d5-6a77f9e1ed64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"arry", "=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Array.json\>\"", ",", "arry", ",", "\"\<JSON\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.909591320454379*^9, 3.909591320457516*^9}, {
  3.918133551406179*^9, 3.918133553124997*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"72df940e-107e-4f7e-b768-5f81bbc56eb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.90959132211513*^9, 3.909591618899596*^9, 
  3.909610613662293*^9, 3.911223567944568*^9, 3.91122388133215*^9, 
  3.918133554045198*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"77cc0c23-497f-4f67-8dfc-0af10bcb20d8"],

Cell[BoxData["\<\"Array.json\"\>"], "Output",
 CellChangeTimes->{3.90959132211513*^9, 3.909591618899596*^9, 
  3.909610613662293*^9, 3.911223567944568*^9, 3.91122388133215*^9, 
  3.918133554046564*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"23c42fe8-6918-4839-91a9-716305b41720"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.3.4 Content File Objects", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 3.908461203835269*^9}, {3.909590034145334*^9, 
  3.909590034252898*^9}},ExpressionUUID->"7f2eb80e-c9a7-4130-98d0-\
b0d9a4b27678"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Association", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "->", "\"\<Ellis\>\""}], ",", 
     RowBox[{"\"\<Date of birth\>\"", "->", 
      RowBox[{"DateObject", "[", 
       RowBox[{"{", 
        RowBox[{"1990", ",", "01", ",", "04"}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Height\>\"", "->", 
      RowBox[{"Quantity", "[", 
       RowBox[{"180", ",", "\"\<Centimeters\>\""}], "]"}]}], ",", 
     RowBox[{"\"\<Favorite color\>\"", "->", "\"\<Red\>\""}], ",", 
     RowBox[{
     "\"\<Hobbies\>\"", "->", "\"\<Soccer, Pc gaming, Board games\>\""}], ",", 
     RowBox[{"\"\<Social netwoks\>\"", "->", "\"\<Twitter, Facebook\>\""}]}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"user", "=", 
   RowBox[{"Dataset", "[", "%", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jsonFile", "=", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<Dataset_json_2.json\>\"", ",", "user", ",", "\"\<JSON\>\""}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.909591561083136*^9, 3.909591587703491*^9}, {
  3.9181335713907347`*^9, 3.918133576733088*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"0455d870-b68e-4c14-b4bf-84d8a0063b33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteFileName", "[", "jsonFile", "]"}]], "Input",
 CellChangeTimes->{{3.90959163566486*^9, 3.9095916356678257`*^9}, {
  3.918133578604748*^9, 3.918133578883443*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"235ca0e4-371a-4c3d-abe1-fc79b79648d3"],

Cell[BoxData["\<\"/Users/macosx/Desktop/Dataset_json_2.json\"\>"], "Output",
 CellChangeTimes->{3.909591636814866*^9, 3.909610613678741*^9, 
  3.911223567967729*^9, 3.9112238813560867`*^9, 3.9181335982692003`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"621f4cdc-5abb-4a00-b93c-11cea926dbef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContentObject", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.909594182952507*^9, 3.909594185709137*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"61e992b9-c361-4aa4-9eab-b6324d9bec4d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ContentObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.00811853054597118], {
               FaceForm[{
                 RGBColor[0.647, 0.647, 0.647], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                25.148}, {123.17499999999998`, 25.148}, {123.17499999999998`, 
                39.333}, {0., 39.333}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                51.815}, {123.17499999999998`, 51.815}, {123.17499999999998`, 
                66.}, {0., 66.}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                0.}, {123.17499999999998`, 0.}, {123.17499999999998`, 
                14.185}, {0., 14.185}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{49.615, 
                100.193}, {123.17500000000001`, 100.193}, {
                123.17500000000001`, 113.628}, {49.615, 113.628}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{49.615, 
                74.504}, {123.17500000000001`, 74.504}, {123.17500000000001`, 
                88.60600000000001}, {49.615, 88.60600000000001}}}]}, {
               FaceForm[{
                 RGBColor[0., 0.502, 0.761], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJtIGYCYsd3Sj6Bm5wc9NZ9nFlzMtKh+MA6tfdtTg5W
2+YpusyNcggwrTJ1yHRyyJlVPidrRbTDr+So2WlJTg5Sx+4qJAXGONyt7et3
O+EI5xdnTHy7JsrR4cpXl+t7uWMchL82+RcrODpU9cYuqvoa7cDVMjdJNMYB
zn9fGhQ/rU8Fzi/KsXXekagI58tEpVjHn5V3cN6wKu7Zn2iHBQH+8o0LZOD2
+U+WzNf+K47Bn6dmfM+vPdqha32ZyPMbYg59Z/tCrs+Mcjh6+vLORVtEHXYt
miKwZF+kg2vTyrRrL6Xh/LLeacy2m+Qc9nAET+GOj3I4PT+fe5qbgkM1MBQs
TkY5JKs+izy5StHhx6PubwXs0Q5hH24LJGspOzjkhiyPDo92+H/u2wveGlUH
voczUssroh02Sj5oeiOiD+cbLBB/F6NgjMFPO1pQuqAgBM73OXX3+Qn/YIcV
xa6aC1caOVzO7Yxx0A526HX+q/fmjJbD67Dznv2iCP4NoU+O59cFOTjosvEX
t9hi8GHqWcUOTHmoagE3z1V/cUTeRnO4fTA+zD0wPsy9ZT53p8ZusIbzlzz6
38fB7ADne+SU8y+ocHCIXT5xWlR0tIPzcT4twa8ODrdX+LEXMUc7dAdev/Xb
xREenrVcDR95+hwdfP3e8jzOjXLIO6zBIXfdER4f6OkTAA0eKxE=
                "]]}}, AspectRatio -> Automatic, ImageSize -> {32., 28.}, 
             PlotRange -> {{0., 123.17499999999998`}, {0., 
              121.71100000000001`}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Plaintext: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/macosx/Desktop/Dat\\naset_json_2.json\"", 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.00811853054597118], {
               FaceForm[{
                 RGBColor[0.647, 0.647, 0.647], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                25.148}, {123.17499999999998`, 25.148}, {123.17499999999998`, 
                39.333}, {0., 39.333}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                51.815}, {123.17499999999998`, 51.815}, {123.17499999999998`, 
                66.}, {0., 66.}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                0.}, {123.17499999999998`, 0.}, {123.17499999999998`, 
                14.185}, {0., 14.185}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{49.615, 
                100.193}, {123.17500000000001`, 100.193}, {
                123.17500000000001`, 113.628}, {49.615, 113.628}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{49.615, 
                74.504}, {123.17500000000001`, 74.504}, {123.17500000000001`, 
                88.60600000000001}, {49.615, 88.60600000000001}}}]}, {
               FaceForm[{
                 RGBColor[0., 0.502, 0.761], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJtIGYCYsd3Sj6Bm5wc9NZ9nFlzMtKh+MA6tfdtTg5W
2+YpusyNcggwrTJ1yHRyyJlVPidrRbTDr+So2WlJTg5Sx+4qJAXGONyt7et3
O+EI5xdnTHy7JsrR4cpXl+t7uWMchL82+RcrODpU9cYuqvoa7cDVMjdJNMYB
zn9fGhQ/rU8Fzi/KsXXekagI58tEpVjHn5V3cN6wKu7Zn2iHBQH+8o0LZOD2
+U+WzNf+K47Bn6dmfM+vPdqha32ZyPMbYg59Z/tCrs+Mcjh6+vLORVtEHXYt
miKwZF+kg2vTyrRrL6Xh/LLeacy2m+Qc9nAET+GOj3I4PT+fe5qbgkM1MBQs
TkY5JKs+izy5StHhx6PubwXs0Q5hH24LJGspOzjkhiyPDo92+H/u2wveGlUH
voczUssroh02Sj5oeiOiD+cbLBB/F6NgjMFPO1pQuqAgBM73OXX3+Qn/YIcV
xa6aC1caOVzO7Yxx0A526HX+q/fmjJbD67Dznv2iCP4NoU+O59cFOTjosvEX
t9hi8GHqWcUOTHmoagE3z1V/cUTeRnO4fTA+zD0wPsy9ZT53p8ZusIbzlzz6
38fB7ADne+SU8y+ocHCIXT5xWlR0tIPzcT4twa8ODrdX+LEXMUc7dAdev/Xb
xREenrVcDR95+hwdfP3e8jzOjXLIO6zBIXfdER4f6OkTAA0eKxE=
                "]]}}, AspectRatio -> Automatic, ImageSize -> {32., 28.}, 
             PlotRange -> {{0., 123.17499999999998`}, {0., 
              121.71100000000001`}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Plaintext: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/macosx/Desktop/Dat\\naset_json_2.json\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"CreationDate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wed 28 Feb 2024 12:26:39\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ContentObject[<|
   "Plaintext" -> "/Users/macosx/Desktop/Dataset_json_2.json", "CreationDate" -> 
    DateObject[{2024, 2, 28, 12, 26, 39.514679`8.349333436793406}, "Instant", 
      "Gregorian", -6.]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.90959418619445*^9, 3.90961061369271*^9, 
  3.911223567981096*^9, 3.9112238813670483`*^9, 3.918133599524168*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"dc7d96eb-8d9c-455d-8ed3-a5bfcdc6a815"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ContentObject", "[", "%%", "]"}], "[", "\"\<Properties\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.909594420062794*^9, 3.909594420065276*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"a3ba12a9-c9da-4e57-9b3c-762ac0db8898"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CreationDate\"\>", ",", "\<\"Plaintext\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{3.909594421327944*^9, 3.909610613795692*^9, 
  3.9112235680035257`*^9, 3.911223881487634*^9, 3.9181336009632893`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"d27dee76-6e0f-4ea8-9822-d1cdb2338430"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.3.5 Searching Files with Wolfram Language", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461165526601*^9, 3.908461205913365*^9}, {3.909590036979114*^9, 
  3.909590037190846*^9}, {3.909594086995439*^9, 3.90959412728591*^9}, {
  3.909612351017981*^9, 
  3.909612352202786*^9}},ExpressionUUID->"5ad26a07-d2f2-4b5c-9693-\
9cc01fcb3622"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.909594846464096*^9, 3.909594846467374*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"df1218b5-689c-45f6-89bb-9ba407755aea"],

Cell[BoxData["\<\"/Users/macosx/Desktop/\"\>"], "Output",
 CellChangeTimes->{3.909610613810635*^9, 3.911223568009343*^9, 
  3.911223881493306*^9, 3.918133631757595*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"4c468b59-8024-40e5-9ee5-0d5feff5503a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.90959485213985*^9, 3.90959485214209*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"1d80d35b-57b1-44ea-892b-c9979fa5255a"],

Cell[BoxData["\<\"/Users/macosx/Desktop\"\>"], "Output",
 CellChangeTimes->{3.909610613828706*^9, 3.911223568031562*^9, 
  3.911223881498548*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"2357cc73-16bf-411d-b1d8-a15cdde3d2c3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FileNames", "[", "]"}]], "Input",
 CellChangeTimes->{{3.909594888041888*^9, 3.909594888045107*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"4f9f99f5-ec64-4cc1-b0dc-a36d35571a1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFile", "[", "\"\<Color_table.txt\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.909594900476284*^9, 3.909594900479343*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"fb49a06a-cb20-45f6-b09f-a2de4b2fd534"],

Cell[BoxData["\<\"/Users/macosx/Desktop/Color_table.txt\"\>"], "Output",
 CellChangeTimes->{3.911223568058705*^9, 3.911223881524282*^9, 
  3.911224297865131*^9, 3.918133647370943*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"ba470c76-27a4-407a-95c8-cb136fdf2faf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNames", "[", "\"\<*.txt\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9095949159415216`*^9, 3.909594915944471*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"431db922-74ae-47ab-acfd-1a10eba5282c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Color_table.txt\"\>", ",", "\<\"File_text.txt\"\>", 
   ",", "\<\"Hello_World.txt\"\>", ",", "\<\"New_File.txt\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.911223568067239*^9, 3.911223881528816*^9, 
  3.911224333398696*^9, 3.9181336491226063`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"75695af8-6acb-420c-a456-8a8a3eaa53e1"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.4 Connecting to External Services", "Section",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461218476933*^9, 3.908461239015407*^9}, {3.909615295670476*^9, 
  3.909615315364826*^9}},ExpressionUUID->"4790b61a-eba2-4adc-be63-\
1cbb2672c51d"],

Cell[CellGroupData[{

Cell["4.4.1 External Connections", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461218476933*^9, 3.908461233179439*^9}, {3.908461267882868*^9, 
  3.908461275823293*^9}, {3.910102865442316*^9, 
  3.910102867473898*^9}},ExpressionUUID->"a4ded67b-933f-4d19-8833-\
767d6d36fab3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindExternalEvaluators", "[", "\"\<Shell\>\"", "]"}], "//", 
   "Normal"}], "//", "Print"}]], "Input",
 CellChangeTimes->{{3.910107143370751*^9, 3.9101071442186203`*^9}, {
   3.9101077624529276`*^9, 3.910107771667633*^9}, {3.91010986890992*^9, 
   3.910109893968166*^9}, 3.910110014377722*^9, {3.9101100784595213`*^9, 
   3.910110105913317*^9}, {3.910110293031145*^9, 3.910110293535337*^9}, {
   3.910110341747096*^9, 3.910110342914161*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"768291da-19ba-4fb7-9151-5192bec93c53"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"e62f301a-113c-2233-787d-bbc45334624d\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"System\"\>", "\[Rule]", "\<\"Shell\"\>"}], ",", 
      RowBox[{"\<\"Evaluator\"\>", "\[Rule]", "\<\"/bin/bash\"\>"}], ",", 
      RowBox[{"\<\"Executable\"\>", "\[Rule]", "\<\"/bin/bash\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"/bin/bash\"\>"}], ",", 
      RowBox[{"\<\"Registered\"\>", "\[Rule]", "False"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9bcd31a2-7c42-bbd1-9dc1-4835a345f5e7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"System\"\>", "\[Rule]", "\<\"Shell\"\>"}], ",", 
      RowBox[{"\<\"Evaluator\"\>", "\[Rule]", "\<\"/bin/sh\"\>"}], ",", 
      RowBox[{"\<\"Executable\"\>", "\[Rule]", "\<\"/bin/sh\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"/bin/sh\"\>"}], ",", 
      RowBox[{"\<\"Registered\"\>", "\[Rule]", "False"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"e2eccf19-48e9-c8bf-e536-84acda0d1700\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"System\"\>", "\[Rule]", "\<\"Shell\"\>"}], ",", 
      RowBox[{"\<\"Evaluator\"\>", "\[Rule]", "\<\"/bin/zsh\"\>"}], ",", 
      RowBox[{"\<\"Executable\"\>", "\[Rule]", "\<\"/bin/zsh\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"/bin/zsh\"\>"}], ",", 
      RowBox[{"\<\"Registered\"\>", "\[Rule]", "False"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Print",
 CellChangeTimes->{3.910110343597231*^9, 3.910119288870864*^9, 
  3.910119476739978*^9, 3.910813644561379*^9, 3.91122356824037*^9, 
  3.911223881717532*^9, 3.9181337092496347`*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"13c5015e-0057-4c88-b224-7d684627f7e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["echo 'Hello World!'", "ExternalLanguage",
 CellEvaluationLanguage->"Shell",
 CellChangeTimes->{{3.910132977254587*^9, 3.910133037319228*^9}, {
  3.910133076109467*^9, 3.910133083379341*^9}, {3.910133233431057*^9, 
  3.910133250305765*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"0c84342d-3ad5-4952-8223-568f5c29bed3"],

Cell[BoxData["\<\"Hello World!\"\>"], "Print",
 CellChangeTimes->{3.910133251656691*^9, 3.910813646864294*^9, 
  3.911223568336736*^9, 3.911223882443185*^9, 3.918133722962597*^9},
 CellLabel->
  "During evaluation of \
In[106]:=",ExpressionUUID->"b9cb880f-6cac-4a80-bb7e-5afd29d463ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Command\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"echo 'Hello World!'\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"ExitCode\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Command\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"echo 'Hello World!'\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"ExitCode\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"StandardError\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"StandardOutput\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Hello World!\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"ExecutionCompleted\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "ExecutionCompleted", <|
   "Command" -> "echo 'Hello World!'", "ExitCode" -> 0, "StandardError" -> "",
     "StandardOutput" -> "Hello World!"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.910133251661406*^9, 3.910813646884831*^9, 
  3.911223568341646*^9, 3.911223882460802*^9, 3.918133722972796*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"256f269e-37ac-4d39-a6d2-69136f998bc9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.4.2 External Resources", "Subsection",
 CellChangeTimes->{{3.91115909904764*^9, 
  3.911159115195298*^9}},ExpressionUUID->"1e09df66-7dd3-470e-8f43-\
22f2ce3ede45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegisterExternalEvaluator", "[", 
  RowBox[{"\"\<NodeJS\>\"", ",", "\"\</opt/homebrew/bin/node\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.910025588743087*^9, 3.910025619196425*^9}, {
  3.910030867300574*^9, 3.910030868034751*^9}, {3.910134040835184*^9, 
  3.910134041246451*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"c5ee7c7d-9172-4c1a-8c6c-eb0a552ba1fc"],

Cell[BoxData["\<\"629ba62a-8d17-e9fe-6cd9-870f94c7933c\"\>"], "Output",
 CellChangeTimes->{
  3.909848643496347*^9, 3.909934417364571*^9, {3.910025590511348*^9, 
   3.9100256205160027`*^9}, 3.910030870282127*^9, 3.910047455298875*^9, 
   3.910048050014327*^9, 3.910135106076812*^9, 3.910815203556032*^9, 
   3.911158974612465*^9, 3.911223569030847*^9, 3.911223883042911*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"1d206f2d-c938-46e6-8690-57c816d31e1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindExternalEvaluators", "[", "\"\<NodeJS\>\"", "]"}], "//", 
   "Normal"}], "//", "Print"}]], "Input",
 CellChangeTimes->{{3.910135164420166*^9, 3.910135168054035*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"9e067448-fdc9-4324-8c84-59c07d05e183"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"629ba62a-8d17-e9fe-6cd9-870f94c7933c\"\>", "\[Rule]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"System\"\>", "\[Rule]", "\<\"NodeJS\"\>"}], ",", 
     RowBox[{"\<\"Version\"\>", "\[Rule]", "\<\"21.2.0\"\>"}], ",", 
     RowBox[{"\<\"Target\"\>", 
      "\[RuleDelayed]", "\<\"/opt/homebrew/bin/node\"\>"}], ",", 
     RowBox[{"\<\"Executable\"\>", 
      "\[RuleDelayed]", "\<\"/opt/homebrew/bin/node\"\>"}], ",", 
     RowBox[{"\<\"Registered\"\>", "\[Rule]", "True"}]}], 
    "\[RightAssociation]"}]}], "\[RightAssociation]"}]], "Print",
 CellChangeTimes->{
  3.910135168831903*^9, {3.9102687131381183`*^9, 3.910268731419072*^9}, 
   3.910815208440237*^9, 3.9108178437750063`*^9, 3.911223569080345*^9, 
   3.911223883060292*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"5ba22855-3edc-43f8-be87-ff76d6fbafea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{"\"\<NodeJS\>\"", ",", "\"\<Math.sqrt(25)\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.910135569799232*^9, 3.910135590307474*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"7376a9ac-2357-436f-889d-2b6a4508e8a2"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.9101355884434648`*^9, 3.910135591301*^9}, {
   3.910268715496859*^9, 3.910268736967868*^9}, 3.910815306402185*^9, 
   3.9112235692062407`*^9, 3.911223883408388*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"0bc1b09b-1f08-416a-a01c-4a792512382e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"jsFun1", " ", "=", 
   RowBox[{"ExternalFunction", "[", 
    RowBox[{"\"\<NodeJS\>\"", ",", "\"\<Math.sqrt\>\""}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.9102261530515337`*^9, 3.910226198158569*^9}, {
   3.910226250567418*^9, 3.910226252119982*^9}, {3.910226302592583*^9, 
   3.910226343573969*^9}, {3.910268918833604*^9, 3.910268919474402*^9}, {
   3.910268956837964*^9, 3.910268960141539*^9}, {3.910269334282606*^9, 
   3.910269339288685*^9}, {3.910273491732443*^9, 3.9102735112786503`*^9}, {
   3.9102735554297867`*^9, 3.910273556118144*^9}, 3.910273588321556*^9, {
   3.910297097055765*^9, 3.910297097611438*^9}, {3.910297151255426*^9, 
   3.91029715453926*^9}, {3.910297616308374*^9, 3.91029766576766*^9}, {
   3.910298076304006*^9, 3.9102980835182447`*^9}, {3.910815602502434*^9, 
   3.910815607557291*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"a5d0d3c4-9b81-4447-8201-7025e2f7d9b2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NodeJS\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   StyleBox[
                   "\"Math.sqrt\"", "Program", LineBreakWithin -> False], 
                   ImageSize -> {{1, 500}, Medium}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NodeJS\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  FrameBox[
                   PaneBox[
                    StyleBox[
                    "\"Math.sqrt\"", "Program", LineBreakWithin -> False], 
                    ImageSize -> {{1, 500}, Large}, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline], Background -> RGBColor[0.94, 0.94, 0.94], 
                   FrameStyle -> None, BaselinePosition -> Baseline], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Session: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["Automatic", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalFunction[<|
   "System" -> "NodeJS", "Command" -> "Math.sqrt", "Session" -> Automatic|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.910269341711792*^9, {3.910270333274536*^9, 3.910270359219339*^9}, 
   3.91027043544366*^9, 3.910273512152427*^9, 3.910273558116219*^9, 
   3.910273589710455*^9, 3.910297159167488*^9, 3.9102976665028887`*^9, 
   3.9102980858921547`*^9, 3.910815383850339*^9, 3.910815608298187*^9, 
   3.9112235692257953`*^9, 3.911223883426206*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"8640f53e-ee8e-4afd-8622-e512b233dad2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"jsFun1", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"25", ",", "36", ",", "49", ",", "64"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.910297161560037*^9, 3.9102971640510807`*^9}, {
  3.91081550062849*^9, 3.910815524055689*^9}, {3.910815596786084*^9, 
  3.910815609851467*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"711499e1-478c-45ff-8112-af7e7664eb10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{
  3.91029716608445*^9, 3.910297669755781*^9, 3.910815525345128*^9, {
   3.910815599896601*^9, 3.910815610589324*^9}, 3.91122356957481*^9, 
   3.911223883773302*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"5de39e0b-e0ba-430e-83aa-3a4a8852dea7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"jsFun2", "=", "\[IndentingNewLine]", 
   RowBox[{"ExternalFunction", "[", 
    RowBox[{"\"\<NodeJS\>\"", ",", "\"\<(number) => Math.sqrt(number);\>\""}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jsFun2", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"25", ",", "36", ",", "49", ",", "64"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.910815619015472*^9, 3.910815633635548*^9}, {
   3.910816070456615*^9, 3.910816085854103*^9}, 3.910816224208171*^9},
 CellLabel->
  "In[109]:=",ExpressionUUID->"f1ac9dfb-5136-4cdc-b50e-2bf871c956be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{
  3.910815635268382*^9, {3.910816077978818*^9, 3.9108160867866373`*^9}, 
   3.910816226286437*^9, 3.9112235699228773`*^9, 3.911223884153773*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"cc0f15eb-f4c0-480f-b14b-b306babe2f34"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(num1, num2) => {
  var sum = num1 + num2;
  return Math.sqrt(sum);
}\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.910200000683566*^9, 3.910200065728594*^9}, {
   3.910272290830124*^9, 3.910272301444225*^9}, {3.910817793289719*^9, 
   3.910817799765757*^9}, {3.91081792867153*^9, 3.910817935988016*^9}, {
   3.910817979743466*^9, 3.9108179953698373`*^9}, 3.910818948019081*^9, {
   3.910818999102951*^9, 3.9108190429552794`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"999c7c59-262a-4bf0-a7bc-2f8e7de6c109"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NodeJS\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   StyleBox[
                   "\"(num1, num2) => {\\n  var sum = num1 + num2;\\n  return \
Math.sqrt(sum);\\n}\"", "Program", LineBreakWithin -> False], 
                   ImageSize -> {{1, 500}, Medium}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NodeJS\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  FrameBox[
                   PaneBox[
                    StyleBox[
                    "\"(num1, num2) => {\\n  var sum = num1 + num2;\\n  \
return Math.sqrt(sum);\\n}\"", "Program", LineBreakWithin -> False], 
                    ImageSize -> {{1, 500}, Large}, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline], Background -> RGBColor[0.94, 0.94, 0.94], 
                   FrameStyle -> None, BaselinePosition -> Baseline], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NodeJSFunction\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"NumberArguments: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Session: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ExternalSessionObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.05], 
                    FaceForm[{
                    RGBColor[0.404, 0.62, 0.388], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwA2IQHcy6eJJVorqDpat70c/zSg7fSx/METyq7MBhOzt0
vrayw/uTh53Wdio6AGX5X35H8C9sjvy685YanC9if+zO1hZNB3fmCm6VE8oQ
eSlth+kT+KvMutXh/Kx7hV19R7Th/HOSgbek7+g6GB/ZqJe3WNPB4trRXBMF
PYcooOldtWoOeSYN2x2U9By6/6Z+f5Ko5vDhi1dkm4Seg+fcBrVDbmoOgkv3
HhRn03MwfW/h6m6k5mAUaqC18rOug3XBuY5LcmoOM3ZPm8B/S9eh89K9B9zC
ag7h0Rv3v9mH4F+Z9Ux2OYcOnL/5VfFW0dvacD7IeLXN2g4BcmJZvsZqDltF
f59+t1Lb4QQ7MIDi1Rz+K/79VuoAk9dw6NmZzfnTQcuh7rdVwbkTGnD/w/jL
X3jo/W9UgfOBvmt6pK7iwJWhlFOxSx3OBwX39vdqcH4tKMB+qjoAQ6smcZIK
xL+bVB1i77gxV6zWcAAFR5u6qgNI+fEdOg7rbsSX+c9TcfCObLO4tlTP4fUj
M6kDt5Xh/PsPuCevZFKE831AtKsM1D86DjNB4fZLAmKfkAacDwy9eTY+SnC+
px5Qh5iiQ1pHMtApcnB+RdVSHecYRTj/D9C7HZMUHUDR2eSk6PC8R+Mt7z5F
B62VwhdcKhB8UHJk1FWG80HJSSMOwZ9vo3NlVpuyw0VQ+pml6ACMvRcefcoO
1UDrZLIVHfqefJK/dF7ZYcOUVKCL5B3aQAlqioqDEtBbD+bIwv0D44P9cUsL
zoelh1PAZJ15Tw7O37Ge+XnPCwU4PwicABXh6eNAtILjx2QlB/T8BABIAnsY

                    "], CompressedData["
1:eJxFlGtQTGEYx3djNWddko46dNnNOYrdLrtqWET/SCOXIhRGLrGEaMa1Scm1
3CclmSHTuOQ2iiWhhEhoTbnFB3IfGkk1WRRyzjbv24czZ37vPJf3eZ7/+7jH
xEcYbWQy2RTxk/5BTQvN0W16XOnbVtnwgAPhEfLJ23pWOaLG/7thXJEexuhX
IV1+sUiqvjTrR6geG/dcW878doDkdSdmIN5uXh1ywNIcuOV9xaFiiwCu6LGs
1qYpMMu4Y2F0koC3M53Ek8bAj82qJ/HtPOXwggPGHVs7OWbIDJ2G4an/l/E+
7e45A2j8y8N+lS1a5oLmoKrFzz93QXL+lZiUfs4wiMdn5ysQEPZ4/5xSZ5R+
YF0ffFJgvbe7qsXLBSfelPY64tcNqpa4yOQGV0ByX2aLBdMjPHND3bDrwru6
LJMtUg015StYNWoz07bPfsogQ2qEtxpJW30n5SmVWFMoNipMjVjRW2th0Esq
IFaN+YMre1dcZ8D8zl1y6SGPSDHszgtySOYNdTzGWPPJUXww3S7RUaB88sZt
Jw8/gdpHhOZs8jDpwHlMUxzvw2HlcXmJokyHEslvKAeTj3hi1sHtlNiZlE4m
8yOc/3LeuvCjWsps4L1XhXe1NJ6Gy3rGfNFi91/jz48XdRCy29M3tmlxq/5o
gJe/gMSKwSMyKvVgq4NfNrICjvHX/qQ900OSQcJXnrIwSFRCJU/t48r/mTas
UkIZOyAuoVULtWFJ8NLvDM1nThl/MzmHQVxC4kmvO51M7kuY1EOY1EviNbdM
mJVq4Gi+sG09wwtYrmPOq1lI6sz97IB0vaiAeRzujjm/tLbJHpbs15lp5f1x
b4X/piKwlK39znCk/K575pktUzWUF5mjJ95P00CaerarM8pST0U9NGnQ8PXW
cH5XJ7d+Ew8+uFGWVHF1soryiz6icvNUNB5hko8wuQ9hcfjnRkfZwypTswvU
ko7ze+D61b3dGmucKMvjN3ctD3ek/Gik+CBc+lLOU4YMXFtmj+r9c/6NbbXD
6arnkfUFCvqeT4TBYcFYG/i2u/+1/GBR4mnXvdBDRvcBYTIfwmR+hOdOvG87
6rAXjddRrzfN52MVog/I+/a3Hxpw48mQjrpX8Yiq9y32tPPreG/7BMpk3xB7
so9IPLKvrH8xH9ln5D6EyX3/A2j7MrQ=
                    "]}]}, {
                    ImageSize -> Dynamic[{
                    Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}], AspectRatio -> 
                    Automatic, ImageSize -> {20., 20.}, 
                    PlotRange -> {{0., 20.}, {0., 20.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"System: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NodeJS\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"21.2.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DefaultNodeJSSession\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.05], 
                    FaceForm[{
                    RGBColor[0.404, 0.62, 0.388], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwA2IQHcy6eJJVorqDpat70c/zSg7fSx/METyq7MBhOzt0
vrayw/uTh53Wdio6AGX5X35H8C9sjvy685YanC9if+zO1hZNB3fmCm6VE8oQ
eSlth+kT+KvMutXh/Kx7hV19R7Th/HOSgbek7+g6GB/ZqJe3WNPB4trRXBMF
PYcooOldtWoOeSYN2x2U9By6/6Z+f5Ko5vDhi1dkm4Seg+fcBrVDbmoOgkv3
HhRn03MwfW/h6m6k5mAUaqC18rOug3XBuY5LcmoOM3ZPm8B/S9eh89K9B9zC
ag7h0Rv3v9mH4F+Z9Ux2OYcOnL/5VfFW0dvacD7IeLXN2g4BcmJZvsZqDltF
f59+t1Lb4QQ7MIDi1Rz+K/79VuoAk9dw6NmZzfnTQcuh7rdVwbkTGnD/w/jL
X3jo/W9UgfOBvmt6pK7iwJWhlFOxSx3OBwX39vdqcH4tKMB+qjoAQ6smcZIK
xL+bVB1i77gxV6zWcAAFR5u6qgNI+fEdOg7rbsSX+c9TcfCObLO4tlTP4fUj
M6kDt5Xh/PsPuCevZFKE831AtKsM1D86DjNB4fZLAmKfkAacDwy9eTY+SnC+
px5Qh5iiQ1pHMtApcnB+RdVSHecYRTj/D9C7HZMUHUDR2eSk6PC8R+Mt7z5F
B62VwhdcKhB8UHJk1FWG80HJSSMOwZ9vo3NlVpuyw0VQ+pml6ACMvRcefcoO
1UDrZLIVHfqefJK/dF7ZYcOUVKCL5B3aQAlqioqDEtBbD+bIwv0D44P9cUsL
zoelh1PAZJ15Tw7O37Ge+XnPCwU4PwicABXh6eNAtILjx2QlB/T8BABIAnsY

                    "], CompressedData["
1:eJxFlGtQTGEYx3djNWddko46dNnNOYrdLrtqWET/SCOXIhRGLrGEaMa1Scm1
3CclmSHTuOQ2iiWhhEhoTbnFB3IfGkk1WRRyzjbv24czZ37vPJf3eZ7/+7jH
xEcYbWQy2RTxk/5BTQvN0W16XOnbVtnwgAPhEfLJ23pWOaLG/7thXJEexuhX
IV1+sUiqvjTrR6geG/dcW878doDkdSdmIN5uXh1ywNIcuOV9xaFiiwCu6LGs
1qYpMMu4Y2F0koC3M53Ek8bAj82qJ/HtPOXwggPGHVs7OWbIDJ2G4an/l/E+
7e45A2j8y8N+lS1a5oLmoKrFzz93QXL+lZiUfs4wiMdn5ysQEPZ4/5xSZ5R+
YF0ffFJgvbe7qsXLBSfelPY64tcNqpa4yOQGV0ByX2aLBdMjPHND3bDrwru6
LJMtUg015StYNWoz07bPfsogQ2qEtxpJW30n5SmVWFMoNipMjVjRW2th0Esq
IFaN+YMre1dcZ8D8zl1y6SGPSDHszgtySOYNdTzGWPPJUXww3S7RUaB88sZt
Jw8/gdpHhOZs8jDpwHlMUxzvw2HlcXmJokyHEslvKAeTj3hi1sHtlNiZlE4m
8yOc/3LeuvCjWsps4L1XhXe1NJ6Gy3rGfNFi91/jz48XdRCy29M3tmlxq/5o
gJe/gMSKwSMyKvVgq4NfNrICjvHX/qQ900OSQcJXnrIwSFRCJU/t48r/mTas
UkIZOyAuoVULtWFJ8NLvDM1nThl/MzmHQVxC4kmvO51M7kuY1EOY1EviNbdM
mJVq4Gi+sG09wwtYrmPOq1lI6sz97IB0vaiAeRzujjm/tLbJHpbs15lp5f1x
b4X/piKwlK39znCk/K575pktUzWUF5mjJ95P00CaerarM8pST0U9NGnQ8PXW
cH5XJ7d+Ew8+uFGWVHF1soryiz6icvNUNB5hko8wuQ9hcfjnRkfZwypTswvU
ko7ze+D61b3dGmucKMvjN3ctD3ek/Gik+CBc+lLOU4YMXFtmj+r9c/6NbbXD
6arnkfUFCvqeT4TBYcFYG/i2u/+1/GBR4mnXvdBDRvcBYTIfwmR+hOdOvG87
6rAXjddRrzfN52MVog/I+/a3Hxpw48mQjrpX8Yiq9y32tPPreG/7BMpk3xB7
so9IPLKvrH8xH9ln5D6EyX3/A2j7MrQ=
                    "]}]}, {
                    ImageSize -> Dynamic[{
                    Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}], AspectRatio -> 
                    Automatic, ImageSize -> {20., 20.}, 
                    PlotRange -> {{0., 20.}, {0., 20.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"System: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NodeJS\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"21.2.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DefaultNodeJSSession\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "922c8776-f860-4161-ad6c-1efe264d7831", "Exists"]], 
                    ExternalSessionObject[
                    "922c8776-f860-4161-ad6c-1efe264d7831"]["Active"], False],
                     StandardForm], TrackedSymbols :> {
                    ExternalEvaluate`Private`$Links}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"/opt/homebrew/bin/node\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"922c8776-f860-4161-ad6c-1efe264d7831\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Epilog: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Automatic", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"node\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18373", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"node\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18373", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18320", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"macosx\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/opt/homebrew/Cellar/node/21.2.0/bin/node\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"37.830656`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 10 Dec 2023 13:04:44\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "6"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2023", ",", "12", ",", "10", ",", "13", ",", "4",
                     ",", "44"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "6.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.000188`5.", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.001413`5.", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"0", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    ProcessObject[<|"ManagedProcess" -> True, "UID" -> 16, 
                    "PID" -> 18373, "PPID" -> 18320, "Program" -> "node", 
                    "Path" -> "/opt/homebrew/Cellar/node/21.2.0/bin/node", 
                    "User" -> "macosx", "StartTime" -> 
                    DateObject[{2023, 12, 10, 13, 4, 44}, "Instant", 
                    "Gregorian", -6.]|>], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Prolog: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Automatic", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ReturnType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Automatic", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SessionEpilog: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Automatic", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SessionProlog: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Automatic", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["58968", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"6e885b19-82ac-4547-b2a8-c5bdea832fae\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["58968", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"6e885b19-82ac-4547-b2a8-c5bdea832fae\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"tcp://127.0.0.1:58968\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject["6e885b19-82ac-4547-b2a8-c5bdea832fae"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"StandardErrorFunction: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"Print", "[", 
                    StyleBox[
                    "#1", "Message", FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], "]"}], "&"}], "SummaryItem"]}]}, {
                    
                    RowBox[{
                    TagBox[
                    "\"StandardOutputFunction: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Print", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "922c8776-f860-4161-ad6c-1efe264d7831", "Exists"]], 
                    ExternalSessionObject[
                    "922c8776-f860-4161-ad6c-1efe264d7831"][
                    "EvaluationCount"], None], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "922c8776-f860-4161-ad6c-1efe264d7831", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "922c8776-f860-4161-ad6c-1efe264d7831"]["ProcessMemory"], 
                    UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "922c8776-f860-4161-ad6c-1efe264d7831", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "922c8776-f860-4161-ad6c-1efe264d7831"]["ProcessThreads"],
                     UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "922c8776-f860-4161-ad6c-1efe264d7831", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "922c8776-f860-4161-ad6c-1efe264d7831"]["SessionTime"], 
                    UpdateInterval -> 1], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   ExternalSessionObject[
                   "922c8776-f860-4161-ad6c-1efe264d7831"], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalFunction[<|
   "Command" -> 
    "(num1, num2) => {\n  var sum = num1 + num2;\n  return Math.sqrt(sum);\n\
}", "System" -> "NodeJS", "Type" -> "NodeJSFunction", "NumberArguments" -> 2, 
    "Session" -> 
    ExternalSessionObject["922c8776-f860-4161-ad6c-1efe264d7831"]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9108190146976023`*^9, 3.911158687453014*^9, 
  3.911223570076826*^9, 3.911223884306393*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"9cc64751-6dbb-4872-9df8-a293d50ffb8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", 
  RowBox[{"18", ",", "18"}], "]"}]], "Input",
 CellChangeTimes->{{3.910819222697096*^9, 3.9108192239855947`*^9}, {
  3.910819290080745*^9, 3.9108192908503447`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"256486fa-8d47-4361-b4ad-9ace004f752c"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.910819291605762*^9, 3.911158691501536*^9, 
  3.911223570117406*^9, 3.911223884316271*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"6c0140db-cd25-45cd-b51c-18db8aacd092"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnregisterExternalEvaluator", "[", 
  RowBox[{"\"\<NodeJS\>\"", ",", "\"\</opt/homebrew/bin/node\>\""}], 
  "]"}]], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"774fdf4f-fb14-413b-b9e0-3798957159aa"],

Cell[BoxData["\<\"629ba62a-8d17-e9fe-6cd9-870f94c7933c\"\>"], "Output",
 CellChangeTimes->{3.911158905616941*^9, 3.911223570128038*^9, 
  3.911223884332799*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"c493d909-2f5f-48ce-827c-65999f5fb3c7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.4.3 Database and File Operations (SQL)", "Subsection",
 CellChangeTimes->{{3.908460992291771*^9, 3.908461030116539*^9}, {
  3.908461218476933*^9, 3.908461233179439*^9}, {3.908461279288837*^9, 
  3.908461284530961*^9}, {3.910268278950172*^9, 
  3.910268291108124*^9}},ExpressionUUID->"b8286afa-a7c3-41fe-ad70-\
56447dcdc140"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DatabaseReference", "[", 
   RowBox[{
   "FindFile", "[", "\"\<ExampleData/ecommerce-database.sqlite\>\"", "]"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Shallow", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.9111607478875647`*^9, 3.91116074789046*^9}, {
  3.9111618005927157`*^9, 3.9111618452632227`*^9}, {3.911162003084173*^9, 
  3.911162032567671*^9}, {3.911162887914263*^9, 3.911162930637576*^9}, {
  3.9111635808434477`*^9, 3.911163583499244*^9}, {3.9112221102855*^9, 
  3.911222113991583*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"6bd58f63-542a-43f0-ae63-fee8a6382bc3"],

Cell[BoxData[
 RowBox[{"DatabaseReference", "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Backend\"\>", "\[Rule]", "\<\"SQLite\"\>"}], ",", 
    RowBox[{"\<\"Name\"\>", 
     "\[Rule]", \
"\<\"/Applications/Mathematica.app/Contents/Documentation/English/System/\
ExampleData/ecommerce-database.sqlite\"\>"}]}], "\[RightAssociation]"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.911222114521576*^9, 3.911223570147867*^9, 
  3.911223884338051*^9},
 CellLabel->
  "Out[116]//Shallow=",ExpressionUUID->"d4722640-bb70-432a-bc32-0607e35fdd5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SELECT name FROM sqlite_master WHERE type='table'", "ExternalLanguage",
 CellEvaluationLanguage->"SQL",
 CellChangeTimes->{{3.911163206464557*^9, 3.911163211853537*^9}, {
   3.911163270877665*^9, 3.9111632730068703`*^9}, {3.911163327257995*^9, 
   3.91116334067275*^9}, 3.911163540968344*^9},
 CellLabel->
  "In[117]:=",ExpressionUUID->"6c9c4f6c-73f6-42a5-a36e-72eeb167bc3c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"name" -> "offices"|>, <|"name" -> "productlines"|>, <|
       "name" -> "employees"|>, <|"name" -> "products"|>, <|
       "name" -> "customers"|>, <|"name" -> "orders"|>, <|
       "name" -> "payments"|>, <|"name" -> "orderdetails"|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "name"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "name" -> TypeSystem`PackageScope`AtomShape[134.4]|>], 
          DirectedInfinity[1], 1, {All}]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"name"}, {
         TypeSystem`Atom[String]}], 8], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "name"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "name" -> TypeSystem`PackageScope`AtomShape[134.4]|>], 
          DirectedInfinity[1], 1, {All}]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"name"}, {
         TypeSystem`Atom[String]}], 8], "Path" -> {}, "DisplayedRowCount" -> 
     8, "DisplayedColumnCount" -> 1, "DataRowCount" -> 8, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["offices", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["productlines", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["employees", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["products", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["customers", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["orders", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["payments", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["orderdetails", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{145., {128.134033203125, 133.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{145., {128.134033203125, 133.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.911163213152971*^9, 3.911163273508936*^9, {3.91116332797291*^9, 
   3.911163341606064*^9}, 3.911163601859953*^9, 3.911220706917183*^9, 
   3.911223570221364*^9, 3.9112238849076843`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"86458d3a-005a-47a0-94c1-95fa1768dcf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SELECT * FROM offices;", "ExternalLanguage",
 CellEvaluationLanguage->"SQL",
 CellChangeTimes->{{3.9111638454147463`*^9, 3.911163947905209*^9}, {
   3.911164000574879*^9, 3.911164032322288*^9}, 3.91116417327071*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"9ccf85c6-18d4-4445-b937-43b0d0d4c5eb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "officeCode" -> "1", "city" -> "San Francisco", "phone" -> 
        "+1 650 219 4782", "addressLine1" -> "100 Market Street", 
        "addressLine2" -> "Suite 300", "state" -> "CA", "country" -> "USA", 
        "postalCode" -> "94080", "territory" -> "NA"|>, <|
       "officeCode" -> "2", "city" -> "Boston", "phone" -> "+1 215 837 0825", 
        "addressLine1" -> "1550 Court Place", "addressLine2" -> "Suite 102", 
        "state" -> "MA", "country" -> "USA", "postalCode" -> "02107", 
        "territory" -> "NA"|>, <|
       "officeCode" -> "3", "city" -> "NYC", "phone" -> "+1 212 555 3000", 
        "addressLine1" -> "523 East 53rd Street", "addressLine2" -> "apt. 5A",
         "state" -> "NY", "country" -> "USA", "postalCode" -> "10022", 
        "territory" -> "NA"|>, <|
       "officeCode" -> "4", "city" -> "Paris", "phone" -> "+33 14 723 4404", 
        "addressLine1" -> "43 Rue Jouffroy D'abbans", "addressLine2" -> 
        Missing["NotAvailable"], "state" -> Missing["NotAvailable"], 
        "country" -> "France", "postalCode" -> "75017", "territory" -> 
        "EMEA"|>, <|
       "officeCode" -> "5", "city" -> "Tokyo", "phone" -> "+81 33 224 5000", 
        "addressLine1" -> "4-1 Kioicho", "addressLine2" -> 
        Missing["NotAvailable"], "state" -> "Chiyoda-Ku", "country" -> 
        "Japan", "postalCode" -> "102-8578", "territory" -> "Japan"|>, <|
       "officeCode" -> "6", "city" -> "Sydney", "phone" -> "+61 2 9264 2451", 
        "addressLine1" -> "5-11 Wentworth Avenue", "addressLine2" -> 
        "Floor #2", "state" -> Missing["NotAvailable"], "country" -> 
        "Australia", "postalCode" -> "NSW 2010", "territory" -> "APAC"|>, <|
       "officeCode" -> "7", "city" -> "London", "phone" -> "+44 20 7877 2041",
         "addressLine1" -> "25 Old Broad Street", "addressLine2" -> "Level 7",
         "state" -> Missing["NotAvailable"], "country" -> "UK", "postalCode" -> 
        "EC2N 1HN", "territory" -> "EMEA"|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "officeCode"} -> 
        1, {All, "city"} -> 1, {All, "phone"} -> 1, {All, "addressLine1"} -> 
        1, {All, "addressLine2"} -> 1, {All, "state"} -> 1, {All, "country"} -> 
        1, {All, "postalCode"} -> 1, {All, "territory"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "officeCode" -> TypeSystem`PackageScope`AtomShape[33.6], "city" -> 
            TypeSystem`PackageScope`AtomShape[145.60000000000002`], "phone" -> 
            TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "addressLine1" -> TypeSystem`PackageScope`AtomShape[268.8], 
            "addressLine2" -> 
            TypeSystem`PackageScope`AtomShape[100.80000000000001`], "state" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], "country" -> 
            TypeSystem`PackageScope`AtomShape[94.5], "postalCode" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], "territory" -> 
            TypeSystem`PackageScope`AtomShape[52.5]|>], 
          DirectedInfinity[1], 9, {All}]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "officeCode", "city", "phone", "addressLine1", "addressLine2", 
         "state", "country", "postalCode", "territory"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Australia", "France", "Japan", "UK", "USA"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["APAC", "EMEA", "Japan", "NA"]]}], 7], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "officeCode"} -> 
        1, {All, "city"} -> 1, {All, "phone"} -> 1, {All, "addressLine1"} -> 
        1, {All, "addressLine2"} -> 1, {All, "state"} -> 1, {All, "country"} -> 
        1, {All, "postalCode"} -> 1, {All, "territory"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "officeCode" -> TypeSystem`PackageScope`AtomShape[33.6], "city" -> 
            TypeSystem`PackageScope`AtomShape[145.60000000000002`], "phone" -> 
            TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "addressLine1" -> TypeSystem`PackageScope`AtomShape[268.8], 
            "addressLine2" -> 
            TypeSystem`PackageScope`AtomShape[100.80000000000001`], "state" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], "country" -> 
            TypeSystem`PackageScope`AtomShape[94.5], "postalCode" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], "territory" -> 
            TypeSystem`PackageScope`AtomShape[52.5]|>], 
          DirectedInfinity[1], 9, {All}]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "officeCode", "city", "phone", "addressLine1", "addressLine2", 
         "state", "country", "postalCode", "territory"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Australia", "France", "Japan", "UK", "USA"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["APAC", "EMEA", "Japan", "NA"]]}], 7], 
     "Path" -> {}, "DisplayedRowCount" -> 7, "DisplayedColumnCount" -> 9, 
     "DataRowCount" -> 7, "DataColumnCount" -> 9, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["officeCode", 
                  Style[
                  "officeCode", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "officeCode"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "officeCode"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["city", 
                  Style[
                  "city", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "city"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "city"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["phone", 
                  Style[
                  "phone", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "phone"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "phone"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["addressLine1", 
                  Style[
                  "addressLine1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "addressLine1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "addressLine1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["addressLine2", 
                  Style[
                  "addressLine2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "addressLine2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "addressLine2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["state", 
                  Style[
                  "state", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "state"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "state"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["country", 
                  Style[
                  "country", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "country"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "country"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["postalCode", 
                  Style[
                  "postalCode", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "postalCode"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "postalCode"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["territory", 
                  Style[
                  "territory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "territory"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "territory"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["officeCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["San Francisco", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1 650 219 4782", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["phone"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["100 Market Street", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["addressLine1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Suite 300", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["addressLine2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["94080", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["postalCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["officeCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Boston", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1 215 837 0825", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["phone"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1550 Court Place", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["addressLine1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Suite 102", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["addressLine2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["02107", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["postalCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["officeCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NYC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1 212 555 3000", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["phone"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["523 East 53rd Street", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["addressLine1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["apt. 5A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["addressLine2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NY", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["10022", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["postalCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["4", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["officeCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Paris", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+33 14 723 4404", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["phone"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["43 Rue Jouffroy D'abbans", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["addressLine1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["addressLine2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["France", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["75017", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["postalCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["EMEA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["5", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["officeCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Tokyo", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+81 33 224 5000", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["phone"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4-1 Kioicho", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["addressLine1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["addressLine2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Chiyoda-Ku", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Japan", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["102-8578", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["postalCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Japan", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["6", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["officeCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Sydney", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+61 2 9264 2451", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["phone"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5-11 Wentworth Avenue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["addressLine1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Floor #2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["addressLine2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Australia", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NSW 2010", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["postalCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["APAC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["officeCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["London", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+44 20 7877 2041", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["phone"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25 Old Broad Street", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["addressLine1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Level 7", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["addressLine2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["UK", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["country"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["EC2N 1HN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["postalCode"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["EMEA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1184., {114.634033203125, 120.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1184., {114.634033203125, 120.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.911163867567147*^9, 3.911163948424539*^9}, {
   3.911164002397889*^9, 3.911164032803475*^9}, 3.911164173784165*^9, 
   3.911220805244229*^9, 3.9112235703189697`*^9, 3.9112238850366573`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"556132bb-11a8-44d8-9d62-a92e091dae0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SELECT territory, city FROM offices ORDER BY territory;", \
"ExternalLanguage",
 CellEvaluationLanguage->"SQL",
 CellChangeTimes->{{3.911164166173002*^9, 3.911164169293617*^9}, 
   3.911220767979517*^9},
 CellLabel->
  "In[119]:=",ExpressionUUID->"20a53e88-a68d-4500-8273-8374e0beb02e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"territory" -> "APAC", "city" -> "Sydney"|>, <|
       "territory" -> "EMEA", "city" -> "Paris"|>, <|
       "territory" -> "EMEA", "city" -> "London"|>, <|
       "territory" -> "Japan", "city" -> "Tokyo"|>, <|
       "territory" -> "NA", "city" -> "San Francisco"|>, <|
       "territory" -> "NA", "city" -> "Boston"|>, <|
       "territory" -> "NA", "city" -> "NYC"|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "territory"} -> 
        1, {All, "city"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "territory" -> TypeSystem`PackageScope`AtomShape[52.5], "city" -> 
            TypeSystem`PackageScope`AtomShape[145.60000000000002`]|>], 
          DirectedInfinity[1], 2, {All}]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"territory", "city"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["APAC", "EMEA", "Japan", "NA"]], 
         TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "territory"} -> 
        1, {All, "city"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "territory" -> TypeSystem`PackageScope`AtomShape[52.5], "city" -> 
            TypeSystem`PackageScope`AtomShape[145.60000000000002`]|>], 
          DirectedInfinity[1], 2, {All}]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"territory", "city"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["APAC", "EMEA", "Japan", "NA"]], 
         TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
     7, "DisplayedColumnCount" -> 2, "DataRowCount" -> 7, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["territory", 
                  Style[
                  "territory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "territory"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "territory"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["city", 
                  Style[
                  "city", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "city"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "city"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["APAC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Sydney", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["EMEA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Paris", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["EMEA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["London", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Japan", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Tokyo", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["NA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["San Francisco", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["NA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Boston", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["NA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["territory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NYC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["city"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{217., {114.634033203125, 120.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{217., {114.634033203125, 120.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.911164196342793*^9, 3.911220769941839*^9, 
  3.911223570448004*^9, 3.911223885166896*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"8b403a10-63a9-42c0-86d0-d79c66e6e150"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"MultipurposeBar",
WindowSize->{720, 838},
WindowMargins->{{13, Automatic}, {0, Automatic}},
DockedCells->{},
TaggingRules-><|
 "TryRealOnly" -> False, "NotebookTemplateVersion" -> 2., "NotebookTemplate" -> 
  True, "GeneratedNotebookOptions" -> {}|>,
CellContext->Notebook,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"08bed5d6-ee40-40fc-814c-c62242954caa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 225, 4, 69, "Chapter",ExpressionUUID->"05aaea1f-aebc-4bc0-9c65-3cedb1dee26b"],
Cell[CellGroupData[{
Cell[830, 30, 709, 14, 30, "Input",ExpressionUUID->"87461ccc-d78b-4f47-b48c-4509d1e28139"],
Cell[1542, 46, 2191, 36, 112, "Output",ExpressionUUID->"afb4d10d-0e60-4b77-a5bf-8d6358107c11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3770, 87, 321, 5, 30, "Input",ExpressionUUID->"79e40ceb-46c8-4264-b433-b6d9e3ff192e"],
Cell[4094, 94, 863, 12, 34, "Output",ExpressionUUID->"ac85af5d-46fb-4f2a-80a2-bb636eb0cb59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4994, 111, 286, 6, 30, "Input",ExpressionUUID->"628248b3-e62f-4937-ab8d-ed846aa30981"],
Cell[5283, 119, 835, 12, 34, "Output",ExpressionUUID->"77129a5c-d69d-4afe-875b-b6d763b34375"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6155, 136, 215, 4, 67, "Section",ExpressionUUID->"8b3c9f85-6795-4d78-a8be-aa7f610696fb"],
Cell[CellGroupData[{
Cell[6395, 144, 220, 4, 54, "Subsection",ExpressionUUID->"fcb5cbcb-a85c-493b-ba1e-a5e62b1e308d"],
Cell[CellGroupData[{
Cell[6640, 152, 287, 6, 30, "Input",ExpressionUUID->"e5688880-27d5-49de-b9a4-433f7a185d05"],
Cell[6930, 160, 2424, 57, 140, "Output",ExpressionUUID->"9aeafda5-1eae-4353-a079-6fc52942be46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9391, 222, 361, 7, 30, "Input",ExpressionUUID->"6bd0417d-8d09-4b81-ac1b-b047e0459a8a"],
Cell[9755, 231, 1688, 38, 77, "Output",ExpressionUUID->"697ec8d4-c070-4a56-b2a9-98ba58b6b0fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11480, 274, 340, 6, 30, "Input",ExpressionUUID->"1acf1189-4c61-482b-b291-7dde0cbf24d6"],
Cell[11823, 282, 851, 12, 34, "Output",ExpressionUUID->"34298e18-a6a7-408e-ad51-5d567166c191"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12711, 299, 459, 12, 52, "Input",ExpressionUUID->"b2ec1975-4e7b-402b-95d8-f568c33a0115"],
Cell[13173, 313, 1216, 25, 48, "Output",ExpressionUUID->"e2e785e5-159e-46e7-b3e5-e1c8b7788b28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14426, 343, 368, 8, 52, "Input",ExpressionUUID->"fa22beab-d97c-4883-8154-987bd2b4a2dd"],
Cell[14797, 353, 1750, 28, 213, "Output",ExpressionUUID->"8f437630-1b72-4331-b6dc-fdf5f441ae25"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[16596, 387, 166, 3, 38, "Subsection",ExpressionUUID->"86a3a917-bdcc-4a37-9160-2e26eaa35556"],
Cell[CellGroupData[{
Cell[16787, 394, 346, 7, 52, "Input",ExpressionUUID->"a7e57711-4f63-4188-9818-9276a9a71adb"],
Cell[17136, 403, 2477, 57, 140, "Output",ExpressionUUID->"584144cc-e30d-424f-b69d-b3b12ab758b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19650, 465, 352, 8, 30, "Input",ExpressionUUID->"ab1f39f5-06cd-4ecf-a30f-506fc0930222"],
Cell[20005, 475, 850, 14, 34, "Output",ExpressionUUID->"868b43fe-af19-4a7e-9b13-885c0c5ce717"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20892, 494, 396, 9, 30, "Input",ExpressionUUID->"d700d5a8-fac2-4687-bc41-3f5e0b0ca7b5"],
Cell[21291, 505, 1331, 23, 292, "Output",ExpressionUUID->"6d50cfc1-6560-42ff-b7b9-007b4194b8fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22659, 533, 442, 10, 52, "Input",ExpressionUUID->"245baf99-c149-4fd1-ab39-11d28e5b817a"],
Cell[23104, 545, 49049, 932, 335, "Output",ExpressionUUID->"ec0a6463-b001-48b2-ae9a-6dc0416cf8dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72190, 1482, 400, 8, 30, "Input",ExpressionUUID->"ba0786b5-5d21-429c-867d-03efc6c5771c"],
Cell[72593, 1492, 49080, 933, 335, "Output",ExpressionUUID->"734ff9b5-2c9f-4bfd-9658-066e631421d6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[121722, 2431, 163, 3, 38, "Subsection",ExpressionUUID->"d4764b03-71be-4ab3-82af-acf07b9b629b"],
Cell[CellGroupData[{
Cell[121910, 2438, 367, 8, 30, "Input",ExpressionUUID->"a746ba3d-74e6-4c20-8c33-53cacb806977"],
Cell[122280, 2448, 4235, 85, 329, "Output",ExpressionUUID->"5fd9e824-77cc-43ee-bfa9-14dfdbed30ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126552, 2538, 295, 5, 30, "Input",ExpressionUUID->"71ccac2a-4f21-4927-bf70-71149bec08d2"],
Cell[126850, 2545, 4630, 94, 329, "Output",ExpressionUUID->"cc961b61-49f8-4bf2-97cc-15ce9c9e853a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131517, 2644, 207, 3, 30, "Input",ExpressionUUID->"b3260789-0f78-451f-b15e-d8ab9474d797"],
Cell[131727, 2649, 56870, 1092, 335, "Output",ExpressionUUID->"61580fb5-782d-4412-8e25-9ee2a317a1c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188634, 3746, 292, 6, 30, "Input",ExpressionUUID->"f89783db-7d1f-480f-aa1a-b48838c19b84"],
Cell[188929, 3754, 4632, 94, 329, "Output",ExpressionUUID->"953e188d-2d3f-4f14-8746-ddb1a95ab3f3"]
}, Open  ]],
Cell[193576, 3851, 301, 6, 30, "Input",ExpressionUUID->"40bcc6b4-62b8-4c06-95f9-f78370b437dc"],
Cell[193880, 3859, 327, 7, 30, "Input",ExpressionUUID->"18d058c3-7257-4a3f-bea3-6b65701c4f76"]
}, Closed]],
Cell[CellGroupData[{
Cell[194244, 3871, 235, 4, 38, "Subsection",ExpressionUUID->"11acd005-2a0c-4a2b-bc19-68bd62a2b924"],
Cell[CellGroupData[{
Cell[194504, 3879, 349, 7, 73, "Input",ExpressionUUID->"a6b4686a-fdde-4a3b-b2bb-6327c63f030d"],
Cell[194856, 3888, 709, 13, 48, "Output",ExpressionUUID->"90a971f3-a718-4df7-8a6f-569b6890da57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195602, 3906, 349, 7, 73, "Input",ExpressionUUID->"3b3e2b6f-a873-4417-ae6c-a7e670fa3c76"],
Cell[195954, 3915, 802, 16, 48, "Output",ExpressionUUID->"59536db5-968c-492e-bc83-b9280e04448c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196793, 3936, 280, 5, 30, "Input",ExpressionUUID->"47175233-69d2-4374-95e0-8d1a6b3d6434"],
Cell[197076, 3943, 7472, 148, 61, "Output",ExpressionUUID->"36d582c8-d039-455d-8fa8-d971e99e9e36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204585, 4096, 285, 5, 52, "Input",ExpressionUUID->"43d36ba7-f039-424a-821f-5ced1be54bc2"],
Cell[204873, 4103, 758, 13, 56, "Output",ExpressionUUID->"f3ac100e-4f3e-40de-85b5-b5449db7b47a"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[205692, 4123, 213, 4, 53, "Section",ExpressionUUID->"5b215a5b-61c5-439c-aceb-923b78930eb8"],
Cell[CellGroupData[{
Cell[205930, 4131, 536, 10, 30, "Input",ExpressionUUID->"1e4d0b7d-1b17-49f6-968c-4e2bc84d352e"],
Cell[206469, 4143, 58967, 1149, 335, "Output",ExpressionUUID->"4cf14d9d-68ca-4abd-bc33-9d519d303325"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265473, 5297, 213, 4, 54, "Subsection",ExpressionUUID->"e4742ce8-20bb-43f9-947a-42e5cea668e9"],
Cell[CellGroupData[{
Cell[265711, 5305, 245, 4, 30, "Input",ExpressionUUID->"101f470d-4484-4dcf-987c-5fc08fad0b1a"],
Cell[265959, 5311, 642, 12, 37, "Output",ExpressionUUID->"27c8c6e1-7d1c-4930-a2dd-26c9c5b45d90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266638, 5328, 273, 5, 30, "Input",ExpressionUUID->"35a59f2c-aafb-4e3d-8bb6-19b83072108e"],
Cell[266914, 5335, 500, 7, 34, "Output",ExpressionUUID->"279b116f-3675-492a-8ae2-0c16dbaa5faf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267451, 5347, 1984, 36, 39, "Input",ExpressionUUID->"4a5e58c4-5041-4de2-bcd6-69991260e114"],
Cell[269438, 5385, 589, 9, 35, "Output",ExpressionUUID->"930708b5-f7ec-4c83-a614-ecf5d35b1254"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270064, 5399, 467, 10, 34, "Input",ExpressionUUID->"384df9a1-d374-4cba-8e84-ae7b280795f4"],
Cell[270534, 5411, 580, 9, 34, "Output",ExpressionUUID->"24ad66d4-bf0f-45ce-9df4-9f6257e49e6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271151, 5425, 283, 5, 34, "Input",ExpressionUUID->"8508ccc4-678f-492f-8855-f22706b7b8ef"],
Cell[271437, 5432, 466, 6, 34, "Output",ExpressionUUID->"5d100230-234f-4161-b711-8ec76370f6f0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[271952, 5444, 229, 4, 38, "Subsection",ExpressionUUID->"e8b2d4b7-393f-4ce6-8cd3-4dda037d1cd8"],
Cell[CellGroupData[{
Cell[272206, 5452, 1112, 29, 34, "Input",ExpressionUUID->"d234b419-4858-407b-a65b-994fc875a95f"],
Cell[273321, 5483, 983, 21, 43, "Output",ExpressionUUID->"94269574-1bca-4d25-87da-4a54f07befea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274341, 5509, 313, 6, 30, "Input",ExpressionUUID->"88b856e2-28fa-455a-b4b0-478938678ab4"],
Cell[274657, 5517, 28658, 542, 93, "Output",ExpressionUUID->"338fcb3d-a882-4058-bbed-2356c4f16da6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303352, 6064, 204, 3, 30, "Input",ExpressionUUID->"614355fc-5589-4668-8e9a-571128dd7dd0"],
Cell[303559, 6069, 2141, 58, 38, "Output",ExpressionUUID->"22dcba24-be9e-4626-a41a-a88632e79d3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305737, 6132, 267, 6, 30, "Input",ExpressionUUID->"a2685eb9-6103-44ad-92b3-8a7fc8027408"],
Cell[306007, 6140, 580, 10, 34, "Output",ExpressionUUID->"9d59860c-5f49-4963-b859-1286f8bc1d4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306624, 6155, 387, 9, 30, "Input",ExpressionUUID->"8de5c573-4082-405c-b186-b81b1fc48ce1"],
Cell[307014, 6166, 35043, 651, 335, "Output",ExpressionUUID->"3f24e325-505f-4e2e-9494-8c4fd11f1782"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342094, 6822, 269, 5, 30, "Input",ExpressionUUID->"dd6c9a7a-f261-47d9-97dd-46cbe016d6b4"],
Cell[342366, 6829, 882, 19, 210, "Output",ExpressionUUID->"c63651ba-8782-43a5-ada2-d9bb5cdfe406"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343285, 6853, 315, 7, 30, "Input",ExpressionUUID->"1bdbacb6-4806-44d8-a427-fdd687ec173b"],
Cell[343603, 6862, 888, 19, 210, "Output",ExpressionUUID->"ff3b1d95-05e9-49c7-a99d-b6631658e4b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344528, 6886, 209, 3, 30, "Input",ExpressionUUID->"326b4b52-a8fb-42fb-aae3-43808ae930f3"],
Cell[344740, 6891, 52901, 1286, 227, "Output",ExpressionUUID->"1aedb1c5-908e-46dd-9ea7-7362934d2b17"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[397690, 8183, 324, 5, 38, "Subsection",ExpressionUUID->"dea88928-a738-4cef-9ac0-dec300fb9c10"],
Cell[CellGroupData[{
Cell[398039, 8192, 483, 9, 52, "Input",ExpressionUUID->"a065d272-3558-497a-9b45-12aa189ade35"],
Cell[398525, 8203, 58600, 1143, 335, "Output",ExpressionUUID->"e7b35be9-c9fa-425f-80ee-24f89513d4ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457162, 9351, 484, 11, 52, "Input",ExpressionUUID->"eaf707d8-a4f5-4447-bfb7-b81bf6c5bfeb"],
Cell[457649, 9364, 875, 17, 174, "Output",ExpressionUUID->"8a9a2739-45d6-4934-a8d3-0d089fb2c337"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458561, 9386, 450, 10, 52, "Input",ExpressionUUID->"42308809-9e24-48ca-9ec0-79a0b41e5d8a"],
Cell[459014, 9398, 869, 17, 56, "Output",ExpressionUUID->"a9d1259b-e3d5-4e40-a909-96f1462d162d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459920, 9420, 475, 10, 52, "Input",ExpressionUUID->"e5152fb5-0075-4ccf-b184-eccbc4046c93"],
Cell[460398, 9432, 52771, 1018, 281, "Output",ExpressionUUID->"8c4fd4be-27f4-4bae-b584-0a2c2bc5cdec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513206, 10455, 966, 23, 94, "Input",ExpressionUUID->"7638f501-02c1-49f0-9360-673a5001d50d"],
Cell[514175, 10480, 50267, 956, 335, "Output",ExpressionUUID->"c0c2b427-19ee-420d-a4ee-9ea57fdd5612"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[564503, 11443, 204, 4, 53, "Section",ExpressionUUID->"1c0647c6-8067-45df-991f-aebdaa947119"],
Cell[CellGroupData[{
Cell[564732, 11451, 239, 4, 30, "Input",ExpressionUUID->"ff97efc5-da07-4e5b-bb29-8b11dcc0b6a6"],
Cell[564974, 11457, 1317, 24, 91, "Output",ExpressionUUID->"ac95193e-9084-4ce4-902b-8d8ea4d137f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566328, 11486, 202, 3, 30, "Input",ExpressionUUID->"bd97cbba-1cc0-4eb2-bfc8-c973da3fc2ed"],
Cell[566533, 11491, 379, 5, 34, "Output",ExpressionUUID->"8778b17b-b892-40cd-83c9-ba10a5a1e6fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566949, 11501, 249, 4, 30, "Input",ExpressionUUID->"3cce5f5d-82fb-4c25-9a54-c4303bb42cfc"],
Cell[567201, 11507, 384, 5, 34, "Output",ExpressionUUID->"4f546fd0-7e98-4af5-afe7-3a3b0d1f259a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567622, 11517, 677, 18, 52, "Input",ExpressionUUID->"78ccf1a5-581a-4ae3-abaf-a51a9cc6960f"],
Cell[568302, 11537, 424, 8, 34, "Output",ExpressionUUID->"14874297-9052-44b2-b8d3-11d9b7e07b6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568763, 11550, 351, 7, 30, "Input",ExpressionUUID->"78654ccc-c971-40d0-9195-a0fb184717a3"],
Cell[569117, 11559, 378, 5, 34, "Output",ExpressionUUID->"054e7749-8836-4f94-843d-10d5896b141f"]
}, Open  ]],
Cell[569510, 11567, 254, 4, 30, "Input",ExpressionUUID->"f9bad737-3dfa-4c56-aac4-48bd209a36cb"],
Cell[569767, 11573, 247, 4, 30, "Input",ExpressionUUID->"7c92e49c-305f-499e-bdb6-9def06819b4f"],
Cell[570017, 11579, 649, 19, 52, "Input",ExpressionUUID->"a8ff4543-1972-4e58-940f-9b6105c618f8"],
Cell[CellGroupData[{
Cell[570691, 11602, 407, 9, 30, "Input",ExpressionUUID->"473297fd-e98d-4ed6-8ee8-b32515924664"],
Cell[571101, 11613, 361, 5, 34, "Output",ExpressionUUID->"4534f02e-b5f6-42d0-98ae-63b65415f6ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571499, 11623, 455, 10, 52, "Input",ExpressionUUID->"5be1aeec-a376-4eff-885b-fd2c06fd253d"],
Cell[571957, 11635, 361, 5, 34, "Output",ExpressionUUID->"0812c149-cc3f-42ea-a928-2f84401351d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572355, 11645, 391, 8, 30, "Input",ExpressionUUID->"d487501f-2334-4366-af20-5ae98b2253c0"],
Cell[572749, 11655, 355, 5, 34, "Output",ExpressionUUID->"6c885c8c-f582-4c2c-a3e6-e24af53d321f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573141, 11665, 343, 7, 30, "Input",ExpressionUUID->"6a907dd3-dd38-4b14-99dc-db9224790a6c"],
Cell[573487, 11674, 622, 14, 83, "Output",ExpressionUUID->"5a62186c-7d50-4481-a31f-c9f8d76b0ef8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574146, 11693, 604, 15, 52, "Input",ExpressionUUID->"af98dae6-dc53-40fd-9a94-e8417d46cfe4"],
Cell[574753, 11710, 357, 5, 34, "Output",ExpressionUUID->"989ccaf6-71e0-4b25-bd32-8c3bedec24ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575147, 11720, 216, 4, 54, "Subsection",ExpressionUUID->"a106914b-4ce3-451f-90b1-cec682825295"],
Cell[CellGroupData[{
Cell[575388, 11728, 841, 23, 73, "Input",ExpressionUUID->"56d2557f-1d5e-4c08-8dbb-ba14b811a747"],
Cell[576232, 11753, 429, 8, 34, "Output",ExpressionUUID->"8aa3757f-a133-4c30-bce1-ffe34c36a0a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[576698, 11766, 324, 6, 30, "Input",ExpressionUUID->"5b62a7a4-da1b-49ac-a9c9-4a27dbaa5520"],
Cell[577025, 11774, 356, 5, 34, "Output",ExpressionUUID->"0038471d-aded-4461-8151-de027e3cdcd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577418, 11784, 480, 11, 30, "Input",ExpressionUUID->"6bb89392-00e5-4473-9e58-61adc6ea699c"],
Cell[577901, 11797, 422, 8, 34, "Output",ExpressionUUID->"6dd596df-c241-4273-b6de-966158811da7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578360, 11810, 537, 11, 73, "Input",ExpressionUUID->"749f30af-f3e2-4082-9a6d-341a3e82bbe6"],
Cell[578900, 11823, 359, 5, 34, "Output",ExpressionUUID->"04960062-617c-4d88-8dbb-f291b68313f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579296, 11833, 652, 14, 73, "Input",ExpressionUUID->"b0bb1856-d148-4fa0-bbc6-edef6d093c9e"],
Cell[579951, 11849, 332, 4, 34, "Output",ExpressionUUID->"1b057941-f7ff-4be1-b5eb-4edcc1269f54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580320, 11858, 384, 8, 30, "Input",ExpressionUUID->"7fdf8128-e419-41f3-bb5a-a4696c8c9de7"],
Cell[580707, 11868, 3378, 106, 161, "Output",ExpressionUUID->"70012a92-203c-4ec3-b47b-265a9840f895"]
}, Open  ]],
Cell[CellGroupData[{
Cell[584122, 11979, 479, 12, 52, "Input",ExpressionUUID->"947f0221-717f-4fbe-b7e0-aa07bf898502"],
Cell[584604, 11993, 524, 9, 56, "Output",ExpressionUUID->"efcb0c5f-1152-4f9a-ade9-d4c34fade378"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585165, 12007, 690, 18, 52, "Input",ExpressionUUID->"c97fee28-07bc-44b4-a273-675afa46a9c4"],
Cell[585858, 12027, 64799, 1205, 627, "Output",ExpressionUUID->"15596e4b-a886-4be7-81f3-8ecce105e8d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650694, 13237, 331, 6, 30, "Input",ExpressionUUID->"f9414143-70be-4939-aad1-225021902cb9"],
Cell[651028, 13245, 337, 4, 34, "Output",ExpressionUUID->"4ddccd40-5919-4b13-8085-0f3dbc85ac05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651402, 13254, 335, 6, 30, "Input",ExpressionUUID->"18b5e7cd-4646-4b35-be74-143ca0ada92e"],
Cell[651740, 13262, 335, 4, 34, "Output",ExpressionUUID->"a90af5f8-0cf2-4a72-bcc9-929f1d990b59"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[652124, 13272, 223, 4, 38, "Subsection",ExpressionUUID->"0b32360f-b3ee-4800-a096-01512bbf5005"],
Cell[CellGroupData[{
Cell[652372, 13280, 288, 5, 30, "Input",ExpressionUUID->"65c5c66f-7e0a-41e9-a365-2ce3339d941f"],
Cell[652663, 13287, 3377, 106, 161, "Output",ExpressionUUID->"c26935b0-be84-43ea-a901-64e67efc5694"]
}, Open  ]],
Cell[656055, 13396, 394, 9, 30, "Input",ExpressionUUID->"f6f476ea-3050-4a12-891a-56b723d6dc94"],
Cell[CellGroupData[{
Cell[656474, 13409, 380, 8, 30, "Input",ExpressionUUID->"f4d9d1a6-d238-42e1-a267-4ad8ff17a8d6"],
Cell[656857, 13419, 634, 15, 48, "Output",ExpressionUUID->"76ea8679-f973-4e26-be34-3dbee9058d2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657528, 13439, 353, 7, 30, "Input",ExpressionUUID->"69d8b4de-ac83-40d8-bfa0-da7eff2f66a1"],
Cell[657884, 13448, 349, 4, 34, "Output",ExpressionUUID->"1c9aadf6-b0a2-49ac-81d1-8535364ff763"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[658282, 13458, 167, 3, 38, "Subsection",ExpressionUUID->"7dbd427e-4ca7-4921-879c-efdc14fa5844"],
Cell[CellGroupData[{
Cell[658474, 13465, 812, 17, 115, "Input",ExpressionUUID->"cf417b6a-83c8-4f54-a4b6-fd4836171b68"],
Cell[659289, 13484, 333, 4, 34, "Output",ExpressionUUID->"6ae4e60b-ad52-4b6b-96fd-3670b93b5d90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[659659, 13493, 1004, 22, 115, "Input",ExpressionUUID->"2aaac9c9-2c44-434b-94a6-333800ed285e"],
Cell[660666, 13517, 34264, 617, 201, "Output",ExpressionUUID->"5c12cf27-6665-4b60-a673-03ee9e8df241"]
}, Open  ]],
Cell[CellGroupData[{
Cell[694967, 14139, 331, 6, 30, "Input",ExpressionUUID->"b2e71aa1-8d50-43c3-9f3a-f8a9fa2f94be"],
Cell[695301, 14147, 332, 4, 34, "Output",ExpressionUUID->"27705e7c-ab69-42f6-a14c-8eeed0d0a35a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[695670, 14156, 1273, 33, 136, "Input",ExpressionUUID->"f3de77d6-628e-43eb-9022-b321a2a8eaaf"],
Cell[696946, 14191, 29070, 520, 119, "Output",ExpressionUUID->"b98cbfa5-9a7f-47a3-8325-f7825ada8c42"],
Cell[726019, 14713, 310, 4, 34, "Output",ExpressionUUID->"ce7d1050-33b8-4d86-a209-a067a536f776"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726366, 14722, 1176, 29, 157, "Input",ExpressionUUID->"86455831-f57f-4def-b206-f5307e57a595"],
Cell[727545, 14753, 34554, 629, 119, "Output",ExpressionUUID->"dc3e8374-ecad-4750-a2cf-b5dc521dd010"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762136, 15387, 276, 5, 30, "Input",ExpressionUUID->"28668bcb-5665-4086-baac-30e14ec97e95"],
Cell[762415, 15394, 316, 4, 34, "Output",ExpressionUUID->"9d3f9794-35c5-48d2-8f60-40d3ad42b0b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762768, 15403, 578, 14, 52, "Input",ExpressionUUID->"133632df-05f9-4d1a-b189-bd2443a9eb8b"],
Cell[763349, 15419, 330, 4, 34, "Output",ExpressionUUID->"e5a4c855-ecc2-49b2-82d5-6a77f9e1ed64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[763716, 15428, 540, 14, 52, "Input",ExpressionUUID->"72df940e-107e-4f7e-b768-5f81bbc56eb4"],
Cell[764259, 15444, 1452, 46, 56, "Output",ExpressionUUID->"77cc0c23-497f-4f67-8dfc-0af10bcb20d8"],
Cell[765714, 15492, 280, 4, 34, "Output",ExpressionUUID->"23c42fe8-6918-4839-91a9-716305b41720"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[766043, 15502, 269, 4, 38, "Subsection",ExpressionUUID->"7f2eb80e-c9a7-4130-98d0-b0d9a4b27678"],
Cell[766315, 15508, 1198, 28, 136, "Input",ExpressionUUID->"0455d870-b68e-4c14-b4bf-84d8a0063b33"],
Cell[CellGroupData[{
Cell[767538, 15540, 271, 4, 30, "Input",ExpressionUUID->"235ca0e4-371a-4c3d-abe1-fc79b79648d3"],
Cell[767812, 15546, 292, 3, 34, "Output",ExpressionUUID->"621f4cdc-5abb-4a00-b93c-11cea926dbef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[768141, 15554, 211, 3, 30, "Input",ExpressionUUID->"61e992b9-c361-4aa4-9eab-b6324d9bec4d"],
Cell[768355, 15559, 9468, 185, 66, "Output",ExpressionUUID->"dc7d96eb-8d9c-455d-8ed3-a5bfcdc6a815"]
}, Open  ]],
Cell[CellGroupData[{
Cell[777860, 15749, 260, 5, 30, "Input",ExpressionUUID->"a3ba12a9-c9da-4e57-9b3c-762ac0db8898"],
Cell[778123, 15756, 326, 6, 34, "Output",ExpressionUUID->"d27dee76-6e0f-4ea8-9822-d1cdb2338430"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[778498, 15768, 383, 6, 38, "Subsection",ExpressionUUID->"5ad26a07-d2f2-4b5c-9693-9cc01fcb3622"],
Cell[CellGroupData[{
Cell[778906, 15778, 214, 4, 30, "Input",ExpressionUUID->"df1218b5-689c-45f6-89bb-9ba407755aea"],
Cell[779123, 15784, 251, 4, 34, "Output",ExpressionUUID->"4c468b59-8024-40e5-9ee5-0d5feff5503a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[779411, 15793, 247, 4, 30, "Input",ExpressionUUID->"1d80d35b-57b1-44ea-892b-c9979fa5255a"],
Cell[779661, 15799, 224, 3, 34, "Output",ExpressionUUID->"2357cc73-16bf-411d-b1d8-a15cdde3d2c3"]
}, Open  ]],
Cell[779900, 15805, 206, 4, 30, "Input",ExpressionUUID->"4f9f99f5-ec64-4cc1-b0dc-a36d35571a1a"],
Cell[CellGroupData[{
Cell[780131, 15813, 232, 4, 30, "Input",ExpressionUUID->"fb49a06a-cb20-45f6-b09f-a2de4b2fd534"],
Cell[780366, 15819, 266, 4, 34, "Output",ExpressionUUID->"ba470c76-27a4-407a-95c8-cb136fdf2faf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[780669, 15828, 225, 4, 30, "Input",ExpressionUUID->"431db922-74ae-47ab-acfd-1a10eba5282c"],
Cell[780897, 15834, 379, 8, 34, "Output",ExpressionUUID->"75695af8-6acb-420c-a456-8a8a3eaa53e1"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[781337, 15849, 275, 4, 67, "Section",ExpressionUUID->"4790b61a-eba2-4adc-be63-1cbb2672c51d"],
Cell[CellGroupData[{
Cell[781637, 15857, 318, 5, 54, "Subsection",ExpressionUUID->"a4ded67b-933f-4d19-8833-767d6d36fab3"],
Cell[CellGroupData[{
Cell[781980, 15866, 571, 11, 30, "Input",ExpressionUUID->"768291da-19ba-4fb7-9151-5192bec93c53"],
Cell[782554, 15879, 1895, 35, 120, "Print",ExpressionUUID->"13c5015e-0057-4c88-b224-7d684627f7e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[784486, 15919, 328, 6, 50, "ExternalLanguage",ExpressionUUID->"0c84342d-3ad5-4952-8223-568f5c29bed3"],
Cell[784817, 15927, 285, 5, 24, "Print",ExpressionUUID->"b9cb880f-6cac-4a80-bb7e-5afd29d463ef"],
Cell[785105, 15934, 5848, 123, 61, "Output",ExpressionUUID->"256f269e-37ac-4d39-a6d2-69136f998bc9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[791002, 16063, 171, 3, 54, "Subsection",ExpressionUUID->"1e09df66-7dd3-470e-8f43-22f2ce3ede45"],
Cell[CellGroupData[{
Cell[791198, 16070, 393, 8, 30, "Input",ExpressionUUID->"c5ee7c7d-9172-4c1a-8c6c-eb0a552ba1fc"],
Cell[791594, 16080, 457, 7, 34, "Output",ExpressionUUID->"1d206f2d-c938-46e6-8690-57c816d31e1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[792088, 16092, 299, 7, 30, "Input",ExpressionUUID->"9e067448-fdc9-4324-8c84-59c07d05e183"],
Cell[792390, 16101, 921, 19, 63, "Print",ExpressionUUID->"5ba22855-3edc-43f8-be87-ff76d6fbafea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[793348, 16125, 274, 5, 30, "Input",ExpressionUUID->"7376a9ac-2357-436f-889d-2b6a4508e8a2"],
Cell[793625, 16132, 298, 5, 34, "Output",ExpressionUUID->"0bc1b09b-1f08-416a-a01c-4a792512382e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[793960, 16142, 942, 17, 30, "Input",ExpressionUUID->"a5d0d3c4-9b81-4447-8201-7025e2f7d9b2"],
Cell[794905, 16161, 5113, 107, 64, "Output",ExpressionUUID->"8640f53e-ee8e-4afd-8622-e512b233dad2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[800055, 16273, 421, 10, 30, "Input",ExpressionUUID->"711499e1-478c-45ff-8112-af7e7664eb10"],
Cell[800479, 16285, 361, 8, 34, "Output",ExpressionUUID->"5de39e0b-e0ba-430e-83aa-3a4a8852dea7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[800877, 16298, 616, 14, 73, "Input",ExpressionUUID->"f1ac9dfb-5136-4cdc-b50e-2bf871c956be"],
Cell[801496, 16314, 341, 7, 34, "Output",ExpressionUUID->"cc0f15eb-f4c0-480f-b14b-b306babe2f34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[801874, 16326, 560, 13, 101, "ExternalLanguage",ExpressionUUID->"999c7c59-262a-4bf0-a7bc-2f8e7de6c109"],
Cell[802437, 16341, 43392, 825, 115, "Output",ExpressionUUID->"9cc64751-6dbb-4872-9df8-a293d50ffb8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[845866, 17171, 281, 6, 30, "Input",ExpressionUUID->"256486fa-8d47-4361-b4ad-9ace004f752c"],
Cell[846150, 17179, 222, 4, 34, "Output",ExpressionUUID->"6c0140db-cd25-45cd-b51c-18db8aacd092"]
}, Open  ]],
Cell[CellGroupData[{
Cell[846409, 17188, 231, 5, 30, "Input",ExpressionUUID->"774fdf4f-fb14-413b-b9e0-3798957159aa"],
Cell[846643, 17195, 243, 4, 34, "Output",ExpressionUUID->"c493d909-2f5f-48ce-827c-65999f5fb3c7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[846935, 17205, 332, 5, 38, "Subsection",ExpressionUUID->"b8286afa-a7c3-41fe-ad70-56447dcdc140"],
Cell[CellGroupData[{
Cell[847292, 17214, 635, 13, 52, "Input",ExpressionUUID->"6bd58f63-542a-43f0-ae63-fee8a6382bc3"],
Cell[847930, 17229, 559, 13, 48, "Output",ExpressionUUID->"d4722640-bb70-432a-bc32-0607e35fdd5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[848526, 17247, 381, 6, 50, "ExternalLanguage",ExpressionUUID->"6c9c4f6c-73f6-42a5-a36e-72eeb167bc3c"],
Cell[848910, 17255, 25990, 466, 281, "Output",ExpressionUUID->"86458d3a-005a-47a0-94c1-95fa1768dcf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[874937, 17726, 304, 5, 50, "ExternalLanguage",ExpressionUUID->"9ccf85c6-18d4-4445-b937-43b0d0d4c5eb"],
Cell[875244, 17733, 71648, 1350, 255, "Output",ExpressionUUID->"556132bb-11a8-44d8-9d62-a92e091dae0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[946929, 19088, 292, 6, 50, "ExternalLanguage",ExpressionUUID->"20a53e88-a68d-4500-8273-8374e0beb02e"],
Cell[947224, 19096, 31134, 566, 255, "Output",ExpressionUUID->"8b403a10-63a9-42c0-86d0-d79c66e6e150"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

